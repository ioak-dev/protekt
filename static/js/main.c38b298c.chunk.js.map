{"version":3,"sources":["reducers/AuthReducer.ts","reducers/ProfileReducer.ts","reducers/index.ts","actions/types.ts","store.ts","events/MessageService.ts","components/Home/index.tsx","components/Bookmarks/Link.tsx","components/Constants.ts","components/Ux/ArcTextField.tsx","components/Ux/ArcDialog.tsx","components/Ux/ViewResolver.tsx","components/Ux/View.tsx","components/Utils.ts","components/Ux/Sidebar.tsx","components/Lib/RestTemplate.ts","components/Bookmarks/index.tsx","components/Ux/Showdown.tsx","components/Ux/ArcSelect.tsx","components/Notes/Note.tsx","components/Ux/ActionButton.tsx","components/Notes/NoteRef.tsx","components/Notes/index.tsx","actions/AuthActions.ts","components/Auth/AuthService.ts","components/Auth/Login.tsx","components/Auth/PrivateRoute.tsx","components/Auth/AuthInit.tsx","actions/ProfileActions.ts","components/App/Backdrop.tsx","components/Notification/index.tsx","components/Navigation/Links.tsx","components/Navigation/Desktop.tsx","components/Navigation/Mobile.tsx","components/Navigation/index.tsx","components/Settings/index.tsx","components/Bookmarks/BookmarkService.ts","components/Settings/SettingsService.ts","components/Auth/ResetPassword.tsx","components/App/Content.tsx","components/App/index.tsx","serviceWorker.ts","index.tsx","images/protekt_white.svg","images/protekt_black.svg"],"names":["initialState","isAuth","token","secret","name","password","theme","textSize","themeColor","combineReducers","authorization","state","arguments","length","undefined","action","type","console","log","Object","objectSpread","payload","profile","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","apply","subject","Subject","sendMessage","signal","data","next","receiveMessage","asObservable","Home","react_default","a","createElement","Fragment","className","React","Component","Link","edit","_this","props","editBookmark","bookmark","delete","deleteBookmark","id","_this2","this","tags","split","map","item","push","key","onClick","searchByTag","title","target","rel","href","createdAt","constants","API_URL_PRESIGNUP","API_URL_SIGNUP","API_URL_PRESIGNIN","API_URL_SIGNIN","API_URL_RESET","API_URL_CODE","API_URL_BOOKMARK","API_URL_BOOKMARK_IMPORT","API_URL_MAIL","API_URL_PREFERENCES","API_URL_USER_DETAILS","API_URL_NOTE","ArcTextField","label","handleChange","error","rows","multiline","rest","objectWithoutProperties","TextField","assign","value","onChange","e","margin","variant","fullWidth","ArcDialog","nextProps","visible","window","scrollTo","toggleVisibility","children","ViewResolver","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","_isMounted","viewPort","matchMedia","viewPortChange","port","setState","mobileViewPort","matches","toggleSideView","showSide","views","initializeViews","addListener","subscribe","message","_this3","Children","toArray","forEach","node","main","side","_this4","sideLabel","View","isEmptyOrSpaces","str","match","text","words","found","word","RegExp","Sidebar","toggle","show","hide","elements","icon","number","animate","baseUrl","process","autoGeneratedFields","unprotectedEndpoints","httpGet","endpoint","headers","skipFields","axios","get","then","response","find","includes","decryptContent","Promise","resolve","httpPost","encryptContent","post","httpPut","put","httpDelete","content","Array","isArray","encryptedContent","encryptObject","encrypt","decryptObject","decrypt","salt","config","cipher","iter","ks","CryptoJS","enc","Base64","stringify","Utf8","parse","sjcl","ciphertext","queryString","require","Bookmarks","toggleEditDialog","isEditDialogOpen","editDialogLabel","_id","bookmarkId","that","assertThisInitialized","Authorization","status","duration","initializeBookmarks","catch","logout","clearSearch","view","items","isFiltered","searchtext","tagName","searchPref","search","event","preventDefault","filter","toggleSearchPref","pref","defineProperty","addBookmark","currentTarget","firstLoad","sidebarElements","addNew","location","query","q","startsWith","listview","Bookmarks_Link","components_Ux_ArcDialog","Ux_ArcTextField","components_Ux_ViewResolver","Ux_View","components_Ux_Sidebar","method","onSubmit","noValidate","Switch","checked","inputProps","aria-label","Showdown","html","showdown","Converter","tables","makeHtml","source","dangerouslySetInnerHTML","__html","useStyles","makeStyles","root","display","flexWrap","formControl","minWidth","selectEmpty","marginTop","spacing","ArcSelect","classes","objects","first","firstAction","dropdownList","MenuItem","FormControl","InputLabel","htmlFor","Select","autoWidth","maxWidth","Note","deleteNote","showEdit","editNote","note","notebook","flag","hideEdit","save","newNotebook","saveNote","togglepreview","preview","flags","Ux_Showdown","Ux_ArcSelect","notebooks","ActionButton","leftLabel","rightLabel","leftAction","rightAction","removeMd","NoteRef","selectNote","Ux_ActionButton","selected","showTag","substring","Notes","sortTypes","created","last modified","note name","sortOrders","newNote","toggleAddDialog","isAddDialogOpen","resetForm","existingNotebook","closeAllDialog","toggleFilter","showFilter","searchResults","selectedNoteId","notebookFilter","notebookList","toConsumableArray","Set","applyFilter","array","property","isReverseOrder","noteList","sortBy","sortOrder","sort","o1","o2","filteredNotebookList","noteId","initializeNotes","saveNoteEvent","attributes","handleNotebookFilterChange","existingNotebookList","noteview","Notes_Note","listNoteRef","Notes_NoteRef","keys","getAuth","dispatch","addAuth","removeAuth","preSignin","email","signin","problem","solution","JSON","Login","success","signup","test","sentEmailWithCode","sentPasswordChangeEmail","rand","Math","random","resetCode","history","newuser","connect","PrivateRoute","react_router","path","render","AuthInit","getProfile","setProfile","Backdrop","backdrop","Notification","spinner","notification","setTimeout","Links","toggleMenu","menu","react_router_dom","to","activeClassName","Desktop","login","showSettings","transparent","src","protekt_black","alt","protekt_white","Navigation_Links","toggleSettings","Mobile","Navigation","toggleDarkMode","changeTextSize","size","changeThemeColor","color","mobilemenu","chooseTheme","transparentNavBar","reloadProfile","Navigation_Desktop","Navigation_Mobile","withRouter","Settings","persistProfile","changePassword","oldPassword","newPassword","repeatPassword","checkOldPassword","updateUserDetailsImpl","updateUserDetails","newData","fileChoosen","reader","FileReader","onload","result","readAsText","files","exportBookmark","staticContent","i","htmlContent","sendExportEmail","ResetPassword","resetPassword","code","themes","themecolor_1","getTheme","themecolor_2","themecolor_3","themecolor_4","themecolor_5","themecolor_6","createMuiTheme","palette","primary","secondary","Content","react_router_dom_min","Auth_AuthInit","App_Backdrop","components_Notification","MuiThemeProvider","components_Navigation","exact","Home_Home","components_Auth_Login","Auth_ResetPassword","Auth_PrivateRoute","components_Bookmarks","components_Notes","components_Settings","App","es","App_Content","Boolean","hostname","ReactDOM","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.c38b298c.chunk.js","sourcesContent":["import { GET_AUTH, ADD_AUTH, REMOVE_AUTH } from '../actions/types';\r\n\r\nconst initialState = {\r\n    isAuth: false,\r\n    token: '',\r\n    secret: '',\r\n    name: '',\r\n    password: ''\r\n}\r\n\r\nexport default function(state = initialState, action) {\r\n    switch(action.type) {\r\n        case GET_AUTH:\r\n            console.log('GET_AUTH reducer');\r\n            return {\r\n                ...state\r\n            };\r\n        case ADD_AUTH:\r\n            console.log('ADD_AUTH reducer');\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            };\r\n        case REMOVE_AUTH:\r\n            console.log('REMOVE_AUTH reducer');\r\n            return {\r\n                ...state,\r\n                isAuth: false,\r\n                token: '',\r\n                secret: '',\r\n                name: '',\r\n                password: ''\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import { GET_PROFILE, SET_PROFILE } from '../actions/types';\r\n\r\nconst initialState = {\r\n    theme: 'theme_dark',\r\n    textSize: 'textsize_medium',\r\n    themeColor: 'themecolor_6'\r\n}\r\n\r\nexport default function(state = initialState, action) {\r\n    switch(action.type) {\r\n        case GET_PROFILE:\r\n            console.log('GET_PROFILE reducer');\r\n            return {\r\n                ...state\r\n            };\r\n        case SET_PROFILE:\r\n            console.log('SET_PROFILE reducer');\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport AuthReducer from './AuthReducer';\r\nimport ProfileReducer from './ProfileReducer';\r\n\r\nexport default combineReducers({\r\n    authorization: AuthReducer,\r\n    profile: ProfileReducer\r\n})","export const GET_AUTH = 'GET_AUTH';\r\nexport const ADD_AUTH = 'ADD_AUTH';\r\nexport const REMOVE_AUTH = 'REMOVE_AUTH';\r\n\r\nexport const GET_PROFILE = 'GET_PROFILE';\r\nexport const SET_PROFILE = 'SET_PROFILE';","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers'\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(\r\n        applyMiddleware(...middleware)//,\r\n        // window[\"__REDUX_DEVTOOLS_EXTENSION__\"] && window[\"__REDUX_DEVTOOLS_EXTENSION__\"]()\r\n    )\r\n);\r\n\r\nexport default store;\r\n","import { Subject, Observable } from 'rxjs';\r\nimport { Message } from '../components/Types/GeneralTypes';\r\n\r\nconst subject = new Subject<Message>();\r\n\r\nexport function sendMessage(name: string, signal = true, data?: {}) {\r\n    subject.next({\r\n        name: name,\r\n        signal: signal,\r\n        data: data\r\n    });\r\n}\r\n\r\nexport function clearMessages() {\r\n    subject.next();\r\n}\r\n\r\nexport function receiveMessage(): Observable<Message> {\r\n    return subject.asObservable();\r\n}","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport './style.scss';\r\n\r\nimport { sendMessage } from '../../events/MessageService';\r\nimport { Profile } from '../Types/GeneralTypes';\r\n\r\ninterface Props {\r\n  setProfile: Function,\r\n  profile: Profile,\r\n  match: any,\r\n  logout: Function\r\n}\r\n\r\ninterface State {\r\n\r\n}\r\n\r\nexport default class Home extends React.Component<Props, State> {\r\n  componentWillMount() {\r\n    sendMessage('navbar-transparency');\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    sendMessage('navbar-transparency', false);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"home\">\r\n          {/* <div className=\"section parallax bg1\" />\r\n          <div className=\"section static bg1 odd\">\r\n            <h3>A bookmarking app like never before</h3>\r\n            <p>Take your link to the web wherever you go, with the most secure bookmark and note taking app</p>\r\n            <br />\r\n            <p><NavLink to=\"/login\" className=\"navitem\" activeClassName=\"active\">Sign up</NavLink>&nbsp;for free</p>\r\n          </div> */}\r\n\r\n          <div className=\"section parallax bg bg2\" />\r\n          <div className=\"section static bg2 even\">\r\n            <h3>Secured suite of applications</h3>\r\n            <p>Designed with security as a primary factor from ground up</p>\r\n            <p>Your passwords never leaves your workstation</p>\r\n            <p>Our servers have zero knowledge about your password</p>\r\n          </div>\r\n\r\n          {/* <div className=\"section parallax bg3\" />\r\n          <div className=\"section static bg3 odd\">\r\n            <h3>Premium features</h3>\r\n            <p>Get premium features free for lifetime. We standby free software for all</p>\r\n          </div>\r\n\r\n          <div className=\"section parallax bg4\" />\r\n          <div className=\"section static bg4 even\">\r\n            <h3>Don't mix up personal and business</h3>\r\n            <p>With the help of workspaces, you can now work in isolated containers</p>\r\n          </div>\r\n\r\n          <div className=\"section parallax bg5\" />\r\n          <div className=\"section static bg5 odd\">\r\n            <h3>We love open source</h3>\r\n            <p>Our codebase is 100% available for the community to do peer review and audit for any security flaws</p>\r\n          </div>\r\n\r\n          <div className=\"section parallax bg6\" />\r\n          <div className=\"section static bg6 even\">\r\n            <h3>Clean clutter free interface</h3>\r\n            <p>Modern interface with a clutter free design to keep you in focus on your activity</p>\r\n          </div>\r\n\r\n          <div className=\"section parallax bg7\" />\r\n          <div className=\"section static bg7 odd\">\r\n            <h3>Travel to the future</h3>\r\n            <p>We are evolving for the future. More features on the way. You can watch our roadmap here</p>\r\n          </div> */}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport './style.scss';\r\n\r\ninterface Props {\r\n    editBookmark: Function,\r\n    deleteBookmark: Function,\r\n    searchByTag: Function,\r\n    bookmark: any,\r\n    id: string\r\n}\r\ninterface State {\r\n}\r\n\r\nclass Link extends Component<Props, State> {\r\n\r\n    edit = () => {\r\n        this.props.editBookmark(this.props.bookmark);\r\n    }\r\n\r\n    delete = () => {\r\n        this.props.deleteBookmark(this.props.id);\r\n    }\r\n\r\n    render() {\r\n        const tags: any = [];\r\n        if (this.props.bookmark.tags) {\r\n            this.props.bookmark.tags.split(\" \").map(item => {\r\n                tags.push(<div className=\"tag\" key={item} onClick={() => this.props.searchByTag(item)}>{item}</div>);\r\n            })\r\n        }\r\n        \r\n        return (\r\n            <div>\r\n                <div className=\"title typography-4\">{this.props.bookmark.title}\r\n                    <div className=\"action-icon\">\r\n                        <i onClick={this.edit} className=\"material-icons\">edit</i>\r\n                        <i onClick={this.delete} className=\"material-icons\">delete</i>\r\n                    </div>\r\n                </div>\r\n                <div className=\"url typography-6\"><a target=\"_blank\" rel=\"noopener noreferrer\" href={this.props.bookmark.href}>{this.props.bookmark.href}</a></div>\r\n                <div className=\"timestamp typography-6 space-bottom-1\">{this.props.bookmark.createdAt}</div>\r\n                {tags}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Link;\r\n","export const constants = {\r\n    API_URL_PRESIGNUP: \"/auth/keys\",\r\n    API_URL_SIGNUP: \"/auth/signup\",\r\n    API_URL_PRESIGNIN: \"/auth/keys/\",\r\n    API_URL_SIGNIN: \"/auth/signin\",\r\n    API_URL_RESET: \"/auth/reset\",\r\n    API_URL_CODE: \"/auth/sendResetCode\",\r\n\r\n    API_URL_BOOKMARK: \"/bookmark\",\r\n    API_URL_BOOKMARK_IMPORT: \"/bookmark/import\",\r\n    API_URL_MAIL: \"/bookmark/sendExportMail\",\r\n    API_URL_PREFERENCES: \"/user/preferences\",\r\n    API_URL_USER_DETAILS: \"/user/details\",\r\n\r\n    API_URL_NOTE: \"/note\"\r\n}\r\n","import React from 'react';\r\nimport { TextField } from '@material-ui/core';\r\n\r\ninterface Props {\r\n    id: string,\r\n    label: string,\r\n    handleChange: any,\r\n    error?: boolean,\r\n    data: any,\r\n    rows?: number,\r\n    multiline?: boolean,\r\n    type?: string\r\n};\r\nfunction ArcTextField(props: Props) {\r\n    const { id, label, handleChange, error, rows, multiline, data, type,  ...rest } = props;\r\n    return (\r\n        <TextField\r\n                id={id}\r\n                label={label}\r\n                name={id}\r\n                value={data[id]}\r\n                onChange={e => handleChange(e)}\r\n                margin=\"normal\"\r\n                variant=\"standard\"\r\n                fullWidth\r\n                error={error}\r\n                multiline={multiline}\r\n                rows={rows}\r\n                type={type}\r\n                {...rest}\r\n                />\r\n    )\r\n}\r\n\r\nexport default ArcTextField;\r\n","import React, { Component } from 'react';\r\nimport './ArcDialog.scss';\r\nimport { sendMessage } from '../../events/MessageService';\r\n\r\ninterface Props {\r\n    visible: boolean,\r\n    title: string,\r\n    toggleVisibility: any\r\n}\r\n\r\ninterface State {\r\n\r\n}\r\n\r\nclass ArcDialog extends Component<Props, State> {\r\n    componentWillReceiveProps(nextProps) {\r\n        if (this.props.visible !== nextProps.visible) {\r\n            if (nextProps.visible) {\r\n                sendMessage('dialog');\r\n                window.scrollTo(500, 0);\r\n            } else {\r\n                sendMessage('dialog', false);\r\n            }\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <>\r\n            <div className=\"dialog-outer\">\r\n                <div className={(this.props.visible ? \"dialog show\" : \"dialog hide\")}>\r\n                    {this.props.title && <div className=\"header\">{this.props.title}<i className=\"material-icons\" onClick={this.props.toggleVisibility}>close</i></div>}\r\n                    <div className=\"container\">\r\n                        {this.props.children}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ArcDialog;","import React, { Component } from 'react';\r\nimport './ViewResolver.scss';\r\nimport { sendMessage, receiveMessage } from '../../events/MessageService';\r\n\r\ninterface Props {\r\n    sideLabel?: string\r\n}\r\n\r\ninterface State {\r\n    views: any,\r\n    main?: any,\r\n    side?: any,\r\n    showSide: boolean,\r\n    mobileViewPort: any\r\n}\r\n\r\nclass ViewResolver extends Component<Props, State> {\r\n\r\n    _isMounted = false;\r\n    \r\n    viewPort = window.matchMedia(\"(max-width: 767px)\");\r\n\r\n    viewPortChange = (port) => {\r\n        this.setState({\r\n            mobileViewPort: port.matches\r\n        });\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            views: this.props.children,\r\n            showSide: false,\r\n            mobileViewPort: false\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.initializeViews();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this._isMounted = true;\r\n        this.viewPortChange(this.viewPort);\r\n        this.viewPort.addListener(this.viewPortChange);\r\n\r\n        receiveMessage().subscribe(message => {\r\n            if (this._isMounted) {\r\n                if (message.name === 'sidebar') {\r\n                    this.setState({\r\n                        showSide: message.signal\r\n                    })\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this._isMounted = false;\r\n    }\r\n\r\n    initializeViews() {\r\n        React.Children.toArray(this.state.views).forEach((node) => {\r\n            // node.type.name is minified after build and so static build result has different alphabet\r\n            // if (node.type.name === 'View') {\r\n                if (node.props.main) {\r\n                    this.setState({\r\n                        main: node\r\n                    })\r\n                } else if (node.props.side) {\r\n                    this.setState({\r\n                        side: node\r\n                    })\r\n                }\r\n            // }\r\n        })\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.children) {\r\n            this.setState({\r\n                views: nextProps.children\r\n            }, () => {\r\n                this.initializeViews();\r\n            })\r\n        }\r\n    }\r\n\r\n    toggleSideView = () => {\r\n        sendMessage('sidebar', !this.state.showSide);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n            {!this.state.mobileViewPort && <div className=\"view-desktop\">\r\n                {this.state.side && <div className=\"view-side\">\r\n                    {this.state.side}\r\n                </div>}\r\n                <div className={'view-content' + (this.state.side ? ' side-present' : '')}>\r\n                    {this.state.main}\r\n                </div>\r\n            </div>}\r\n\r\n            {this.state.mobileViewPort && <div className=\"view-mobile\">\r\n                <div className={(this.state.showSide ? \"slider show\" : \"slider hide\")}>\r\n                    <div className=\"topbar\" onClick={this.toggleSideView}>\r\n                        <div>\r\n                            <button className=\"default hidden\" onClick={this.toggleSideView}>\r\n                                {!this.state.showSide && <><i className=\"material-icons\">expand_more</i>{this.props.sideLabel ? this.props.sideLabel : 'Menu'}</>}\r\n                                {this.state.showSide && <><i className=\"material-icons\">expand_less</i>Collapse</>}\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"view-side\">\r\n                        {this.state.showSide && this.state.side}\r\n                    </div>\r\n                </div>\r\n                {!this.state.showSide && <div className=\"view-main\">\r\n                    {this.state.main}\r\n                </div>}\r\n            </div>}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ViewResolver;","import React, { Component } from 'react';\r\n\r\ninterface Props {\r\n    main?: any,\r\n    side?: any\r\n}\r\n\r\ninterface State {\r\n}\r\n\r\nclass View extends Component<Props, State> {\r\n    render() {\r\n        return (\r\n            <div>\r\n               {/* {this.props} */}\r\n               {this.props.children}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default View;","export function isEmptyOrSpaces(str){\r\n    return str === null || str.match(/^ *$/) !== null;\r\n}\r\n\r\nexport function match(text, words) {\r\n    let found = false;\r\n    if (words) {\r\n        words.split(' ').forEach(word => {\r\n            if (text.match(new RegExp('(\\\\w*'+ word +'\\\\w*)','gi'))) {\r\n                found = true;\r\n            }\r\n        });\r\n    }\r\n    return found;\r\n}\r\n\r\nexport function sort(array, property, isReverseOrder) {\r\n    const result = array.sort(function(o1,o2){\r\n        if (isReverseOrder) {\r\n            return o1[property] > o2[property] ? -1 : o1[property] < o2[property] ? 1 : 0;\r\n        } else {\r\n            return o1[property] < o2[property] ? -1 : o1[property] > o2[property] ? 1 : 0;\r\n        }\r\n    });\r\n\r\n    return result;\r\n}","import React, { Component } from 'react';\r\nimport './Sidebar.scss';\r\nimport { sendMessage, receiveMessage } from '../../events/MessageService';\r\n\r\ninterface Props {\r\n    show?: boolean,\r\n    elements?: Array<string>,\r\n    label: string,\r\n    icon: string,\r\n    number?: number,\r\n    animate?: boolean\r\n}\r\n\r\ninterface State {\r\n    show: boolean,\r\n    elements: Array<string>\r\n}\r\n\r\nclass Sidebar extends Component<Props, State> {\r\n\r\n    _isMounted = false;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            show: this.props.show ? true : false,\r\n            elements: this.props.elements ? this.props.elements : []\r\n        }\r\n    }\r\n\r\n    toggle = () => {\r\n        this.setState({\r\n            show: !this.state.show\r\n        }, () => sendMessage('sidebarExpanded', this.state.show, {label: this.props.label}));\r\n    }\r\n\r\n    hide = () => {\r\n        this.setState({\r\n            show: false\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this._isMounted = true;\r\n        receiveMessage().subscribe(message => {\r\n            if (this._isMounted) {\r\n                if (message.name === 'sidebarExpanded' && message.signal && message.data && message.data.label !== this.props.label) {\r\n                    this.setState({\r\n                        show: false\r\n                    })\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this._isMounted = false;\r\n    }\r\n\r\n    render() {\r\n        const elements = this.state.elements.map((item: any) => (\r\n            <div key={item.label} className=\"element\" onClick={item.action}><i className=\"material-icons\">{item.icon}</i>{item.label}</div>\r\n        ))\r\n        return (            \r\n            <div className=\"sidebar\">\r\n                <div className={this.state.show ? \"header active\" : \"header\"} onClick={this.toggle}>\r\n                    <div className=\"label\">\r\n                        <i className=\"material-icons\">{this.props.icon}</i>\r\n                        {this.props.label}\r\n                        {this.props.number !== undefined && <div className=\"number\">{this.props.number}</div>}\r\n                    </div>\r\n                    {/* <div className=\"aria\"><i className=\"material-icons\">{this.state.show ? 'expand_less' : 'expand_more'}</i></div> */}\r\n                    <div className=\"aria\"><i className={this.state.show ? \"material-icons collapse\" : \"material-icons\"}>keyboard_arrow_left</i></div>\r\n                </div>\r\n                <div className={this.state.show ? \"content show \" + (this.props.animate ? \"animate\" : \"static\") : \"content hide \" + (this.props.animate ? \"animate\" : \"static\")}>\r\n                    {elements}\r\n                    {this.props.children}\r\n                </div>\r\n            </div>\r\n            \r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default Sidebar;","import axios from \"axios\";\r\nimport sjcl from 'ioak-sjcl';\r\nimport CryptoJS from 'crypto-js';\r\n\r\nconst baseUrl = process.env.REACT_APP_API_URL;\r\n\r\nconst autoGeneratedFields = ['_id', 'id', 'createdAt', 'lastModifiedAt', 'userId'];\r\n\r\nconst unprotectedEndpoints = [\"/auth/keys\", \"/auth/signup\", \"/auth/keys/\", \"/auth/signin\", \"/auth/reset\", \"/auth/sendResetCode\"];\r\n\r\nexport function httpGet(endpoint: string, headers: any, password: string = \"\", skipFields: Array<string> = []) {\r\n    return axios.get(baseUrl + endpoint, headers)\r\n        .then(response => {\r\n            if (!unprotectedEndpoints.find((item => endpoint.includes(item)))) {\r\n                response.data = decryptContent(response.data, password, skipFields);\r\n            }\r\n            return Promise.resolve(response);\r\n        }\r\n    )\r\n}\r\n\r\nexport function httpPost(endpoint: string, payload: any, headers: any, password: string = \"\", skipFields: Array<string> = []) {\r\n    if (!unprotectedEndpoints.find((item => endpoint.includes(item)))) {\r\n        payload = encryptContent(payload, password, skipFields);\r\n    }\r\n    return axios.post(baseUrl + endpoint, payload, headers)\r\n        .then(response => {\r\n            if (!unprotectedEndpoints.find((item => endpoint.includes(item)))) {\r\n                response.data = decryptContent(response.data, password, skipFields);\r\n            }\r\n            return Promise.resolve(response);\r\n        }\r\n    );\r\n}\r\n\r\nexport function httpPut(endpoint: string, payload: any, headers: any, password: string = \"\", skipFields: Array<string> = []) {\r\n    if (!unprotectedEndpoints.find((item => endpoint.includes(item)))) {\r\n        payload = encryptContent(payload, password, skipFields);\r\n    }\r\n    return axios.put(baseUrl + endpoint, payload, headers)\r\n        .then(response => {\r\n            if (!unprotectedEndpoints.find((item => endpoint.includes(item)))) {\r\n                response.data = decryptContent(response.data, password, skipFields);\r\n            }\r\n            return Promise.resolve(response);\r\n        }\r\n        );\r\n    //     .then(function(response) {\r\n    //         return Promise.resolve(response);\r\n    //     }\r\n    // )\r\n}\r\n\r\nexport function httpDelete(endpoint: string, headers: any) {\r\n    return axios.delete(baseUrl + endpoint, headers)\r\n    //     .then(function(response) {\r\n    //         return Promise.resolve(response);\r\n    //     }\r\n    // )\r\n}\r\n\r\nfunction encryptContent(content, password: string = \"\", skipFields: Array<string> = []) {\r\n    if (Array.isArray(content)) {\r\n        let encryptedContent: any = [];\r\n        content.forEach(item => encryptedContent.push(encryptObject(item, password, skipFields)));\r\n        return encryptedContent;\r\n    } else {\r\n        return encryptObject(content, password, skipFields);\r\n    }\r\n\r\n}\r\n\r\nfunction encryptObject(content, password: string = \"\", skipFields: Array<string> = []) {\r\n    let encryptedContent = {};\r\n    for(let key in content) {\r\n        if (content[key] && !skipFields.includes(key) && !autoGeneratedFields.includes(key)) {\r\n            encryptedContent[key] = encrypt(password, content[key], 'aasd');\r\n        } else {\r\n            encryptedContent[key] = content[key];\r\n        }\r\n    }\r\n    return encryptedContent;\r\n}\r\n\r\n\r\nfunction decryptContent(encryptedContent, password: string = \"\", skipFields: Array<string> = []) {\r\n    if (Array.isArray(encryptedContent)) {\r\n        let content: any = [];\r\n        encryptedContent.forEach(item => content.push(decryptObject(item, password, skipFields)));\r\n        return content;\r\n    } else {\r\n        return decryptObject(encryptedContent, password, skipFields);\r\n    }\r\n\r\n}\r\n\r\nfunction decryptObject(encryptedContent, password: string = \"\", skipFields: Array<string> = []) {\r\n    let content = {};\r\n    \r\n    for(let key in encryptedContent) {\r\n        if (encryptedContent[key] && !skipFields.includes(key) && !autoGeneratedFields.includes(key)) {\r\n            content[key] = decrypt(password, encryptedContent[key]);\r\n        } else {\r\n            content[key] = encryptedContent[key];\r\n        }\r\n    }\r\n    return content;\r\n}\r\n\r\nfunction encrypt(password, message, salt) {\r\n    const config = {\r\n        cipher: 'aes',\r\n        iter: '12000',\r\n        ks: 256,\r\n        salt: CryptoJS.enc.Base64.stringify((CryptoJS.enc.Utf8.parse(salt)))\r\n    }\r\n    return sjcl.encrypt(password, message, config);\r\n}\r\n\r\nfunction decrypt(password, ciphertext) {\r\n    return sjcl.decrypt(password, ciphertext);\r\n}","import React, { Component } from 'react';\r\nimport Link from './Link';\r\nimport { constants } from '../Constants';\r\nimport ArcTextField from '../Ux/ArcTextField';\r\nimport ArcDialog from '../Ux/ArcDialog';\r\nimport ViewResolver from '../Ux/ViewResolver';\r\nimport View from '../Ux/View';\r\nimport './style.scss';\r\nimport { Switch } from '@material-ui/core';\r\nimport { isEmptyOrSpaces, match } from '../Utils';\r\nimport Sidebar from '../Ux/Sidebar';\r\nimport { httpGet, httpPut, httpDelete } from '../Lib/RestTemplate';\r\nimport { sendMessage } from '../../events/MessageService';\r\nimport { Authorization } from '../Types/GeneralTypes';\r\n\r\nconst queryString = require('query-string');\r\n\r\ninterface Props {\r\n    authorization: Authorization\r\n    location: any,\r\n    logout: Function\r\n}\r\n\r\ninterface State {\r\n    items: any,\r\n    view: any,\r\n\r\n    searchtext: string,\r\n    isFiltered: boolean,\r\n\r\n    id?: string,\r\n    title: string,\r\n    href: string,\r\n    tags: string,\r\n    editDialogLabel: string,\r\n    isEditDialogOpen: boolean,\r\n    firstLoad: boolean,\r\n\r\n    searchPref: {\r\n        title: boolean,\r\n        tags: boolean,\r\n        href: boolean,\r\n        content: boolean\r\n    },\r\n\r\n    sidebarElements: any\r\n}\r\nclass Bookmarks extends Component<Props, State> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            items: [],\r\n            view: [],\r\n            isEditDialogOpen: false,\r\n\r\n            searchtext: '',\r\n            isFiltered: false,\r\n\r\n            id: undefined,\r\n            title: '',\r\n            href: '',\r\n            tags: '',\r\n            editDialogLabel: 'Add',\r\n            firstLoad: true,\r\n\r\n            searchPref: {\r\n                title: true,\r\n                tags: true,\r\n                href: true,\r\n                content: true\r\n            },\r\n\r\n            sidebarElements: {\r\n                addNew: [\r\n                    {\r\n                        label: 'New Bookmark',\r\n                        action: this.toggleEditDialog,\r\n                        icon: 'note_add'\r\n                    }\r\n                ]\r\n            }\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        if (this.props.location.search) {\r\n            const query = queryString.parse(this.props.location.search);\r\n            if (query && query.q) {\r\n                if (query.q.startsWith('tags')) {\r\n                    this.setState({\r\n                        searchPref: {\r\n                            title: false,\r\n                            tags: true,\r\n                            href: true,\r\n                            content: false\r\n                        }\r\n                    })\r\n                }\r\n                this.setState({\r\n                    searchtext: query.q,\r\n                    isFiltered: true\r\n                })\r\n            }\r\n        }\r\n\r\n        if(this.state.firstLoad && this.props.authorization.isAuth) {\r\n            this.initializeBookmarks(this.props.authorization);\r\n            this.setState({firstLoad: false})\r\n        }\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        if (this.state.firstLoad && nextProps.authorization) {\r\n            this.initializeBookmarks(nextProps.authorization);\r\n            this.setState({firstLoad: false})\r\n        }\r\n    }\r\n\r\n    initializeBookmarks(authorization) {\r\n        const that = this;\r\n        httpGet(constants.API_URL_BOOKMARK,\r\n            {\r\n                headers: {\r\n                    Authorization: 'Bearer ' + authorization.token\r\n                }\r\n            }, authorization.password)\r\n            .then(function(response) {\r\n                that.setState({items: response.data, view: response.data});\r\n                if (that.state.isFiltered) {\r\n                    that.search();\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    toggleEditDialog = () => {\r\n        this.setState({\r\n            isEditDialogOpen: !this.state.isEditDialogOpen,\r\n            id: undefined,\r\n            title: '',\r\n            href: '',\r\n            tags: '',\r\n            editDialogLabel: 'Add'\r\n        })\r\n    }\r\n\r\n    editBookmark = (bookmark) => {\r\n        this.setState({\r\n            isEditDialogOpen: true,\r\n            id: bookmark._id,\r\n            title: bookmark.title,\r\n            href: bookmark.href,\r\n            tags: bookmark.tags,\r\n            editDialogLabel: 'Save'\r\n        })\r\n    }\r\n\r\n    deleteBookmark = (bookmarkId) => {\r\n        const that = this;\r\n        httpDelete(constants.API_URL_BOOKMARK + \"/\" + bookmarkId,\r\n        {\r\n            headers: {\r\n                Authorization: 'Bearer ' + this.props.authorization.token\r\n            }\r\n        })\r\n        .then(function(response) {\r\n            if (response.status === 201) {\r\n                sendMessage('notification', true, {type: 'success', message: 'Bookmark deleted', duration: 5000});\r\n                that.initializeBookmarks(that.props.authorization);\r\n            }\r\n        })\r\n        .catch((error) => {\r\n            if (error.response.status === 401) {\r\n                that.props.logout(null, 'failure', 'Session expired. Login again');\r\n            }\r\n        })\r\n    }\r\n\r\n    clearSearch = () => {\r\n        this.setState({\r\n            view: this.state.items,\r\n            isFiltered: false,\r\n            searchtext: ''\r\n        })\r\n        sendMessage('sidebar', false)\r\n    }\r\n\r\n    searchByTag = (tagName) => {\r\n        \r\n        this.setState({\r\n            searchPref: {\r\n                ...this.state.searchPref,\r\n                title: false,\r\n                tags: true,\r\n                href: false\r\n            },\r\n            searchtext: tagName,\r\n            isFiltered: true\r\n        }, () => this.initializeBookmarks(this.props.authorization));\r\n    }\r\n\r\n    search = (event?: any) => {\r\n        if (event) {\r\n            event.preventDefault();\r\n        }\r\n\r\n        if (isEmptyOrSpaces(this.state.searchtext)) {\r\n            this.setState({\r\n                view: this.state.items,\r\n                isFiltered: false\r\n            });\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            view: this.state.items.filter((item) => {\r\n                if (this.state.searchPref.title && match(item.title, this.state.searchtext)) {\r\n                    return true;\r\n                } else if (this.state.searchPref.tags && match(item.tags, this.state.searchtext)) {\r\n                    return true;\r\n                } else if (this.state.searchPref.href && match(item.href, this.state.searchtext)) {\r\n                    return true;\r\n                }\r\n            }),\r\n            isFiltered: true\r\n        });\r\n        sendMessage('sidebar', false)\r\n    }\r\n\r\n    toggleSearchPref = (pref) => {\r\n        this.setState({\r\n            searchPref: {\r\n                ...this.state.searchPref,\r\n                [pref]: !this.state.searchPref[pref]\r\n            }\r\n        })\r\n    }\r\n\r\n    addBookmark= () => {\r\n        const that = this;\r\n\r\n        let bookmark = {\r\n            id: this.state.id,\r\n            title: this.state.title,\r\n            href: this.state.href,\r\n            tags: this.state.tags\r\n        }\r\n\r\n        if (isEmptyOrSpaces(bookmark.title)) {\r\n            sendMessage('notification', true, {type: 'failure', message: 'Title / description missing', duration: 5000});\r\n            return;\r\n        }\r\n\r\n        if (isEmptyOrSpaces(bookmark.href)) {\r\n            sendMessage('notification', true, {type: 'failure', message: 'Website URL / Link is missing', duration: 5000});\r\n            return;\r\n        }\r\n\r\n        if (isEmptyOrSpaces(bookmark.tags)) {\r\n            bookmark.tags = 'unsorted';\r\n        }\r\n\r\n        httpPut(constants.API_URL_BOOKMARK, bookmark,\r\n        {\r\n            headers: {\r\n                Authorization: 'Bearer ' + this.props.authorization.token\r\n            }\r\n        }, this.props.authorization.password)\r\n        .then(function(response) {\r\n            if (response.status === 201) {\r\n                sendMessage('notification', true, {type: 'success', message: 'Bookmark created', duration: 5000});\r\n                that.toggleEditDialog();\r\n\r\n                that.initializeBookmarks(that.props.authorization);\r\n            }\r\n        })\r\n        .catch((error) => {\r\n            if (error.response.status === 401) {\r\n                that.props.logout(null, 'failure', 'Session expired. Login again');\r\n            }\r\n        })\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState(\r\n            {\r\n                ...this.state,\r\n                [event.currentTarget.name]: event.currentTarget.value\r\n            }\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const listview = this.state.view.map(item => (\r\n            <div key={item._id}>\r\n            <Link id={item._id} bookmark={item} editBookmark={this.editBookmark} deleteBookmark={this.deleteBookmark} searchByTag={this.searchByTag} />\r\n            <br />\r\n            </div>\r\n        ))\r\n        return (\r\n            <div className=\"bookmarks\">\r\n                <ArcDialog title=\"Add Bookmark\" visible={this.state.isEditDialogOpen} toggleVisibility={this.toggleEditDialog}>\r\n                    <ArcTextField label=\"Title\" data={this.state} id=\"title\" handleChange={e => this.handleChange(e)} />\r\n                    <ArcTextField label=\"URL\" data={this.state} id=\"href\" handleChange={e => this.handleChange(e)} />\r\n                    <ArcTextField label=\"Tags\" data={this.state} id=\"tags\" handleChange={e => this.handleChange(e)} />\r\n                    <div className=\"actions\">\r\n                        <button onClick={this.toggleEditDialog} className=\"default disabled\"><i className=\"material-icons\">close</i>Cancel</button>\r\n                        <button onClick={this.addBookmark} className=\"primary block\"><i className=\"material-icons\">double_arrow</i>{this.state.editDialogLabel}</button>\r\n                    </div>\r\n                </ArcDialog>\r\n\r\n                <ViewResolver>\r\n                    <View main>\r\n                        {listview}\r\n                    </View>\r\n                    <View side>\r\n                        <div className=\"filter-container\">\r\n                            <div className=\"section-main\">\r\n                                <Sidebar label=\"Add New\" elements={this.state.sidebarElements['addNew']} icon=\"add\" animate />\r\n                                <Sidebar label=\"Search\" elements={this.state.sidebarElements['search']} icon=\"search\" animate number={this.state.isFiltered ? this.state.view.length : undefined}>\r\n                                    <form method=\"GET\" onSubmit={this.search} noValidate>\r\n                                    <div className=\"space-top-2 space-left-4 space-right-4\"><ArcTextField label=\"Keywords\" id=\"searchtext\" data={this.state} handleChange={e => this.handleChange(e)} /></div>\r\n                                    </form>\r\n                                    <div className=\"typography-5 space-top-2 space-left-4\">\r\n                                        <Switch\r\n                                            checked={this.state.searchPref.title}\r\n                                            onChange={() => this.toggleSearchPref('title')}\r\n                                            inputProps={{ 'aria-label': 'primary checkbox' }}/>\r\n                                        Include title\r\n                                    </div>\r\n                                    <div className=\"typography-5 space-top-2 space-left-4\">\r\n                                        <Switch\r\n                                            checked={this.state.searchPref.tags}\r\n                                            onChange={() => this.toggleSearchPref('tags')}\r\n                                            inputProps={{ 'aria-label': 'primary checkbox' }}/>\r\n                                        Include tags\r\n                                    </div>\r\n                                    <div className=\"typography-5 space-top-2 space-left-4\">\r\n                                        <Switch\r\n                                            checked={this.state.searchPref.href}\r\n                                            onChange={() => this.toggleSearchPref('href')}\r\n                                            inputProps={{ 'aria-label': 'primary checkbox' }}/>\r\n                                        Include URL\r\n                                    </div>\r\n                                    {this.state.isFiltered && <div className=\"typography-4 space-top-2 space-left-2\">Found {this.state.view.length} bookmarks matching the search criteria</div>}\r\n                                    <div className=\"actionbar-2 space-top-2 space-bottom-2\">\r\n                                        <div>\r\n                                            <button onClick={this.clearSearch} className=\"default\">Clear</button>\r\n                                        </div>\r\n                                        <div>\r\n                                            <button onClick={this.search} className=\"default animate space-right-2\">Search</button>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </Sidebar>\r\n                            </div>\r\n                        </div>\r\n                    </View>\r\n                </ViewResolver>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Bookmarks;\r\n","import React from 'react';\r\nimport showdown  from 'showdown';\r\nimport './Showdown.scss';\r\n\r\ninterface Props {\r\n    source: string\r\n}\r\nfunction Showdown(props: Props) {\r\n    const converter = new showdown.Converter({tables: true});\r\n    const html      = converter.makeHtml(props.source);\r\n    return (\r\n        <div className=\"markdown-body\">\r\n            <div dangerouslySetInnerHTML={{__html:html}} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Showdown;\r\n","import React from 'react';\r\nimport './ArcSelect.scss';\r\nimport { FormControl, InputLabel, Select, MenuItem } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n    },\r\n    formControl: {\r\n    //   margin: theme.spacing(1),\r\n      minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  }));\r\n\r\n  \r\ninterface Props {\r\n  id: string,\r\n  label: string,\r\n  handleChange: Function,\r\n  error?: boolean,\r\n  data: any,\r\n  elements?: Array<string>,\r\n  objects?: Array<any>,\r\n  first?: string,\r\n  firstAction?: string,\r\n  maxWidth?: string\r\n}\r\n\r\nfunction ArcSelect(props: Props) {\r\n    const classes = useStyles();\r\n\r\n    const { id, label, elements, objects, handleChange, data, first,firstAction } = props;\r\n    let dropdownList: Array<any> = [];\r\n    \r\n    if (elements) {\r\n      dropdownList = elements.map(item => <MenuItem key={item} value={item}>{item}</MenuItem>);\r\n    } else if (objects) {\r\n      dropdownList = objects.map(item => <MenuItem key={item.key} value={item.key}>{item.value}</MenuItem>);\r\n    }\r\n    \r\n    return (\r\n        <>\r\n        <FormControl className={\"arc-select \" + classes.formControl}>\r\n            <InputLabel htmlFor={id}>{label}</InputLabel>\r\n            <Select\r\n            value={data[id]}\r\n            onChange={e => handleChange(e)}\r\n            inputProps={{\r\n                name: id,\r\n                id: id,\r\n            }}\r\n            autoWidth\r\n            className={props.maxWidth ? props.maxWidth : \"\"}\r\n            >\r\n                {first && <MenuItem value={first}>{first}</MenuItem>}\r\n                {firstAction && <MenuItem value={firstAction}><em>{firstAction}</em></MenuItem>}\r\n                {dropdownList}\r\n            </Select>\r\n        </FormControl>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ArcSelect;","import React, { Component } from 'react';\r\nimport Showdown from '../Ux/Showdown';\r\nimport ArcTextField from '../Ux/ArcTextField';\r\nimport ArcSelect from '../Ux/ArcSelect';\r\nimport { receiveMessage } from '../../events/MessageService';\r\n\r\ninterface Props {\r\n    note: any,\r\n    id: string,\r\n    deleteNote: Function,\r\n    saveNote: Function,\r\n    notebooks: any\r\n}\r\n\r\ninterface State {\r\n    editNote: boolean,\r\n    preview: boolean,\r\n\r\n    newNotebook: string,\r\n\r\n    id?: string,\r\n    title: string,\r\n    tags: string,\r\n    content: any,\r\n    notebook: string,\r\n    flags: any,\r\n    flag: string\r\n}\r\n\r\nclass Note extends Component<Props, State> {\r\n    \r\n    _isMounted = false;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            editNote: false,\r\n            preview: true,\r\n            newNotebook: '',\r\n            title: '',\r\n            content: '',\r\n            tags: '',\r\n            notebook: '',\r\n            flag: '',\r\n\r\n            flags: [\r\n                {\r\n                    key: 'one',\r\n                    value: <div className=\"select-palette one\" />\r\n                },\r\n                {\r\n                    key: 'two',\r\n                    value: <div className=\"select-palette two\" />\r\n                },\r\n                {\r\n                    key: 'three',\r\n                    value: <div className=\"select-palette three\" />\r\n                },\r\n                {\r\n                    key: 'four',\r\n                    value: <div className=\"select-palette four\" />\r\n                },\r\n                {\r\n                    key: 'five',\r\n                    value: <div className=\"select-palette five\" />\r\n                },\r\n                {\r\n                    key: 'six',\r\n                    value: <div className=\"select-palette six\" />\r\n                }\r\n            ]\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this._isMounted = true;\r\n        receiveMessage().subscribe(message => {\r\n            if (this._isMounted) {\r\n                if (message.name === 'closeNoteEditView' && message.signal) {\r\n                    this.hideEdit();\r\n                    this.setState({newNotebook: ''});\r\n                }\r\n            }\r\n        });\r\n    }\r\n    \r\n    componentWillUnmount() {\r\n        this._isMounted = false;\r\n    }\r\n\r\n    delete = () => {\r\n        this.props.deleteNote(this.props.id);\r\n    }\r\n\r\n    showEdit = () => {\r\n        this.setState({\r\n            editNote: true,\r\n            title: this.props.note.title,\r\n            content: this.props.note.content,\r\n            tags: this.props.note.tags,\r\n            notebook: this.props.note.notebook,\r\n            flag: this.props.note.flag\r\n        })\r\n    }\r\n\r\n    hideEdit = () => {\r\n        this.setState({\r\n            editNote: false\r\n        })\r\n    }\r\n\r\n    save = () => {\r\n        let notebook = this.state.notebook;\r\n\r\n        if (notebook === '<create new>') {\r\n            notebook = this.state.newNotebook;\r\n        }\r\n\r\n        this.props.saveNote({\r\n            id: this.props.id,\r\n            title: this.state.title,\r\n            content: this.state.content,\r\n            tags: this.state.tags,\r\n            flag: this.state.flag,\r\n            notebook: notebook\r\n        }, true)\r\n    }\r\n\r\n    togglepreview = () => {\r\n        this.setState({\r\n            preview: !this.state.preview\r\n        })\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState(\r\n            {\r\n                ...this.state,\r\n                [event.target.name]: event.target.value\r\n            }\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const tags: any = [];\r\n        if (this.props.note.tags) {\r\n            this.props.note.tags.split(\" \").map(item => {\r\n                tags.push(<div key={item} className=\"tag\">{item}</div>);\r\n            })\r\n        }\r\n\r\n        return (\r\n            <>\r\n            {!this.state.editNote && \r\n            <>\r\n                <div className=\"notebook\"><i className=\"material-icons\">insert_drive_file</i>{this.props.note.notebook}</div>\r\n                {/* <div className=\"space-bottom-2\" /> */}\r\n                <div className=\"typography-3 space-bottom-1\">\r\n                    {this.props.note.title}\r\n                </div>\r\n                {tags}\r\n                <div className=\"space-bottom-2\" />\r\n                <button onClick={this.showEdit} className=\"secondary animate left\"><i className=\"material-icons\">edit</i>Edit</button>\r\n                <button onClick={this.delete} className=\"secondary animate right\"><i className=\"material-icons\">delete</i>Delete</button>\r\n                \r\n                \r\n                <Showdown source={this.props.note.content} />\r\n\r\n            </>}\r\n            \r\n            {this.state.editNote && \r\n                <div>\r\n                    <div className=\"typography-3 space-bottom-1\">{this.state.title}</div>\r\n                    \r\n                    <button onClick={this.save} className=\"primary animate left space-bottom-2\"><i className=\"material-icons\">double_arrow</i>Save</button>\r\n                    <button onClick={this.showEdit} className=\"default disabled center\"><i className=\"material-icons\">refresh</i>Undo All</button>\r\n                    <button onClick={this.hideEdit} className=\"default disabled center\"><i className=\"material-icons\">close</i>Cancel</button>\r\n                    {!this.state.preview && <button onClick={this.togglepreview} className=\"default disabled right\"><i className=\"material-icons\">visibility</i>Show Preview</button>}\r\n                    {this.state.preview && <button onClick={this.togglepreview} className=\"default disabled right\"><i className=\"material-icons\">visibility_off</i>Hide Preview</button>}\r\n                    \r\n                    <div><ArcSelect label=\"Flag\" data={this.state} id=\"flag\" handleChange={e => this.handleChange(e)} objects={this.state.flags} /></div>\r\n                    <div><ArcSelect label=\"Notebook\" data={this.state} id=\"notebook\" handleChange={e => this.handleChange(e)} elements={this.props.notebooks} firstAction=\"<create new>\" /></div>\r\n                    <div>\r\n                        {this.state.notebook === '<create new>' && <ArcTextField label=\"Notebook name\" data={this.state} id=\"newNotebook\" handleChange={e => this.handleChange(e)} />}\r\n                    </div>\r\n                    <ArcTextField label=\"Title\" data={this.state} id=\"title\" handleChange={e => this.handleChange(e)} />\r\n                    <ArcTextField label=\"Tags (separated by blank spaces)\" data={this.state} id=\"tags\" handleChange={e => this.handleChange(e)} />\r\n\r\n                    {this.state.preview && <div className=\"edit-note-view\">\r\n                        <div><ArcTextField label=\"Content (Markdown / HTML / Plaintext)\" data={this.state} id=\"content\" multiline handleChange={e => this.handleChange(e)} /></div>\r\n                        <div>\r\n                            <div className=\"typography-5 space-bottom-1\">Preview</div>\r\n                            <Showdown source={this.state.content} />\r\n                        </div>\r\n                    </div>}\r\n                    {!this.state.preview && <ArcTextField label=\"Content (Markdown / HTML / Plaintext)\" data={this.state} id=\"content\" multiline handleChange={e => this.handleChange(e)} />}\r\n                    <div className=\"space-top-2\" />\r\n            </div>}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Note;\r\n","import React from 'react';\r\nimport './ActionButton.scss';\r\n\r\ninterface Props {\r\n    icon?: string,\r\n    leftLabel?: string,\r\n    leftAction?: any,\r\n    rightLabel?: string,\r\n    rightAction?: any,\r\n    type?: string\r\n}\r\nfunction ActionButton(props: Props) {\r\n    const icon = <i className=\"material-icons\">{props.icon}</i>;\r\n    return (\r\n        <div className=\"action-button\">\r\n            {props.leftLabel && props.rightLabel && <button className={\"left \" + props.type} onClick={props.leftAction}>{props.icon && icon}{props.leftLabel}</button>}\r\n            {props.leftLabel && props.rightLabel && <button className={\"right \" + props.type} onClick={props.rightAction}>{props.icon && icon}{props.rightLabel}</button>}\r\n            {props.leftLabel && !props.rightLabel && <button className={\"center \" + props.type} onClick={props.leftAction}>{props.icon && icon}{props.leftLabel}</button>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ActionButton;\r\n","import React, { Component } from 'react';\r\nimport ActionButton from '../Ux/ActionButton';\r\nimport './style.scss';\r\nconst removeMd = require('remove-markdown');\r\n\r\ninterface Props {\r\n    selectNote: Function,\r\n    note: any,\r\n    id: string,\r\n    selected: boolean,\r\n    showTag: boolean\r\n}\r\ninterface State {\r\n\r\n}\r\nclass NoteRef extends Component<Props, State> {\r\n\r\n    selectNote = () => {\r\n        this.props.selectNote(this.props.id);\r\n    }\r\n\r\n    render() {\r\n        const tags: any = [];\r\n        if (this.props.note.tags) {\r\n            this.props.note.tags.split(\" \").map(item => {\r\n                tags.push(<ActionButton leftLabel={item}></ActionButton>);\r\n            })\r\n        }\r\n        return (\r\n            <>\r\n            <div className={this.props.selected ? \"noteref selected\" : \"noteref\"} onClick={this.selectNote}>\r\n                <div className=\"content\">\r\n                    {this.props.note.flag && <div className={\"flag-palette \" + this.props.note.flag} />}\r\n                    {this.props.showTag && <div className=\"notebook\">\r\n                        {/* <i className=\"material-icons\">insert_drive_file</i> */}\r\n                        {this.props.note.notebook}\r\n                    </div>}\r\n                    <div className=\"title\">{this.props.note.title}</div>\r\n                    <div className=\"space-bottom-0\" />\r\n                    <div className=\"detail\">{removeMd(this.props.note.content.substring(0, 100))}</div>\r\n                    {/* <div className=\"detail typography-5\"><Showdown source={this.props.note.content.substring(0, 150)} /></div> */}\r\n                </div>\r\n            </div>\r\n            <div className=\"separator\" />\r\n            {/* <hr /> */}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NoteRef;\r\n","import React, { Component } from 'react';\r\nimport Note from './Note';\r\nimport { Switch } from '@material-ui/core';\r\nimport { constants } from '../Constants';\r\nimport { httpGet, httpPut, httpDelete } from \"../Lib/RestTemplate\";\r\nimport ArcTextField from '../Ux/ArcTextField';\r\nimport ArcDialog from '../Ux/ArcDialog';\r\nimport ViewResolver from '../Ux/ViewResolver';\r\nimport View from '../Ux/View';\r\nimport './style.scss';\r\nimport NoteRef from './NoteRef';\r\nimport { isEmptyOrSpaces, match, sort } from '../Utils';\r\nimport ArcSelect from '../Ux/ArcSelect';\r\nimport Sidebar from '../Ux/Sidebar';\r\n\r\nimport { sendMessage, receiveMessage } from '../../events/MessageService';\r\nimport { Authorization } from '../Types/GeneralTypes';\r\n\r\nconst queryString = require('query-string');\r\n\r\ninterface Props {\r\n    authorization: Authorization\r\n    location: any,\r\n    logout: Function\r\n}\r\n\r\ninterface State {\r\n    items: any,\r\n    view: any,\r\n\r\n    searchtext: string,\r\n    isFiltered: boolean,\r\n\r\n    id?: string,\r\n    title: string,\r\n    tags: string,\r\n    isAddDialogOpen: boolean,\r\n    firstLoad: boolean,\r\n    selectedNoteId?: string,\r\n    content: string,\r\n    newNotebook: string,\r\n    existingNotebook: string,\r\n    existingNotebookList: any,\r\n    filteredNotebookList: any,\r\n    notebookFilter: string,\r\n    showFilter: boolean,\r\n    sortBy: string,\r\n    sortOrder: string,\r\n    flag: string,\r\n\r\n    searchPref: {\r\n        title: boolean,\r\n        tags: boolean,\r\n        content: boolean\r\n    },\r\n    searchResults: any,\r\n\r\n    sidebarElements: any\r\n}\r\n\r\nclass Notes extends Component<Props, State> {\r\n    \r\n    _isMounted = false;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            items: [],\r\n            searchResults: [],\r\n            view: [],\r\n            isAddDialogOpen: false,\r\n\r\n            selectedNoteId: '',\r\n\r\n            title: '',\r\n            content: '',\r\n            tags: '',\r\n            newNotebook: '',\r\n            existingNotebook: '',\r\n            existingNotebookList: [],\r\n            filteredNotebookList: [],\r\n            notebookFilter: 'all notebooks',\r\n            sortBy: 'last modified',\r\n            sortOrder: 'descending',\r\n            firstLoad: true,\r\n            flag: '',\r\n\r\n            showFilter: false,\r\n            searchtext: '',\r\n            isFiltered: false,\r\n            searchPref: {\r\n                title: true,\r\n                tags: true,\r\n                content: true\r\n            },\r\n\r\n            sidebarElements: {\r\n                addNew: [\r\n                    {\r\n                        label: 'New Note',\r\n                        action: this.newNote,\r\n                        icon: 'note_add'\r\n                    }\r\n                ]\r\n            }\r\n        }\r\n    }\r\n\r\n    sortTypes = \r\n        {'created': 'createdAt',\r\n        'last modified': 'lastModifiedAt',\r\n        'notebook': 'notebook',\r\n        'note name': 'title'}\r\n\r\n    sortOrders = [\r\n        'ascending',\r\n        'descending'\r\n    ];\r\n\r\n    componentDidMount() {\r\n        this._isMounted = true;\r\n        if (this.props.location.search) {\r\n            const query = queryString.parse(this.props.location.search);\r\n            if (query && query.q) {\r\n                if (query.q.startsWith('tags')) {\r\n                    this.setState({\r\n                        searchPref: {\r\n                            title: false,\r\n                            tags: true,\r\n                            content: false\r\n                        }\r\n                    })\r\n                }\r\n                this.setState({\r\n                    searchtext: query.q,\r\n                    isFiltered: true\r\n                })\r\n            }\r\n        }\r\n\r\n        if(this.state.firstLoad && this.props.authorization.isAuth) {\r\n            this.initializeNotes(this.props.authorization);\r\n            this.setState({firstLoad: false})\r\n        }\r\n\r\n        receiveMessage().subscribe(message => {\r\n            if (this._isMounted) {\r\n                if (message.name === 'noteListRefreshed') {\r\n                    this.applyFilter();\r\n                }\r\n            }\r\n        })\r\n    }\r\n    \r\n    componentWillUnmount() {\r\n        this._isMounted = false;\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (this.state.firstLoad && nextProps.authorization) {\r\n            this.initializeNotes(nextProps.authorization);\r\n            this.setState({firstLoad: false})\r\n        }\r\n    }\r\n\r\n    initializeNotes(authorization: Authorization, selectedNoteId?: string) {\r\n        const that = this;\r\n        httpGet(constants.API_URL_NOTE,\r\n            {\r\n                headers: {\r\n                    Authorization: 'Bearer ' + authorization.token\r\n                }\r\n            }, authorization.password)\r\n            .then(function(response) {\r\n                that.setState({items: response.data, searchResults: response.data, view: response.data});\r\n                if (that.state.isFiltered) {\r\n                    that.search();\r\n                } else {\r\n                    sendMessage('noteListRefreshed', true);\r\n                }\r\n                \r\n                const existingNotebookList: any = [];\r\n                response.data.map(item => existingNotebookList.push(item.notebook))\r\n\r\n                that.setState({\r\n                    existingNotebookList: [...new Set(existingNotebookList)]\r\n                });\r\n\r\n                if (selectedNoteId) {\r\n                    that.setState({selectedNoteId: selectedNoteId});\r\n                } else if (!that.state.selectedNoteId && response.data && response.data.length > 0) {\r\n                    that.setState({selectedNoteId: response.data[0]._id});\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    newNote = () => {\r\n        this.toggleAddDialog();\r\n        sendMessage('sidebar', false);\r\n    }\r\n\r\n    toggleAddDialog = () => {\r\n        this.setState({\r\n            isAddDialogOpen: !this.state.isAddDialogOpen,\r\n        });\r\n        this.resetForm();\r\n    }\r\n\r\n    resetForm = () => {\r\n        this.setState({\r\n            id: undefined,\r\n            title: '',\r\n            content: '',\r\n            tags: '',\r\n            existingNotebook: '',\r\n            newNotebook: ''\r\n        })\r\n    }\r\n\r\n    closeAllDialog = () => {\r\n        this.setState({\r\n            isAddDialogOpen: false,\r\n        });\r\n        this.resetForm();\r\n    }\r\n\r\n    toggleFilter = () => {\r\n        this.setState({showFilter: !this.state.showFilter});\r\n    }\r\n\r\n    clearSearch = () => {\r\n        this.setState({\r\n            searchResults: this.state.items,\r\n            isFiltered: false,\r\n            searchtext: ''\r\n        }, () => sendMessage('noteListRefreshed', true))\r\n        sendMessage('sidebar', false);\r\n    }\r\n\r\n    search = (event?: any) => {\r\n        if (event) {\r\n            event.preventDefault();\r\n        }\r\n\r\n        if (isEmptyOrSpaces(this.state.searchtext)) {\r\n            this.setState({\r\n                searchResults: this.state.items,\r\n                isFiltered: false\r\n            }, () => sendMessage('noteListRefreshed', true));\r\n            return;\r\n        }\r\n\r\n        const searchResults = this.state.items.filter((item) => {\r\n            if (this.state.searchPref.title && match(item.title, this.state.searchtext)) {\r\n                return true;\r\n            } else if (this.state.searchPref.tags && match(item.tags, this.state.searchtext)) {\r\n                return true;\r\n            } else if (this.state.searchPref.content && match(item.content, this.state.searchtext)) {\r\n                return true;\r\n            }\r\n        });\r\n        let selectedNoteId = undefined;\r\n        if (searchResults.length > 0) {\r\n            selectedNoteId = searchResults[0]._id;\r\n        }\r\n\r\n        let notebookFilter = \"all notebooks\";\r\n        let notebookList: any = [];\r\n        searchResults.map(item => {\r\n            notebookList.push(item.notebook);\r\n        });\r\n\r\n        if ([...new Set(notebookList)].length === 1) {\r\n            notebookFilter = notebookList[0];\r\n        }\r\n        this.setState({\r\n            searchResults: searchResults,\r\n            isFiltered: true,\r\n            selectedNoteId: selectedNoteId,\r\n            notebookFilter: notebookFilter\r\n        }, () => sendMessage('noteListRefreshed', true));\r\n        sendMessage('sidebar', false)\r\n    }\r\n\r\n    applyFilter = () => {\r\n        const notebookList: any = [];\r\n        let noteList: any = [];\r\n        this.state.searchResults.map(item => {\r\n            if (isEmptyOrSpaces(this.state.notebookFilter) || this.state.notebookFilter === 'all notebooks' || item.notebook === this.state.notebookFilter) {\r\n                noteList.push(item);\r\n            }\r\n            notebookList.push(item.notebook);\r\n        });\r\n\r\n        noteList = sort(noteList, this.sortTypes[this.state.sortBy], this.state.sortOrder === 'descending' ? true : false);\r\n\r\n        let selectedNoteId = '';\r\n        if (noteList && noteList.length > 0) {\r\n            selectedNoteId = noteList[0]._id;\r\n        }\r\n\r\n        this.setState({\r\n            selectedNoteId: selectedNoteId,\r\n            view: noteList,\r\n            filteredNotebookList: [...new Set(notebookList)]\r\n        });\r\n    }\r\n\r\n    toggleSearchPref = (pref) => {\r\n        this.setState({\r\n            searchPref: {\r\n                ...this.state.searchPref,\r\n                [pref]: !this.state.searchPref[pref]\r\n            }\r\n        })\r\n    }\r\n\r\n    deleteNote = (noteId) => {\r\n        const that = this;\r\n        httpDelete(constants.API_URL_NOTE + \"/\" + noteId,\r\n        {\r\n            headers: {\r\n                Authorization: 'Bearer ' + this.props.authorization.token\r\n            }\r\n        })\r\n        .then(function(response) {\r\n            if (response.status === 201) {\r\n                sendMessage('notification', true, {type: 'success', message: 'Note deleted', duration: 5000});\r\n                that.setState({\r\n                    selectedNoteId: undefined\r\n                }, () => that.initializeNotes(that.props.authorization));\r\n                \r\n            }\r\n        })\r\n        .catch((error) => {\r\n            if (error.response.status === 401) {\r\n                that.props.logout(null, 'failure', 'Session expired. Login again');\r\n            }\r\n        })\r\n    }\r\n\r\n    selectNote = (noteId) => {\r\n        this.setState({\r\n            selectedNoteId: noteId\r\n        })\r\n        sendMessage('sidebar', false);\r\n    }\r\n\r\n    saveNoteEvent = () => {\r\n        let notebook = this.state.existingNotebook;\r\n        if (notebook === '<create new>') {\r\n            notebook = this.state.newNotebook;\r\n        }\r\n        this.saveNote({\r\n            id: null,\r\n            type: 'Note',\r\n            title: this.state.title,\r\n            content: this.state.content,\r\n            tags: this.state.tags,\r\n            flag: this.state.flag,\r\n            notebook: notebook\r\n        });\r\n    }\r\n\r\n    saveNote = (note, edit=false) => {\r\n\r\n        const that = this;\r\n\r\n        if (!note) {\r\n            sendMessage('notification', true, {type: 'failure', message: 'Unknown error', duration: 5000});\r\n            return;\r\n        }\r\n\r\n        if (isEmptyOrSpaces(note.notebook)) {\r\n            sendMessage('notification', true, {type: 'failure', message: 'Notebook not chosen', duration: 5000});\r\n            return;\r\n        }\r\n\r\n        if (isEmptyOrSpaces(note.title)) {\r\n            sendMessage('notification', true, {type: 'failure', message: 'Note name / title missing', duration: 5000});\r\n            return;\r\n        }\r\n\r\n        if (isEmptyOrSpaces(note.tags)) {\r\n            note.tags = 'unsorted';\r\n        }\r\n\r\n        httpPut(constants.API_URL_NOTE, {\r\n            id: note.id,\r\n            type: note.type,\r\n            title: note.title,\r\n            attributes: note.attributes,\r\n            content: note.content,\r\n            tags: note.tags,\r\n            flag: note.flag,\r\n            notebook: note.notebook\r\n        },\r\n        {\r\n            headers: {\r\n                Authorization: 'Bearer ' + this.props.authorization.token\r\n            }\r\n        }, this.props.authorization.password, ['attributes'])\r\n        .then(function(response) {\r\n            if (response.status === 201) {\r\n                if (edit) {\r\n                    sendMessage('notification', true, {type: 'success', message: 'Note edited', duration: 5000});\r\n                    sendMessage('closeNoteEditView', true);\r\n                } else {\r\n                    sendMessage('notification', true, {type: 'success', message: 'Note created', duration: 5000});\r\n                    that.closeAllDialog();\r\n                }\r\n                \r\n                that.initializeNotes(that.props.authorization, response.data._id);\r\n            }\r\n        })\r\n        .catch((error) => {\r\n            if (error.response.status === 401) {\r\n                that.props.logout(null, 'failure', 'Session expired. Login again');\r\n            }\r\n        })\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState(\r\n            {\r\n                ...this.state,\r\n                [event.target.name]: event.target.value\r\n            }\r\n        )\r\n    }\r\n\r\n    handleNotebookFilterChange = (event) => {\r\n        this.setState(\r\n        {\r\n            ...this.state,\r\n            [event.target.name]: event.target.value\r\n        },\r\n        () => this.applyFilter());\r\n    }\r\n\r\n    render() {\r\n        const noteview = this.state.view.map(item => (\r\n            <div key={item._id}>\r\n                {item._id === this.state.selectedNoteId &&\r\n                        <Note key={item._id} id={item._id} note={item} saveNote={this.saveNote} deleteNote={this.deleteNote} notebooks={this.state.existingNotebookList}/>}\r\n            </div>\r\n        ))\r\n        const listNoteRef = this.state.view.map(item => (\r\n            <div key={item._id}>\r\n                <NoteRef selected={this.state.selectedNoteId === item._id ? true : false} id={item._id} note={item} selectNote={this.selectNote} showTag={this.state.notebookFilter === 'all notebooks'}/>\r\n            </div>\r\n        ))\r\n        return (\r\n            <div className=\"notes\">\r\n                <ArcDialog title=\"Add Note\" visible={this.state.isAddDialogOpen} toggleVisibility={this.toggleAddDialog}>\r\n                    <div><ArcSelect label=\"Notebook\" data={this.state} id=\"existingNotebook\" handleChange={e => this.handleChange(e)} elements={this.state.existingNotebookList} firstAction=\"<create new>\" /></div>\r\n                    <div>\r\n                    {this.state.existingNotebook === '<create new>' && <ArcTextField label=\"Notebook name\" data={this.state} id=\"newNotebook\" handleChange={e => this.handleChange(e)} />}\r\n                    </div>\r\n                    <div><ArcTextField label=\"Title\" data={this.state} id=\"title\" handleChange={e => this.handleChange(e)} /></div>\r\n                    <div><ArcTextField label=\"Tags (separated by blank spaces)\" data={this.state} id=\"tags\" handleChange={e => this.handleChange(e)} /></div>\r\n                    <div><ArcTextField label=\"Content (Markdown / HTML / Plaintext)\" data={this.state} id=\"content\" multiline handleChange={e => this.handleChange(e)} /></div>\r\n                    <div className=\"actions\">\r\n                        <button onClick={this.toggleAddDialog} className=\"default disabled left\"><i className=\"material-icons\">close</i>Cancel</button>\r\n                        <button onClick={this.saveNoteEvent} className=\"primary animate right\"><i className=\"material-icons\">double_arrow</i>Save</button>\r\n                    </div>\r\n                </ArcDialog>\r\n\r\n                <ViewResolver sideLabel='More options'>\r\n                    <View main>\r\n                        {noteview}\r\n                    </View>\r\n                    <View side>\r\n                        <div className=\"filter-container\">\r\n                            <div className=\"section-main\">\r\n                            <Sidebar label=\"Add New\" elements={this.state.sidebarElements['addNew']} icon=\"add\" animate />\r\n                            <Sidebar label=\"Search\" elements={this.state.sidebarElements['search']} icon=\"search\" animate number={this.state.isFiltered ? this.state.searchResults.length : undefined}>\r\n                                <div className=\"space-top-1\" />\r\n                                <form method=\"GET\" onSubmit={this.search} noValidate>\r\n                                    <div className=\"space-left-4 space-right-4\"><ArcTextField label=\"Keywords\" id=\"searchtext\" data={this.state} handleChange={e => this.handleChange(e)} /></div>\r\n                                </form>\r\n                                <div className=\"typography-5 space-top-2 space-left-4\">\r\n                                    <Switch\r\n                                        checked={this.state.searchPref.title}\r\n                                        onChange={() => this.toggleSearchPref('title')}\r\n                                        inputProps={{ 'aria-label': 'primary checkbox' }}/>\r\n                                    Include title\r\n                                </div>\r\n                                <div className=\"typography-5 space-top-2 space-left-4\">\r\n                                    <Switch\r\n                                        checked={this.state.searchPref.tags}\r\n                                        onChange={() => this.toggleSearchPref('tags')}\r\n                                        inputProps={{ 'aria-label': 'primary checkbox' }}/>\r\n                                    Include tags\r\n                                </div>\r\n                                <div className=\"typography-5 space-top-2 space-left-4\">\r\n                                    <Switch\r\n                                        checked={this.state.searchPref.content}\r\n                                        onChange={() => this.toggleSearchPref('content')}\r\n                                        inputProps={{ 'aria-label': 'primary checkbox' }}/>\r\n                                    Include Content\r\n                                </div>\r\n                                {this.state.isFiltered && <div className=\"typography-4 space-top-2\">Found {this.state.searchResults.length} notes matching the search criteria</div>}\r\n                                <div className=\"actionbar-2 space-top-2 space-bottom-2\">\r\n                                    <div>\r\n                                        <button onClick={this.clearSearch} className=\"default\">Clear</button>\r\n                                    </div>\r\n                                    <div>\r\n                                        <button onClick={this.search} className=\"default animate space-right-2\">Search</button>\r\n                                    </div>\r\n                                </div>\r\n                            </Sidebar>\r\n                                \r\n                            <Sidebar label={this.state.isFiltered ? \"Search results\" : \"All Notes\"} icon=\"notes\" number={this.state.view.length}>\r\n                                <div className=\"filter-bar\">\r\n                                    {this.state.filteredNotebookList.length > 1 && <div><ArcSelect maxWidth=\"max-width-200\" label=\"Notebook\" data={this.state} id=\"notebookFilter\" handleChange={e => this.handleNotebookFilterChange(e)} elements={this.state.filteredNotebookList} first='all notebooks' /></div>}\r\n                                    {this.state.filteredNotebookList.length === 1 && <div><ArcSelect maxWidth=\"max-width-200\" label=\"Notebook\" data={this.state} id=\"notebookFilter\" handleChange={e => this.handleNotebookFilterChange(e)} elements={this.state.filteredNotebookList} /></div>}\r\n                                    <div></div>\r\n                                    <div><ArcSelect label=\"Sort by\" data={this.state} id=\"sortBy\" handleChange={e => this.handleNotebookFilterChange(e)} elements={Object.keys(this.sortTypes)} /></div>\r\n                                    <div><ArcSelect label=\"Sort Order\" data={this.state} id=\"sortOrder\" handleChange={e => this.handleNotebookFilterChange(e)} elements={this.sortOrders} /></div>\r\n                                </div>\r\n                                {listNoteRef}\r\n                            </Sidebar>\r\n                            </div>\r\n                        </div>\r\n                    </View>\r\n                </ViewResolver>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Notes;\r\n","import { GET_AUTH, REMOVE_AUTH, ADD_AUTH } from '../actions/types';\r\n\r\nexport const getAuth = () => dispatch => {\r\n    dispatch({\r\n        type: GET_AUTH\r\n    });\r\n}\r\n\r\nexport const addAuth = (data) => dispatch => {\r\n    dispatch({\r\n        type: ADD_AUTH,\r\n        payload: data\r\n    });\r\n}\r\n\r\nexport const removeAuth = () => dispatch => {\r\n    dispatch({\r\n        type: REMOVE_AUTH\r\n    });\r\n}","import { httpGet, httpPost, httpPut } from \"../Lib/RestTemplate\";\r\nimport sjcl from 'ioak-sjcl';\r\nimport CryptoJS from 'crypto-js';\r\nimport { constants } from '../Constants';\r\n\r\nexport function preSignup() {\r\n    return httpGet(constants.API_URL_PRESIGNUP, null)\r\n        .then(function(response) {\r\n            return Promise.resolve(response);\r\n        })\r\n}\r\n\r\nexport function signup(data) {\r\n    return httpPost(constants.API_URL_SIGNUP, {\r\n        name: data.name,\r\n        email: data.email,\r\n        problem: encrypt(data.password, data.solution, data.salt),\r\n        solution: data.solution\r\n        }, null)\r\n        .then(function(response) {\r\n            return Promise.resolve(response.status);\r\n        })\r\n}\r\n\r\nexport function preSignin(email) {\r\n    return httpGet(constants.API_URL_PRESIGNIN + email, null)\r\n        .then(response => Promise.resolve(response))\r\n        .catch(error => Promise.resolve(error.response))\r\n}\r\n\r\nexport function signin(data, problem) {\r\n    try {\r\n        let solution = decrypt(data.password, JSON.stringify(problem));\r\n        return httpPost(constants.API_URL_SIGNIN, {\r\n            email: data.email, solution: solution\r\n            }, null)\r\n            .then(function(response) {\r\n                return Promise.resolve(response);\r\n            })\r\n\r\n    } catch(error) {\r\n        if (error.message === \"ccm: tag doesn't match\") {\r\n            return Promise.resolve({\r\n                status: 401\r\n            });\r\n        } else {\r\n            return Promise.resolve(error);\r\n        }\r\n    }\r\n}\r\n\r\nexport function updateUserDetails(data, authorization, type) {\r\n    return httpGet(constants.API_URL_PRESIGNUP, null)\r\n        .then(function(response) {\r\n            if (response.status === 200) {\r\n                let newData = {};\r\n                if (type && type === 'password') {\r\n                    newData = {\r\n                        problem: encrypt(data.password, response.data.solution, response.data.salt),\r\n                        solution: response.data.solution\r\n                    }\r\n                } else {\r\n                    newData = {\r\n                        name: data.name,\r\n                        email: data.email\r\n                    }\r\n                }\r\n\r\n                return httpPut(constants.API_URL_USER_DETAILS, newData,\r\n                    {\r\n                        headers: {\r\n                            Authorization: 'Bearer ' + authorization.token\r\n                        }\r\n                    }, authorization.password)\r\n                    .then(function(response) {\r\n                        return Promise.resolve(response);\r\n                    })\r\n            }\r\n        })\r\n}\r\n\r\nexport function sentPasswordChangeEmail(data, type) {\r\n\r\n    return httpPost(constants.API_URL_CODE, data, null)\r\n        .then(function(response) {\r\n            return Promise.resolve(response.status);\r\n        })\r\n}\r\n\r\nexport function resetPassword(data, type) {\r\n\r\n    return httpGet(constants.API_URL_PRESIGNUP, null)\r\n        .then(function(response) {\r\n            if (response.status === 200) {\r\n                let newData = {};\r\n                if (type && type === 'password') {\r\n                    newData = {\r\n                        problem: encrypt(data.password, response.data.solution, response.data.salt),\r\n                        solution: response.data.solution,\r\n                        resetCode: data.resetCode\r\n                    }\r\n\r\n                }\r\n\r\n                return httpPost(constants.API_URL_RESET, newData, null)\r\n                    .then(function(response) {\r\n                        return Promise.resolve(response.status);\r\n                    })\r\n\r\n\r\n            }\r\n        })\r\n}\r\n\r\nfunction encrypt(password, message, salt) {\r\n    const config = {\r\n        cipher: 'aes',\r\n        iter: '12000',\r\n        ks: 256,\r\n        salt: CryptoJS.enc.Base64.stringify((CryptoJS.enc.Utf8.parse(salt)))\r\n    }\r\n    return sjcl.encrypt(password, message, config);\r\n}\r\n\r\nfunction decrypt(password, ciphertext) {\r\n    return sjcl.decrypt(password, ciphertext);\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getAuth, addAuth, removeAuth } from '../../actions/AuthActions';\r\nimport './Login.scss';\r\nimport ArcTextField from '../Ux/ArcTextField';\r\nimport {signup, signin, sentPasswordChangeEmail, preSignup, preSignin} from './AuthService';\r\nimport { Authorization } from '../Types/GeneralTypes';\r\nimport { sendMessage } from '../../events/MessageService';\r\nimport {isEmptyOrSpaces} from \"../Utils\";\r\n\r\nconst queryString = require('query-string');\r\n\r\ninterface Props {\r\n    getAuth: Function,\r\n    addAuth: Function,\r\n    removeAuth: Function,\r\n    history: any,\r\n    location: any,\r\n    authorization: Authorization\r\n}\r\n\r\ninterface State {\r\n    newuser: boolean,\r\n    name: string,\r\n    email: string,\r\n    password: string,\r\n    resetCode: string\r\n}\r\n\r\nclass Login extends Component<Props, State> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            newuser: false,\r\n            name: '',\r\n            email: '',\r\n            password: '',\r\n            resetCode:''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.location.search) {\r\n            const query = queryString.parse(this.props.location.search);\r\n            if (query && query.type === 'signup') {\r\n                this.setState({\r\n                    newuser: true\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    signin = (event) => {\r\n        event.preventDefault();\r\n\r\n        sendMessage('notification', false);\r\n        sendMessage('spinner');\r\n        if (this.state.email && this.state.password) {\r\n            preSignin(this.state.email).then((response) => {\r\n                if (response.status === 200) {\r\n                    signin({\r\n                        email: this.state.email,\r\n                        password: this.state.password\r\n                        }, response.data)\r\n                        .then((response) => {\r\n                            if (response.status === 200) {\r\n                                sendMessage('notification', true, {message: 'Signed In successfully', type: 'success', duration: 3000});\r\n                                this.success(response.data, this.state.password);\r\n                            } else if (response.status === 401) {\r\n                                sendMessage('notification', true, {message: 'Incorrect passphrase', type: 'failure', duration: 3000});\r\n                            } else {\r\n                                sendMessage('notification', true, {message: 'Unknown response from server. Please try again or at a later time', type: 'failure', duration: 3000});\r\n                            }\r\n                        })\r\n                        .catch((error) => {\r\n                            sendMessage('notification', true, {'type': 'failure', message: 'Unknown error. Please try again or at a later time', duration: 3000});\r\n                        })\r\n                } else if (response.status === 404) {\r\n                    sendMessage('notification', true, {message: 'User name does not exist', type: 'failure', duration: 3000});\r\n                }\r\n            })\r\n\r\n            \r\n        } else {\r\n            sendMessage('notification', true, {type: 'failure', message: 'Username/password cannot be empty', duration: 3000});\r\n        }\r\n    }\r\n\r\n    signup = (event) => {\r\n        event.preventDefault();\r\n        const that = this;\r\n        sendMessage('notification', false);\r\n        sendMessage('spinner');\r\n        if (this.state.name && this.state.password && this.state.email) {\r\n            if (!(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(this.state.email))) {\r\n                sendMessage('notification', true, {type: 'failure', message: 'Email ID is invalid', duration: 3000});\r\n                return;\r\n            }\r\n            preSignup().then(function(response) {\r\n                if (response.status === 200) {\r\n                    signup({\r\n                        name: that.state.name,\r\n                        password: that.state.password,\r\n                        email: that.state.email,\r\n                        solution: response.data.solution,\r\n                        salt: response.data.salt\r\n                        })\r\n                        .then(function(status) {\r\n                            if (status === 200) {\r\n                                sendMessage('notification', true, {'type': 'success', message: 'Your account has been created. You can login now', duration: 3000});\r\n                                that.toggle();\r\n                            }\r\n                        })\r\n                }\r\n            });\r\n        } else if (!this.state.name) {\r\n            sendMessage('notification', true, {type: 'failure', message: 'Name cannot be empty', duration: 3000});\r\n        } else if (!this.state.email) {\r\n            sendMessage('notification', true, {type: 'failure', message: 'Email cannot be empty', duration: 3000});\r\n        } else if (!this.state.password) {\r\n            sendMessage('notification', true, {type: 'failure', message: 'Password cannot be empty', duration: 3000});\r\n        }\r\n    }\r\n\r\n    sentEmailWithCode = () => {\r\n        if (isEmptyOrSpaces(this.state.email)) {\r\n            sendMessage('notification', true, {message: 'Email cannot be empty', type: 'failure', duration: 5000});\r\n            return;\r\n        }\r\n\r\n        this.sentPasswordChangeEmail('password');\r\n\r\n    }\r\n\r\n    sentPasswordChangeEmail = (type) => {\r\n        const min = 1;\r\n        const max = 100;\r\n        const rand = min + Math.random() * (max - min);\r\n        sentPasswordChangeEmail({\r\n            email: this.state.email,\r\n            resetCode: rand\r\n        }, type)\r\n            .then((response: any) => {\r\n                if (response === 200) {\r\n                    if (type === 'password') {\r\n                        sendMessage('notification', true, {message: 'Password sent successfully', type: 'success', duration: 3000});\r\n                    }\r\n                } else {\r\n                    sendMessage('notification', true, {'type': 'failure', message: 'Invalid Email error', duration: 3000});\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                sendMessage('notification', true, {'type': 'failure', message: 'Bad request', duration: 3000});\r\n            })\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState(\r\n            {\r\n                ...this.state,\r\n                [event.currentTarget.name]: event.currentTarget.value\r\n            }\r\n        )\r\n    }\r\n\r\n    success = (data, password) => {\r\n        this.props.addAuth({\r\n            isAuth: true,\r\n            token: data.token,\r\n            secret: data.secret,\r\n            name: data.name,\r\n            email: data.email,\r\n            password: password\r\n        });\r\n        sendMessage('loggedin', true);\r\n        this.props.history.push(\"/home\");\r\n    }\r\n\r\n    toggle = () => {\r\n        this.setState({\r\n            newuser: !this.state.newuser\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"login\">\r\n                {!this.state.newuser && <div className=\"container\">\r\n                    <form method=\"GET\" onSubmit={this.signin} noValidate>\r\n                        <h1>Log In</h1>\r\n                        <div className=\"form\">\r\n                            <ArcTextField label=\"Username/e-mail\" id=\"email\" data={this.state} handleChange={e => this.handleChange(e)} />\r\n                            <ArcTextField label=\"Password\" id=\"password\" type=\"password\" data={this.state} handleChange={e => this.handleChange(e)} />\r\n                        </div>\r\n                        <br />\r\n                        <button className=\"primary block\"  onClick={this.signin}>Sign In</button>\r\n                        <br /><br />\r\n                        Don't have an account? &nbsp; <button className=\"secondary\"  onClick={this.toggle}>Sign Up</button>\r\n                        <br /><br />\r\n\r\n                    </form>\r\n\r\n                    <button onClick={this.sentEmailWithCode}>Forgot password ?</button>\r\n\r\n                </div>}\r\n\r\n                {this.state.newuser && <div className=\"container\">\r\n                    <form method=\"GET\" onSubmit={this.signup} noValidate>\r\n                        <h1>Sign Up</h1>\r\n                        <div className=\"form\">\r\n                            <ArcTextField label=\"Name\" id=\"name\" data={this.state} handleChange={e => this.handleChange(e)} />\r\n                            <ArcTextField label=\"Email / User Name\" id=\"email\" data={this.state} handleChange={e => this.handleChange(e)} />\r\n                            <ArcTextField label=\"Password\" id=\"password\" type=\"password\" data={this.state} handleChange={e => this.handleChange(e)} />\r\n                        </div>\r\n                        <br />\r\n                        <button className=\"primary block\"  onClick={this.signup}>Create account</button>\r\n                        <br /><br />\r\n                        Already have a account? &nbsp; <button className=\"secondary\"  onClick={this.toggle}>Sign In</button>\r\n                    </form>\r\n                </div>}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    authorization: state.authorization\r\n})\r\n\r\nexport default connect(mapStateToProps, { getAuth, addAuth, removeAuth })(Login);\r\n","import React, { Component } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { getAuth } from '../../actions/AuthActions';\r\nimport { Authorization } from '../Types/GeneralTypes';\r\n\r\ninterface Props {\r\n  authorization: Authorization,\r\n  getAuth: Function,\r\n  path: string,\r\n  render: any,\r\n  renderAlt: any,\r\n  location: any\r\n}\r\n\r\ninterface State {\r\n\r\n}\r\n\r\nclass PrivateRoute extends Component<Props, State> {\r\n  componentWillMount() {\r\n    this.props.getAuth();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.props.authorization.isAuth && <Route path={this.props.path} render={this.props.render} />}\r\n        {/* {!this.props.authorization.isAuth && <Route path=\"/login\" render={this.props.renderAlt} />} */}\r\n        {/* {!this.props.authorization.isAuth && <Redirect to={{pathname: \"/login\", state: { from: this.props.location}}} />} */}\r\n        {/* {!this.props.authorization.isAuth && <Redirect to={{pathname: \"/login\"}} />} */}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  authorization: state.authorization\r\n})\r\n\r\nexport default connect(mapStateToProps, { getAuth })(PrivateRoute);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getAuth, addAuth, removeAuth } from '../../actions/AuthActions';\r\nimport { Authorization } from '../Types/GeneralTypes';\r\n\r\ninterface Props {\r\n    authorization: Authorization,\r\n    addAuth: Function,\r\n    getAuth: Function,\r\n    removeAuth: Function\r\n}\r\n\r\ninterface State {\r\n\r\n}\r\n\r\nclass AuthInit extends Component<Props, State> {\r\n    componentWillMount() {\r\n        if (!this.props.authorization.isAuth) {\r\n            console.log(this.props);\r\n        }\r\n        this.props.getAuth();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <></>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    authorization: state.authorization\r\n})\r\n\r\nexport default connect(mapStateToProps, { getAuth, addAuth, removeAuth })(AuthInit);","import { httpGet, httpPut } from '../components/Lib/RestTemplate';\r\nimport { constants } from '../components/Constants';\r\nimport { GET_PROFILE, SET_PROFILE } from './types';\r\n\r\nexport const getProfile = () => dispatch => {\r\n    dispatch({\r\n        type: GET_PROFILE\r\n    });\r\n}\r\n\r\nexport const reloadProfile = (authorization) => dispatch => {\r\n    httpGet(constants.API_URL_PREFERENCES,\r\n        {\r\n            headers: {\r\n                Authorization: 'Bearer ' + authorization.token\r\n            }\r\n        }, authorization.password)\r\n        .then(function(response) {\r\n            console.log(response);\r\n            dispatch({\r\n                type: SET_PROFILE,\r\n                payload: response.data\r\n            })\r\n        }\r\n    );\r\n}\r\n\r\nexport const persistProfile = (authorization, payload) => dispatch => {\r\n    httpPut(constants.API_URL_PREFERENCES, payload,\r\n        {\r\n            headers: {\r\n                Authorization: 'Bearer ' + authorization.token\r\n            }\r\n        }, authorization.password)\r\n        .then(function(response) {\r\n            dispatch({\r\n                type: SET_PROFILE,\r\n                payload: response.data\r\n            })\r\n        }\r\n    );\r\n}\r\n\r\nexport const setProfile = (payload) => dispatch => {\r\n    dispatch({\r\n        type: SET_PROFILE,\r\n        payload: payload\r\n    });\r\n}\r\n","import React, { Component } from 'react';\r\nimport { receiveMessage } from '../../events/MessageService';\r\n\r\ninterface Props {\r\n}\r\n\r\ninterface State {\r\n    backdrop: string\r\n}\r\n\r\nclass Backdrop extends Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {\r\n            backdrop: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        receiveMessage().subscribe(\r\n            message => {\r\n                if (message.name === 'dialog') {\r\n                    if (message.signal) {\r\n                        this.setState({backdrop: 'backdrop-fade'});\r\n                    } else {\r\n                        this.setState({backdrop: ''});\r\n                    }\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={this.state.backdrop}></div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Backdrop;","import React, { Component } from 'react';\r\nimport './style.scss';\r\nimport { receiveMessage, sendMessage } from '../../events/MessageService';\r\n\r\ninterface Props {\r\n}\r\n\r\ninterface State {\r\n    notification: any,\r\n    spinner: boolean\r\n}\r\n\r\nclass Notification extends Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {\r\n            spinner: false,\r\n            notification: null\r\n        }\r\n    }\r\n    componentWillMount() {\r\n        receiveMessage().subscribe(message => {\r\n            if (message.name === 'notification') {\r\n                if (!message.signal) {\r\n                    this.setState({\r\n                        notification: null,\r\n                    })\r\n                } else {\r\n                    this.setState({\r\n                        notification: message.data,\r\n                        spinner: false\r\n                    })\r\n                    \r\n                    if (message.data && message.data.duration) {\r\n                        setTimeout(() => {\r\n                            sendMessage('notification', false);\r\n                        }, message.data.duration);\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (message.name === 'spinner') {\r\n                this.setState({\r\n                    spinner: message.signal\r\n                })\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n            {this.state.notification && <div className={\"notification \" + this.state.notification.type}><div className=\"message\">{this.state.notification.message}</div></div>}\r\n            {this.state.spinner && <div className=\"lds-roller\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>}\r\n            {/* {this.props.spinner && <div className=\"lds-facebook\"><div></div><div></div><div></div></div>} */}\r\n            {/* {this.props.spinner && <div className=\"lds-dual-ring\"></div>} */}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Notification;","import React, { Component } from 'react';\r\n\r\nimport './style.scss';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Authorization, Profile } from '../Types/GeneralTypes';\r\n\r\ninterface Props {\r\n    authorization: Authorization,\r\n    profile: Profile\r\n}\r\n\r\ninterface State {\r\n    menu: boolean\r\n}\r\n\r\nclass Links extends Component<Props, State> {\r\n    toggleMenu = () => {\r\n        this.setState({\r\n            menu: !this.state.menu\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"links\">\r\n                {this.props.authorization.isAuth &&\r\n                    <>\r\n                    <NavLink to=\"/bookmarks\" className=\"navitem\" activeClassName=\"active\">Bookmarks</NavLink>\r\n                    <NavLink to=\"/notes\" className=\"navitem\" activeClassName=\"active\">Notes</NavLink>\r\n                    <NavLink to=\"/settings\" className=\"navitem\" activeClassName=\"active\">Settings</NavLink>\r\n                    <NavLink to=\"/help\" className=\"navitem\" activeClassName=\"active\">Help</NavLink>\r\n                    </>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Links;","import React, { Component } from 'react';\r\n\r\nimport './style.scss';\r\nimport protekt_white from '../../images/protekt_white.svg';\r\nimport protekt_black from '../../images/protekt_black.svg';\r\nimport Links from './Links';\r\nimport { Authorization, Profile } from '../Types/GeneralTypes';\r\n\r\ninterface Props {    \r\n    sendEvent: Function,\r\n    getAuth: Function,\r\n    addAuth: Function,\r\n    removeAuth: Function,\r\n    authorization: Authorization\r\n    getProfile: Function,\r\n    profile: Profile,\r\n    login: Function,\r\n    transparent: boolean,\r\n    logout: Function,\r\n    toggleSettings: any\r\n}\r\n\r\ninterface State {\r\n    showSettings: boolean\r\n}\r\n\r\nclass Desktop extends Component<Props, State> {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.props.getProfile();\r\n        this.state = {\r\n            showSettings: false\r\n        }\r\n    }\r\n\r\n    signin = (type) => {\r\n        this.props.login(type);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={(this.props.transparent ? \"navbar desktop transparent\" : \"navbar desktop\")}>\r\n                <div className=\"left\">\r\n                    {!this.props.transparent && this.props.profile.theme === 'theme_light' && <img className=\"logo\" src={protekt_black} alt=\"Protekt logo\" />}\r\n                    {(this.props.transparent || this.props.profile.theme === 'theme_dark') && <img className=\"logo\" src={protekt_white} alt=\"Protekt logo\" />}\r\n                    <Links authorization={this.props.authorization} profile={this.props.profile} />\r\n                </div>\r\n                <div className=\"right\">\r\n                    <div className=\"action\">\r\n                        {/* <button className=\"default disabled small\" onClick={this.props.toggleSettings}><i className=\"material-icons\">palette</i>Theme</button> */}\r\n                        {this.props.authorization.isAuth && \r\n                            <button className=\"default disabled small\" onClick={this.props.toggleSettings}><i className=\"material-icons\">brush</i>Appearance</button>}\r\n                        {this.props.authorization.isAuth && \r\n                            <button className=\"default disabled small\" onClick={this.props.logout()}><i className=\"material-icons\">power_settings_new</i>Logout</button>}\r\n                        {!this.props.authorization.isAuth && \r\n                            <button className=\"default disabled small\" onClick={() => this.signin('signin')}><i className=\"material-icons\">person</i>Login</button>}\r\n                        {!this.props.authorization.isAuth && \r\n                            <button className=\"default disabled small\" onClick={() => this.signin('signup')}><i className=\"material-icons\">person_add</i>Signup</button>}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Desktop;","import React, { Component } from 'react';\r\n\r\nimport './style.scss';\r\nimport protekt_white from '../../images/protekt_white.svg';\r\nimport protekt_black from '../../images/protekt_black.svg';\r\nimport Links from './Links';\r\nimport { Authorization, Profile } from '../Types/GeneralTypes';\r\n\r\ninterface Props {    \r\n    sendEvent: Function,\r\n    getAuth: Function,\r\n    addAuth: Function,\r\n    removeAuth: Function,\r\n    authorization: Authorization\r\n    getProfile: Function,\r\n    profile: Profile,\r\n    login: Function,\r\n    transparent: boolean,\r\n    logout: Function,\r\n    toggleSettings: any\r\n}\r\n\r\ninterface State {\r\n    menu: boolean\r\n}\r\n\r\nclass Mobile extends Component<Props, State> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.props.getProfile();\r\n        this.state = {\r\n            menu: false\r\n        }\r\n    }\r\n\r\n    toggleMenu = () => {\r\n        this.setState({\r\n            menu: !this.state.menu\r\n        })\r\n    }\r\n\r\n    signin = (type) => {\r\n        this.props.login(type);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n            <div className={(this.props.transparent ? \"navbar mobile transparent\" : \"navbar mobile\")}>\r\n                <div className=\"left\">\r\n                    {!this.props.transparent && this.props.profile.theme === 'theme_light' && <img className=\"logo\" src={protekt_black} alt=\"Protekt logo\" />}\r\n                    {(this.props.transparent || this.props.profile.theme === 'theme_dark') && <img className=\"logo\" src={protekt_white} alt=\"Protekt logo\" />}\r\n                    {/* links */}\r\n                </div>\r\n                <div className=\"right\">\r\n                    {/* <div className=\"settings-icon\" onClick={this.props.toggleSettings}><i className=\"material-icons\">settings</i></div> */}\r\n                    <div className={(this.state.menu ? \"menu active\" : \"menu\")} onClick={this.toggleMenu}><div></div></div>\r\n                    {/* action login */}\r\n                </div>\r\n            </div>\r\n            <div className={(this.state.menu ? \"slider show\" : \"slider hide\")} onClick={this.toggleMenu}>\r\n                <div className={(this.state.menu ? \"container\": \"container hidetext\")} onClick={this.toggleMenu}>\r\n                    <div className=\"action\">\r\n                        <div className=\"settings-icon\" onClick={this.props.toggleSettings}>\r\n                            {this.props.authorization.isAuth && <button className=\"default disabled small\" onClick={this.props.toggleSettings}><i className=\"material-icons\">brush</i>Appearance</button>}\r\n                        </div>\r\n                        <div className=\"buttons\">\r\n                            {this.props.authorization.isAuth && <button className=\"default disabled small\" onClick={this.props.logout()}><i className=\"material-icons\">power_settings_new</i>Logout</button>}\r\n                            {!this.props.authorization.isAuth && <button className=\"secondary small left\" onClick={() => this.signin('signin')}><i className=\"material-icons\">person</i>Login</button>}\r\n                            {!this.props.authorization.isAuth && <button className=\"secondary small right\" onClick={() => this.signin('signup')}><i className=\"material-icons\">person_add</i>Signup</button>}\r\n                        </div>\r\n                    </div>\r\n                    <Links authorization={this.props.authorization} profile={this.props.profile}/>\r\n                </div>\r\n            </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Mobile;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {withRouter} from 'react-router'\r\nimport { getProfile, setProfile, reloadProfile } from '../../actions/ProfileActions';\r\n\r\nimport './style.scss';\r\nimport Desktop from './Desktop';\r\nimport Mobile from './Mobile';\r\nimport { Switch } from '@material-ui/core';\r\nimport ArcDialog from '../Ux/ArcDialog';\r\nimport { Authorization, Profile } from '../Types/GeneralTypes';\r\nimport { receiveMessage } from '../../events/MessageService';\r\n\r\ninterface Props {    \r\n    sendEvent: Function,\r\n    getAuth: Function,\r\n    addAuth: Function,\r\n    removeAuth: Function,\r\n    authorization: Authorization,\r\n    getProfile: Function,\r\n    setProfile: Function,\r\n    reloadProfile: Function,\r\n    profile: Profile,\r\n    login: Function,\r\n    transparent: boolean,\r\n    logout: Function,\r\n    toggleSettings: any,\r\n    history: any,\r\n    location: any,\r\n    match: any\r\n}\r\n\r\ninterface State {\r\n    visible: boolean,\r\n    mobilemenu: string,\r\n    chooseTheme: boolean,\r\n    showSettings: boolean,\r\n    transparentNavBar: boolean,\r\n    firstLoad: boolean\r\n}\r\n\r\nclass Navigation extends Component<Props, State> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.props.getProfile();\r\n        this.state = {\r\n            visible: false,\r\n            mobilemenu: 'hide',\r\n            chooseTheme: false,\r\n            showSettings: false,\r\n            transparentNavBar: false,\r\n            firstLoad: true\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        receiveMessage().subscribe(\r\n            message => {\r\n                if (message.name === 'navbar-transparency') {\r\n                    this.setState({\r\n                        transparentNavBar: message.signal\r\n                    })\r\n                }\r\n\r\n                if (message.name === 'loggedin') {\r\n                    this.props.reloadProfile(this.props.authorization);\r\n                    this.setState({\r\n                        firstLoad: false\r\n                    })\r\n                }\r\n\r\n                if (message.name === 'loggedout') {\r\n                    this.props.history.push('/home');\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (this.state.firstLoad && nextProps.authorization && nextProps.authorization.isAuth) {\r\n            this.props.reloadProfile(nextProps.authorization);\r\n            this.setState({\r\n                firstLoad: false\r\n            })\r\n        }\r\n    }\r\n\r\n    toggleDarkMode = () => {\r\n        if (this.props.profile.theme === 'theme_dark') {\r\n            this.props.setProfile({\r\n                ...this.props.profile,\r\n                theme: 'theme_light'\r\n            })   \r\n        } else  {\r\n            this.props.setProfile({\r\n                ...this.props.profile,\r\n                theme: 'theme_dark'\r\n            })   \r\n        }\r\n    }\r\n\r\n    changeTextSize = (size) => {\r\n        this.props.setProfile({\r\n            ...this.props.profile,\r\n            textSize: size\r\n        })\r\n    }\r\n\r\n    changeThemeColor = (color) => {\r\n        this.props.setProfile({\r\n            ...this.props.profile,\r\n            themeColor: color\r\n        })\r\n    }\r\n\r\n    login = (type) => {\r\n        this.props.history.push('/login?type=' + type);\r\n    }\r\n\r\n    toggleSettings = () => {\r\n        this.setState({\r\n            showSettings: !this.state.showSettings\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"nav\">\r\n                <Desktop {...this.props} logout={this.props.logout} login={this.login} toggleSettings={this.toggleSettings} transparent={this.state.transparentNavBar} />\r\n                <Mobile {...this.props} logout={this.props.logout} login={this.login} toggleSettings={this.toggleSettings} transparent={this.state.transparentNavBar} />\r\n\r\n                <ArcDialog title=\"Appearance\" visible={this.state.showSettings} toggleVisibility={this.toggleSettings}>\r\n                    <div className=\"settings\">\r\n                        <div>Dark mode</div>\r\n                        <div>\r\n                            <Switch\r\n                            checked={this.props.profile.theme === 'theme_dark'}\r\n                            onChange={this.toggleDarkMode}\r\n                            inputProps={{ 'aria-label': 'primary checkbox' }}/>\r\n                        </div>\r\n                        \r\n                        <div>Text Size</div>\r\n                        <div>\r\n                            <div className={\"text-size size-1 space-right-1 \" + (this.props.profile.textSize === 'textsize_tiny' ? 'active' : '')} onClick={() => this.changeTextSize('textsize_tiny')}>Az</div>\r\n                            <div className={\"text-size size-2 space-right-1 \" + (this.props.profile.textSize === 'textsize_small' ? 'active' : '')} onClick={() => this.changeTextSize('textsize_small')}>Az</div>\r\n                            <div className={\"text-size size-3 space-right-1 \" + (this.props.profile.textSize === 'textsize_medium' ? 'active' : '')} onClick={() => this.changeTextSize('textsize_medium')}>Az</div>\r\n                            <div className={\"text-size size-4 \" + (this.props.profile.textSize === 'textsize_large' ? 'active' : '')} onClick={() => this.changeTextSize('textsize_large')}>Az</div>\r\n                        </div>\r\n\r\n                        <div className=\"typography-5\">Color Scheme</div>\r\n                        <div>\r\n                            <div className=\"theme-color color-1\" onClick={() => this.changeThemeColor('themecolor_1')}><i className=\"material-icons\">{this.props.profile.themeColor === 'themecolor_1' && 'check'}</i></div>\r\n                            <div className=\"theme-color color-2\" onClick={() => this.changeThemeColor('themecolor_2')}><i className=\"material-icons\">{this.props.profile.themeColor === 'themecolor_2' && 'check'}</i></div>\r\n                            <div className=\"theme-color color-3\" onClick={() => this.changeThemeColor('themecolor_3')}><i className=\"material-icons\">{this.props.profile.themeColor === 'themecolor_3' && 'check'}</i></div>\r\n                            <div className=\"theme-color color-4\" onClick={() => this.changeThemeColor('themecolor_4')}><i className=\"material-icons\">{this.props.profile.themeColor === 'themecolor_4' && 'check'}</i></div>\r\n                            <div className=\"theme-color color-5\" onClick={() => this.changeThemeColor('themecolor_5')}><i className=\"material-icons\">{this.props.profile.themeColor === 'themecolor_5' && 'check'}</i></div>\r\n                            <div className=\"theme-color color-6\" onClick={() => this.changeThemeColor('themecolor_6')}><i className=\"material-icons\">{this.props.profile.themeColor === 'themecolor_6' && 'check'}</i></div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"actions\">\r\n                        <button className=\"primary\"  onClick={this.toggleSettings}>Close</button>\r\n                    </div>\r\n                </ArcDialog>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    profile: state.profile\r\n})\r\n\r\nexport default connect(mapStateToProps, { getProfile, setProfile, reloadProfile })(withRouter(Navigation));","import React from 'react';\r\nimport { getProfile, setProfile, persistProfile } from '../../actions/ProfileActions';\r\nimport './style.scss';\r\nimport View from '../Ux/View';\r\nimport ViewResolver from '../Ux/ViewResolver';\r\nimport { Switch } from '@material-ui/core';\r\nimport { connect } from 'react-redux';\r\nimport {importBookmarks} from '../Bookmarks/BookmarkService';\r\nimport ArcTextField from '../Ux/ArcTextField';\r\nimport { isEmptyOrSpaces } from '../Utils';\r\nimport {signin, updateUserDetails, preSignin} from '../Auth/AuthService';\r\nimport { Authorization, Profile } from '../Types/GeneralTypes';\r\nimport { sendMessage } from '../../events/MessageService';\r\nimport { httpGet } from \"../Lib/RestTemplate\";\r\nimport {constants} from \"../Constants\";\r\nimport {sendBookmarkExportEmail} from \"./SettingsService\";\r\n\r\ninterface Props {\r\n  profile: Profile,\r\n  getProfile: Function,\r\n  setProfile: Function,\r\n  persistProfile: Function,\r\n  authorization: Authorization\r\n}\r\n\r\ninterface State {\r\n  oldPassword: string,\r\n  newPassword: string,\r\n  repeatPassword: string,\r\n  name: string,\r\n  email: string,\r\n  data:any\r\n}\r\n\r\nclass Settings extends React.Component<Props, State> {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: '',\r\n      email: '',\r\n      oldPassword: '',\r\n      newPassword: '',\r\n      repeatPassword: '',\r\n      data: []\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      // name: this.props.cookies.get('name'),\r\n      // email: this.props.cookies.get('email')\r\n    })\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    this.setState(\r\n        {\r\n          ...this.state,\r\n            [event.currentTarget.name]: event.currentTarget.value\r\n        }\r\n    )\r\n  }\r\n\r\n  toggleDarkMode = () => {\r\n      if (this.props.profile.theme === 'theme_dark') {\r\n          this.props.persistProfile(this.props.authorization, {\r\n              ...this.props.profile,\r\n              theme: 'theme_light'\r\n          })\r\n      } else  {\r\n          this.props.persistProfile(this.props.authorization, {\r\n              ...this.props.profile,\r\n              theme: 'theme_dark'\r\n          })\r\n      }\r\n  }\r\n\r\n  changeTextSize = (size) => {\r\n      this.props.persistProfile(this.props.authorization, {\r\n          ...this.props.profile,\r\n          textSize: size\r\n      })\r\n  }\r\n\r\n  changeThemeColor = (color) => {\r\n      this.props.persistProfile(this.props.authorization, {\r\n          ...this.props.profile,\r\n          themeColor: color\r\n      })\r\n  }\r\n\r\n  changePassword = () => {\r\n    if (isEmptyOrSpaces(this.state.oldPassword)) {\r\n      sendMessage('notification', true, {message: 'Old password not provided', type: 'failure', duration: 5000});\r\n      return;\r\n    }\r\n\r\n    if (isEmptyOrSpaces(this.state.newPassword) || isEmptyOrSpaces(this.state.repeatPassword)) {\r\n      sendMessage('notification', true, {message: 'New password not provided', type: 'failure', duration: 5000});\r\n      return;\r\n    }\r\n\r\n    if (this.state.newPassword !== this.state.repeatPassword) {\r\n      sendMessage('notification', true, {message: 'New password not provided', type: 'failure', duration: 5000});\r\n      return;\r\n    }\r\n\r\n    this.checkOldPassword('oldpassword');\r\n  }\r\n\r\n  checkOldPassword = (type) => {\r\n    preSignin(this.state.email).then((response) => {\r\n      if (response.status === 200) {\r\n          signin({\r\n              email: this.state.email,\r\n              password: this.state.oldPassword\r\n              }, response.data)\r\n              .then((response) => {\r\n                  if (response.status === 200) {\r\n                      this.updateUserDetailsImpl('password');\r\n                      // sendMessage('notification', true, {message: 'Passphrase updated successfully', type: 'success', duration: 3000});\r\n                  } else if (response.status === 401) {\r\n                      sendMessage('notification', true, {message: 'Incorrect passphrase', type: 'failure', duration: 3000});\r\n                  } else {\r\n                      sendMessage('notification', true, {message: 'Unknown response from server. Please try again or at a later time', type: 'failure', duration: 3000});\r\n                  }\r\n              })\r\n              .catch((error) => {\r\n                  sendMessage('notification', true, {'type': 'failure', message: 'Unknown error. Please try again or at a later time', duration: 3000});\r\n              })\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n\r\n  updateUserDetails = () => {\r\n    if (isEmptyOrSpaces(this.state.name)) {\r\n      sendMessage('notification', true, {message: 'Name not provided', type: 'failure', duration: 5000});\r\n      return;\r\n    }\r\n\r\n    if (isEmptyOrSpaces(this.state.email)) {\r\n      sendMessage('notification', true, {message: 'Email not provided', type: 'failure', duration: 5000});\r\n      return;\r\n    }\r\n\r\n    if (!(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(this.state.email))) {\r\n      sendMessage('notification', true, {type: 'failure', message: 'Email ID is invalid', duration: 3000});\r\n      return;\r\n    }\r\n\r\n    this.updateUserDetailsImpl('user');\r\n\r\n  }\r\n\r\n  updateUserDetailsImpl = (type) => {\r\n    updateUserDetails({\r\n      name: this.state.name,\r\n      email: this.state.email,\r\n      password: this.state.newPassword\r\n    }, this.props.authorization, type)\r\n    .then((response: any) => {\r\n      if (response.status === 201) {\r\n        if (type === 'password') {\r\n          sendMessage('notification', true, {message: 'Password updated successfully', type: 'success', duration: 3000});\r\n        } else{\r\n          // this.props.cookies.set('name', this.state.name);\r\n          // this.props.cookies.set('email', this.state.email);\r\n          sendMessage('notification', true, {message: 'User account updated successfully', type: 'success', duration: 3000});\r\n        }\r\n      } else {\r\n        sendMessage('notification', true, {'type': 'failure', message: 'Unknown error. Please try again or at a later time', duration: 3000});\r\n      }\r\n    })\r\n    .catch((error) => {\r\n        sendMessage('notification', true, {'type': 'failure', message: 'Unknown error. Please try again or at a later time', duration: 3000});\r\n    })\r\n  }\r\n\r\n  fileChoosen = (event) => {\r\n    event.preventDefault();\r\n    const that = this;\r\n    var reader = new FileReader();\r\n    sendMessage('spinner');\r\n    reader.onload = function(event: any) {\r\n      importBookmarks({\r\n        content: event.target.result\r\n      }, that.props.authorization.token)\r\n      .then(function(response) {\r\n        sendMessage('notification', true, {message: 'Imported (' + response.data.length + ') bookmarks successfully', type: 'success', duration: 6000});\r\n      });\r\n    }\r\n    reader.readAsText(event.target.files[0]);\r\n    event.target.value = '';\r\n  }\r\n\r\n  exportBookmark = () => {\r\n    const that = this;\r\n    httpGet(constants.API_URL_BOOKMARK,\r\n        {\r\n          headers: {\r\n            Authorization: 'Bearer ' + that.props.authorization.token\r\n          }\r\n        }, that.props.authorization.password)\r\n        .then(function(response) {\r\n          let staticContent = '<META HTTP-EQUIV=\"Content-Type\" CONTENT=\"text/html;' +\r\n              ' charset=UTF-8\"><TITLE>Bookmarks</TITLE><H1>Bookmarks</H1>';\r\n\r\n          that.setState({data: response.data});\r\n\r\n          that.state.data.map(function(bookmark, i){\r\n            let htmlContent = '<DL><p>' + '<DT>' + '<A ' + 'HREF=\"' + bookmark.href + '\">' + bookmark.title + '</A>' + '</DL><p>';\r\n            staticContent = staticContent+htmlContent;\r\n          })\r\n\r\n          console.log(staticContent);\r\n          that.sendExportEmail(staticContent);\r\n        }\r\n        );\r\n\r\n  }\r\n  sendExportEmail = (staticContent) => {\r\n\r\n    sendBookmarkExportEmail({\r\n          email: this.state.email,\r\n          content: staticContent\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: 'Bearer ' + this.props.authorization.token\r\n          }\r\n        })\r\n        .then((response: any) => {\r\n          if (response === 200) {\r\n            sendMessage('notification', true, {message: 'Check your mail for bookmark attachment', type: 'success', duration: 3000});\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          sendMessage('notification', true, {'type': 'failure', message: 'Bad request', duration: 3000});\r\n        })\r\n  }\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"settings\">\r\n        <ViewResolver sideLabel='More options'>\r\n          <View main>\r\n          <div className=\"typography-3\">Import Bookmarks</div>\r\n          <div className=\"space-top-2 space-left-2\">\r\n            <label className=\"file-upload\">\r\n              <input type=\"file\" name=\"file\" onChange={this.fileChoosen} />\r\n              Import\r\n            </label>\r\n          </div>\r\n\r\n\r\n          <div className=\"typography-3 space-top-4\">Export Bookmarks</div>\r\n          <div className=\"space-top-2\"><button className=\"secondary animate space-left-2\" onClick={this.exportBookmark}>Export</button></div>\r\n\r\n\r\n          <div className=\"typography-3 space-top-4\">Appearance</div>\r\n          <div className=\"appearance\">\r\n            <div className=\"typography-5\">Dark mode</div>\r\n            <div>\r\n                <Switch\r\n                checked={this.props.profile.theme === 'theme_dark'}\r\n                onChange={this.toggleDarkMode}\r\n                inputProps={{ 'aria-label': 'primary checkbox' }}/>\r\n            </div>\r\n\r\n            <div className=\"typography-5 space-bottom-2\">Text Size</div>\r\n            <div className=\" space-bottom-2\">\r\n              <div className={\"text-size size-1 space-right-1 \" + (this.props.profile.textSize === 'textsize_tiny' ? 'active' : '')}  onClick={() => this.changeTextSize('textsize_tiny')}>Az</div>\r\n              <div className={\"text-size size-2 space-right-1 \" + (this.props.profile.textSize === 'textsize_small' ? 'active' : '')}  onClick={() => this.changeTextSize('textsize_small')}>Az</div>\r\n              <div className={\"text-size size-3 space-right-1 \" + (this.props.profile.textSize === 'textsize_medium' ? 'active' : '')} onClick={() => this.changeTextSize('textsize_medium')}>Az</div>\r\n              <div className={\"text-size size-4 \" + (this.props.profile.textSize === 'textsize_large' ? 'active' : '')} onClick={() => this.changeTextSize('textsize_large')}>Az</div>\r\n            </div>\r\n\r\n            <div className=\"typography-5\">Color Scheme</div>\r\n            <div>\r\n              <div className=\"theme-color color-1\" onClick={() => this.changeThemeColor('themecolor_1')}><i className=\"material-icons\">{this.props.profile.themeColor === 'themecolor_1' && 'check'}</i></div>\r\n              <div className=\"theme-color color-2\" onClick={() => this.changeThemeColor('themecolor_2')}><i className=\"material-icons\">{this.props.profile.themeColor === 'themecolor_2' && 'check'}</i></div>\r\n              <div className=\"theme-color color-3\" onClick={() => this.changeThemeColor('themecolor_3')}><i className=\"material-icons\">{this.props.profile.themeColor === 'themecolor_3' && 'check'}</i></div>\r\n              <div className=\"theme-color color-4\" onClick={() => this.changeThemeColor('themecolor_4')}><i className=\"material-icons\">{this.props.profile.themeColor === 'themecolor_4' && 'check'}</i></div>\r\n              <div className=\"theme-color color-5\" onClick={() => this.changeThemeColor('themecolor_5')}><i className=\"material-icons\">{this.props.profile.themeColor === 'themecolor_5' && 'check'}</i></div>\r\n              <div className=\"theme-color color-6\" onClick={() => this.changeThemeColor('themecolor_6')}><i className=\"material-icons\">{this.props.profile.themeColor === 'themecolor_6' && 'check'}</i></div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"typography-3 space-top-4\">User Account</div>\r\n          <div><ArcTextField label=\"Name\" data={this.state} id=\"name\" handleChange={e => this.handleChange(e)} /></div>\r\n          <div><ArcTextField label=\"Email\" data={this.state} id=\"email\" handleChange={e => this.handleChange(e)} /></div>\r\n          <div><button className=\"secondary animate space-top-1\" onClick={this.updateUserDetails}>Update details</button></div>\r\n\r\n          <div className=\"typography-3 space-top-4\">Password</div>\r\n          <div><ArcTextField type=\"password\" label=\"Old Password\" data={this.state} id=\"oldPassword\" handleChange={e => this.handleChange(e)} /></div>\r\n          <div><ArcTextField type=\"password\" label=\"New Password\" data={this.state} id=\"newPassword\" handleChange={e => this.handleChange(e)} /></div>\r\n          <div><ArcTextField type=\"password\" label=\"Repeat New Password\" data={this.state} id=\"repeatPassword\" handleChange={e => this.handleChange(e)} /></div>\r\n          <div><button className=\"secondary animate space-top-1\" onClick={this.changePassword}>Change Password</button></div>\r\n          </View>\r\n        </ViewResolver>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  profile: state.profile\r\n})\r\n\r\nexport default connect(mapStateToProps, { getProfile, setProfile, persistProfile })(Settings);","import { httpPost } from \"../Lib/RestTemplate\";\r\nimport { constants } from '../Constants';\r\n\r\nexport function importBookmarks(data, token) {\r\n    console.log(data);\r\n    return httpPost(constants.API_URL_BOOKMARK_IMPORT, data,\r\n        {\r\n            headers: {\r\n                Authorization: 'Bearer ' + token\r\n            }\r\n        })\r\n        .then(function(response) {\r\n            return Promise.resolve(response);\r\n        })\r\n}\r\n\r\n","import { httpPost } from \"../Lib/RestTemplate\";\r\nimport { constants } from '../Constants';\r\n\r\nexport function sendBookmarkExportEmail(data, token) {\r\n\r\n    return httpPost(constants.API_URL_MAIL, data,\r\n        {\r\n            headers: {\r\n                Authorization: 'Bearer ' + token\r\n            }\r\n        })\r\n        .then(function(response) {\r\n            return Promise.resolve(response.status);\r\n        })\r\n}\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getAuth, addAuth, removeAuth } from '../../actions/AuthActions';\r\nimport './Login.scss';\r\nimport ArcTextField from '../Ux/ArcTextField';\r\nimport { resetPassword } from './AuthService';\r\nimport { sendMessage } from '../../events/MessageService';\r\nimport {isEmptyOrSpaces} from \"../Utils\";\r\n\r\nconst queryString = require('query-string');\r\n\r\ninterface Props {\r\n    history: any,\r\n    location: any\r\n}\r\n\r\ninterface State {\r\n    password: string;\r\n    repeatPassword: string;\r\n    resetCode: string;\r\n}\r\n\r\nclass ResetPassword extends Component<Props, State> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            password: '',\r\n            repeatPassword: '',\r\n            resetCode:''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.location.search) {\r\n            const query = queryString.parse(this.props.location.search);\r\n            if (query.code) {\r\n                this.setState({\r\n                    resetCode: query.code\r\n                })\r\n            }else {\r\n                this.props.history.push(\"/home\");\r\n            }\r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState(\r\n            {\r\n                ...this.state,\r\n                [event.currentTarget.name]: event.currentTarget.value\r\n            }\r\n        )\r\n    }\r\n\r\n    changePassword = () => {\r\n        if (isEmptyOrSpaces(this.state.password)) {\r\n            sendMessage('notification', true, {message: 'password not provided', type: 'failure', duration: 5000});\r\n            return;\r\n        }\r\n\r\n        if (isEmptyOrSpaces(this.state.repeatPassword) || isEmptyOrSpaces(this.state.repeatPassword)) {\r\n            sendMessage('notification', true, {message: 'Repeat password not provided', type: 'failure', duration: 5000});\r\n            return;\r\n        }\r\n\r\n        if (this.state.password !== this.state.repeatPassword) {\r\n            sendMessage('notification', true, {message: 'Password is not matching', type: 'failure', duration: 5000});\r\n            return;\r\n        }\r\n\r\n        this.resetPassword('password');\r\n\r\n    }\r\n\r\n    resetPassword = (type) => {\r\n        resetPassword({\r\n            password: this.state.password,\r\n            resetCode: this.state.resetCode\r\n        }, type)\r\n            .then((response: any) => {\r\n                if (response === 200) {\r\n                    if (type === 'password') {\r\n                        sendMessage('notification', true, {message: 'Password Changed successfully', type: 'success', duration: 3000});\r\n                    }\r\n                } else {\r\n                    sendMessage('notification', true, {'type': 'failure', message: 'Invalid request', duration: 3000});\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                sendMessage('notification', true, {'type': 'failure', message: 'Bad request', duration: 3000});\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"login\">\r\n                <div className=\"container\">\r\n                    <form method=\"GET\" onSubmit={this.changePassword} noValidate>\r\n                        <h1>Reset password</h1>\r\n                        <div className=\"form\">\r\n                        <ArcTextField label=\"Password\" id=\"password\" type=\"password\" data={this.state} handleChange={e => this.handleChange(e)} />\r\n                            <ArcTextField label=\"Repeat Password\" id=\"repeatPassword\" type=\"password\" data={this.state} handleChange={e => this.handleChange(e)} />\r\n                        </div>\r\n                        <br />\r\n                        <button className=\"primary block\"  onClick={this.changePassword}>Submit</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    authorization: state.authorization\r\n})\r\n\r\nexport default connect(mapStateToProps, { getAuth, addAuth, removeAuth })(ResetPassword);\r\n","import React, { Component } from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport './style.scss';\r\nimport Home from '../Home';\r\nimport Bookmarks from '../Bookmarks';\r\nimport Notes from '../Notes';\r\nimport { HashRouter } from 'react-router-dom/cjs/react-router-dom.min';\r\nimport Login from '../Auth/Login';\r\nimport PrivateRoute from '../Auth/PrivateRoute';\r\nimport AuthInit from '../Auth/AuthInit';\r\nimport { connect } from 'react-redux';\r\nimport { getAuth, addAuth, removeAuth } from '../../actions/AuthActions';\r\nimport { getProfile } from '../../actions/ProfileActions';\r\n\r\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\nimport Backdrop from './Backdrop';\r\nimport Notification from '../Notification';\r\nimport Navigation from '../Navigation';\r\nimport Settings from '../Settings';\r\nimport { Authorization } from '../Types/GeneralTypes';\r\nimport { sendMessage } from '../../events/MessageService';\r\nimport ResetPassword from '../Auth/ResetPassword';\r\n\r\nconst themes = {\r\n    'themecolor_1': getTheme('#C4005B'),\r\n    'themecolor_2': getTheme('#803BC2'),\r\n    'themecolor_3': getTheme('#E74443'),\r\n    'themecolor_4': getTheme('#29BE3B'),\r\n    'themecolor_5': getTheme('#ffe20f'),\r\n    'themecolor_6': getTheme('#4d4dff')\r\n}\r\n\r\nfunction getTheme(color) {\r\n    return createMuiTheme({\r\n        palette: {\r\n          primary: {\r\n              main: color         \r\n          },\r\n          secondary: {\r\n              main: color\r\n          }\r\n        }\r\n      });\r\n}\r\n\r\ninterface Props {\r\n    getProfile: Function,\r\n    setProfile: Function,\r\n    getAuth: Function,\r\n    addAuth: Function,\r\n    removeAuth: Function,\r\n    history: any,\r\n\r\n    // event: PropTypes.object,\r\n    profile: any,\r\n    authorization: Authorization\r\n}\r\n\r\ninterface State {\r\n    authorization: Authorization,\r\n    profile: any,\r\n    event: any\r\n}\r\n\r\nclass Content extends Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.props.getProfile();\r\n        this.props.getAuth();\r\n    }\r\n    \r\n    logout = (event, type = 'success', message = 'You have been logged out') => {\r\n        this.props.removeAuth();\r\n        sendMessage('notification', true, {type: type, message: message, duration: 3000});\r\n        sendMessage('loggedout', true);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={\"App \" + this.props.profile.theme + \" \" + this.props.profile.textSize + \" \" + this.props.profile.themeColor}>\r\n                \r\n                <HashRouter>\r\n                    <AuthInit {...this.props} />\r\n                    <Backdrop />\r\n                    <div className=\"body\">\r\n                        <div className=\"body-content\">\r\n                            <Notification />\r\n                            <MuiThemeProvider theme={themes[this.props.profile.themeColor]}>\r\n                                <Navigation {...this.props} logout={() => this.logout}/>\r\n                                <Route exact path=\"/\" render={(props) => <Home {...props} {...this.props} logout={() => this.logout}/>} />\r\n                                <Route path=\"/home\" render={(props) => <Home {...props} {...this.props} logout={() => this.logout}/>} />\r\n                                <Route path=\"/login\" render={(props) => <Login {...props} {...this.props} logout={() => this.logout}/>} />\r\n                                <Route path=\"/reset\" render={(props) => <ResetPassword {...props} {...this.props} logout={() => this.logout}/>} />\r\n                                <PrivateRoute path=\"/bookmarks\" render={(props) => <Bookmarks {...props} {...this.props} logout={this.logout} />} />\r\n                                <PrivateRoute path=\"/notes\" render={(props) => <Notes {...props} {...this.props} logout={() => this.logout} />} />\r\n                                <PrivateRoute path=\"/settings\" render={(props) => <Settings {...props} {...this.props} logout={() => this.logout}/>} />\r\n                            </MuiThemeProvider>\r\n                        </div>\r\n                    </div>\r\n                </HashRouter>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  authorization: state.authorization,\r\n  profile: state.profile\r\n})\r\n\r\nexport default connect(mapStateToProps, { getAuth, addAuth, removeAuth, getProfile })(Content);\r\n","import React, { Component } from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport store from '../../store';\r\nimport './style.scss';\r\nimport './button-notched.scss';\r\nimport './metric.scss';\r\nimport Content from './Content';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Provider store={store}>\r\n        <Content {...this.props} />\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/protekt_white.0157e466.svg\";","module.exports = __webpack_public_path__ + \"static/media/protekt_black.f386b1d6.svg\";"],"sourceRoot":""}