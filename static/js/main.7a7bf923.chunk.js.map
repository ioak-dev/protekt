{"version":3,"sources":["reducers/AuthReducer.ts","reducers/ProfileReducer.ts","reducers/index.ts","actions/types.ts","store.ts","events/MessageService.ts","components/Home/index.tsx","components/Bookmarks/Link.tsx","components/Constants.ts","components/Ux/OakDialog.tsx","components/Ux/OakButton.tsx","components/Ux/ViewResolver.tsx","components/Ux/View.tsx","components/Utils.ts","components/Ux/Sidebar.tsx","components/Lib/RestTemplate.ts","components/Ux/OakText.tsx","components/Bookmarks/index.tsx","components/Ux/Showdown.tsx","components/Ux/OakSelect.tsx","components/Notes/Note.tsx","components/Ux/ActionButton.tsx","components/Notes/NoteRef.tsx","components/Notes/index.tsx","actions/AuthActions.ts","components/Auth/AuthService.ts","components/Auth/Login.tsx","components/Auth/PrivateRoute.tsx","components/Auth/AuthInit.tsx","actions/ProfileActions.ts","components/App/Backdrop.tsx","components/Notification/index.tsx","components/Navigation/Links.tsx","components/Navigation/Desktop.tsx","components/Navigation/Mobile.tsx","components/Navigation/index.tsx","components/Settings/index.tsx","components/Bookmarks/BookmarkService.ts","components/Settings/SettingsService.ts","components/Auth/ResetPassword.tsx","components/App/Content.tsx","components/App/index.tsx","serviceWorker.ts","index.tsx","images/protekt_white.svg","images/protekt_black.svg"],"names":["initialState","isAuth","token","secret","name","password","theme","textSize","themeColor","combineReducers","authorization","state","arguments","length","undefined","action","type","console","log","Object","objectSpread","payload","profile","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","apply","subject","Subject","sendMessage","signal","data","next","receiveMessage","asObservable","Home","react_default","a","createElement","Fragment","className","React","Component","Link","edit","_this","props","editBookmark","bookmark","delete","deleteBookmark","id","_this2","this","tags","split","map","item","push","key","onClick","searchByTag","title","target","rel","href","createdAt","constants","API_URL_PRESIGNUP","API_URL_SIGNUP","API_URL_PRESIGNIN","API_URL_SIGNIN","API_URL_RESET","API_URL_CODE","API_URL_BOOKMARK","API_URL_BOOKMARK_IMPORT","API_URL_MAIL","API_URL_PREFERENCES","API_URL_USER_DETAILS","API_URL_NOTE","OakDialog","escFunction","event","keyCode","visible","toggleVisibility","getDialogStyle","style","small","fullscreen","nextProps","document","body","classList","add","remove","addEventListener","documentWidth","documentElement","clientWidth","scrollBarWidth","window","innerWidth","setProperty","removeEventListener","children","OakButton","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","getStyle","variant","invert","align","menuActive","icon","ViewResolver","_isMounted","viewPort","matchMedia","viewPortChange","port","setState","mobileViewPort","matches","toggleSideView","showSide","views","initializeViews","addListener","subscribe","message","_this3","Children","toArray","forEach","node","main","side","_this4","Ux_OakButton","sideLabel","View","isEmptyOrSpaces","str","match","text","words","found","word","RegExp","Sidebar","toggle","show","label","hide","elements","number","animate","baseUrl","process","autoGeneratedFields","unprotectedEndpoints","httpGet","endpoint","headers","skipFields","axios","get","then","response","find","includes","decryptContent","Promise","resolve","httpPost","encryptContent","post","httpPut","put","httpDelete","content","Array","isArray","encryptedContent","encryptObject","encrypt","decryptObject","decrypt","salt","config","cipher","iter","ks","CryptoJS","enc","Base64","stringify","Utf8","parse","sjcl","ciphertext","OakText","multiline","disabled","autoComplete","errorFields","value","onChange","handleChange","rows","queryString","require","Bookmarks","toggleEditDialog","isEditDialogOpen","editDialogLabel","_id","bookmarkId","that","assertThisInitialized","Authorization","status","duration","initializeBookmarks","catch","error","logout","clearSearch","view","items","isFiltered","searchtext","tagName","searchPref","search","preventDefault","filter","toggleSearchPref","pref","defineProperty","addBookmark","currentTarget","firstLoad","sidebarElements","addNew","location","query","q","startsWith","listview","Bookmarks_Link","components_Ux_OakDialog","Ux_OakText","e","components_Ux_ViewResolver","Ux_View","components_Ux_Sidebar","method","onSubmit","noValidate","Switch","checked","inputProps","aria-label","Showdown","html","showdown","Converter","tables","makeHtml","source","dangerouslySetInnerHTML","__html","OakSelect","changeSelection","newValue","width","dropdownList","objects","element","first","firstAction","Note","deleteNote","showEdit","editNote","note","notebook","flag","hideEdit","save","newNotebook","saveNote","togglepreview","preview","flags","Ux_Showdown","OakSelect_OakSelect","notebooks","ActionButton","leftLabel","rightLabel","leftAction","rightAction","removeMd","NoteRef","selectNote","Ux_ActionButton","selected","showTag","substring","Notes","sortTypes","created","last modified","note name","sortOrders","newNote","toggleAddDialog","isAddDialogOpen","resetForm","existingNotebook","closeAllDialog","toggleFilter","showFilter","searchResults","selectedNoteId","notebookFilter","notebookList","toConsumableArray","Set","applyFilter","array","property","isReverseOrder","noteList","sortBy","sortOrder","sort","o1","o2","filteredNotebookList","noteId","initializeNotes","saveNoteEvent","attributes","handleNotebookFilterChange","existingNotebookList","noteview","Notes_Note","listNoteRef","Notes_NoteRef","keys","getAuth","dispatch","addAuth","removeAuth","preSignin","email","signin","problem","solution","JSON","Login","success","signup","test","sentEmailWithCode","sentPasswordChangeEmail","rand","Math","random","resetCode","history","newuser","connect","PrivateRoute","react_router","path","render","AuthInit","getProfile","setProfile","Backdrop","backdrop","Notification","spinner","notification","setTimeout","Links","toggleMenu","menu","react_router_dom","to","activeClassName","Desktop","login","showSettings","transparent","src","protekt_black","alt","protekt_white","Navigation_Links","toggleSettings","Mobile","Navigation","toggleDarkMode","changeTextSize","size","changeThemeColor","color","mobilemenu","chooseTheme","transparentNavBar","reloadProfile","Navigation_Desktop","assign","Navigation_Mobile","withRouter","Settings","persistProfile","changePassword","oldPassword","newPassword","repeatPassword","checkOldPassword","updateUserDetailsImpl","updateUserDetails","newData","fileChoosen","reader","FileReader","onload","result","readAsText","files","exportBookmark","staticContent","i","htmlContent","sendExportEmail","ResetPassword","resetPassword","code","themes","themecolor_1","getTheme","themecolor_2","themecolor_3","themecolor_4","themecolor_5","themecolor_6","createMuiTheme","palette","primary","secondary","Content","react_router_dom_min","Auth_AuthInit","App_Backdrop","components_Notification","MuiThemeProvider","components_Navigation","exact","Home_Home","components_Auth_Login","Auth_ResetPassword","Auth_PrivateRoute","components_Bookmarks","components_Notes","components_Settings","App","es","App_Content","Boolean","hostname","ReactDOM","components_App","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.7a7bf923.chunk.js","sourcesContent":["import { GET_AUTH, ADD_AUTH, REMOVE_AUTH } from '../actions/types';\r\n\r\nconst initialState = {\r\n    isAuth: false,\r\n    token: '',\r\n    secret: '',\r\n    name: '',\r\n    password: ''\r\n}\r\n\r\nexport default function(state = initialState, action) {\r\n    switch(action.type) {\r\n        case GET_AUTH:\r\n            console.log('GET_AUTH reducer');\r\n            return {\r\n                ...state\r\n            };\r\n        case ADD_AUTH:\r\n            console.log('ADD_AUTH reducer');\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            };\r\n        case REMOVE_AUTH:\r\n            console.log('REMOVE_AUTH reducer');\r\n            return {\r\n                ...state,\r\n                isAuth: false,\r\n                token: '',\r\n                secret: '',\r\n                name: '',\r\n                password: ''\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import { GET_PROFILE, SET_PROFILE } from '../actions/types';\r\n\r\nconst initialState = {\r\n    theme: 'theme_dark',\r\n    textSize: 'textsize_medium',\r\n    themeColor: 'themecolor_6'\r\n}\r\n\r\nexport default function(state = initialState, action) {\r\n    switch(action.type) {\r\n        case GET_PROFILE:\r\n            console.log('GET_PROFILE reducer');\r\n            return {\r\n                ...state\r\n            };\r\n        case SET_PROFILE:\r\n            console.log('SET_PROFILE reducer');\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport AuthReducer from './AuthReducer';\r\nimport ProfileReducer from './ProfileReducer';\r\n\r\nexport default combineReducers({\r\n    authorization: AuthReducer,\r\n    profile: ProfileReducer\r\n})","export const GET_AUTH = 'GET_AUTH';\r\nexport const ADD_AUTH = 'ADD_AUTH';\r\nexport const REMOVE_AUTH = 'REMOVE_AUTH';\r\n\r\nexport const GET_PROFILE = 'GET_PROFILE';\r\nexport const SET_PROFILE = 'SET_PROFILE';","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers'\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(\r\n        applyMiddleware(...middleware)//,\r\n        // window[\"__REDUX_DEVTOOLS_EXTENSION__\"] && window[\"__REDUX_DEVTOOLS_EXTENSION__\"]()\r\n    )\r\n);\r\n\r\nexport default store;\r\n","import { Subject, Observable } from 'rxjs';\r\nimport { Message } from '../components/Types/GeneralTypes';\r\n\r\nconst subject = new Subject<Message>();\r\n\r\nexport function sendMessage(name: string, signal = true, data?: {}) {\r\n    subject.next({\r\n        name: name,\r\n        signal: signal,\r\n        data: data\r\n    });\r\n}\r\n\r\nexport function clearMessages() {\r\n    subject.next();\r\n}\r\n\r\nexport function receiveMessage(): Observable<Message> {\r\n    return subject.asObservable();\r\n}","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport './style.scss';\r\n\r\nimport { sendMessage } from '../../events/MessageService';\r\nimport { Profile } from '../Types/GeneralTypes';\r\n\r\ninterface Props {\r\n  setProfile: Function,\r\n  profile: Profile,\r\n  match: any,\r\n  logout: Function\r\n}\r\n\r\ninterface State {\r\n\r\n}\r\n\r\nexport default class Home extends React.Component<Props, State> {\r\n  componentWillMount() {\r\n    sendMessage('navbar-transparency');\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    sendMessage('navbar-transparency', false);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"home\">\r\n          {/* <div className=\"section parallax bg1\" />\r\n          <div className=\"section static bg1 odd\">\r\n            <h3>A bookmarking app like never before</h3>\r\n            <p>Take your link to the web wherever you go, with the most secure bookmark and note taking app</p>\r\n            <br />\r\n            <p><NavLink to=\"/login\" className=\"navitem\" activeClassName=\"active\">Sign up</NavLink>&nbsp;for free</p>\r\n          </div> */}\r\n\r\n          <div className=\"section parallax bg bg2\" />\r\n          <div className=\"section static bg2 even\">\r\n            <h3>Secured suite of applications</h3>\r\n            <p>Designed with security as a primary factor from ground up</p>\r\n            <p>Your passwords never leaves your workstation</p>\r\n            <p>Our servers have zero knowledge about your password</p>\r\n          </div>\r\n\r\n          {/* <div className=\"section parallax bg3\" />\r\n          <div className=\"section static bg3 odd\">\r\n            <h3>Premium features</h3>\r\n            <p>Get premium features free for lifetime. We standby free software for all</p>\r\n          </div>\r\n\r\n          <div className=\"section parallax bg4\" />\r\n          <div className=\"section static bg4 even\">\r\n            <h3>Don't mix up personal and business</h3>\r\n            <p>With the help of workspaces, you can now work in isolated containers</p>\r\n          </div>\r\n\r\n          <div className=\"section parallax bg5\" />\r\n          <div className=\"section static bg5 odd\">\r\n            <h3>We love open source</h3>\r\n            <p>Our codebase is 100% available for the community to do peer review and audit for any security flaws</p>\r\n          </div>\r\n\r\n          <div className=\"section parallax bg6\" />\r\n          <div className=\"section static bg6 even\">\r\n            <h3>Clean clutter free interface</h3>\r\n            <p>Modern interface with a clutter free design to keep you in focus on your activity</p>\r\n          </div>\r\n\r\n          <div className=\"section parallax bg7\" />\r\n          <div className=\"section static bg7 odd\">\r\n            <h3>Travel to the future</h3>\r\n            <p>We are evolving for the future. More features on the way. You can watch our roadmap here</p>\r\n          </div> */}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport './style.scss';\r\n\r\ninterface Props {\r\n    editBookmark: Function,\r\n    deleteBookmark: Function,\r\n    searchByTag: Function,\r\n    bookmark: any,\r\n    id: string\r\n}\r\ninterface State {\r\n}\r\n\r\nclass Link extends Component<Props, State> {\r\n\r\n    edit = () => {\r\n        this.props.editBookmark(this.props.bookmark);\r\n    }\r\n\r\n    delete = () => {\r\n        this.props.deleteBookmark(this.props.id);\r\n    }\r\n\r\n    render() {\r\n        const tags: any = [];\r\n        if (this.props.bookmark.tags) {\r\n            this.props.bookmark.tags.split(\" \").map(item => {\r\n                tags.push(<div className=\"tag\" key={item} onClick={() => this.props.searchByTag(item)}>{item}</div>);\r\n            })\r\n        }\r\n        \r\n        return (\r\n            <div>\r\n                <div className=\"title typography-4\">{this.props.bookmark.title}\r\n                    <div className=\"action-icon\">\r\n                        <i onClick={this.edit} className=\"material-icons\">edit</i>\r\n                        <i onClick={this.delete} className=\"material-icons\">delete</i>\r\n                    </div>\r\n                </div>\r\n                <div className=\"url typography-6\"><a target=\"_blank\" rel=\"noopener noreferrer\" href={this.props.bookmark.href}>{this.props.bookmark.href}</a></div>\r\n                <div className=\"timestamp typography-6 space-bottom-1\">{this.props.bookmark.createdAt}</div>\r\n                {tags}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Link;\r\n","export const constants = {\r\n    API_URL_PRESIGNUP: \"/auth/keys\",\r\n    API_URL_SIGNUP: \"/auth/signup\",\r\n    API_URL_PRESIGNIN: \"/auth/keys/\",\r\n    API_URL_SIGNIN: \"/auth/signin\",\r\n    API_URL_RESET: \"/auth/reset\",\r\n    API_URL_CODE: \"/auth/sendResetCode\",\r\n\r\n    API_URL_BOOKMARK: \"/bookmark\",\r\n    API_URL_BOOKMARK_IMPORT: \"/bookmark/import\",\r\n    API_URL_MAIL: \"/bookmark/sendExportMail\",\r\n    API_URL_PREFERENCES: \"/user/preferences\",\r\n    API_URL_USER_DETAILS: \"/user/details\",\r\n\r\n    API_URL_NOTE: \"/note\"\r\n}\r\n","import React, { Component } from 'react';\r\nimport './OakDialog.scss';\r\nimport { sendMessage } from '../../events/MessageService';\r\n\r\ninterface Props {\r\n    visible: boolean,\r\n    toggleVisibility: any,\r\n    small?: boolean,\r\n    fullscreen?: boolean\r\n}\r\n\r\ninterface State {\r\n}\r\n\r\nclass OakDialog extends Component<Props, State> {\r\n    componentWillReceiveProps(nextProps) {\r\n        if (this.props.visible !== nextProps.visible) {\r\n            if (nextProps.visible) {\r\n                sendMessage('dialog');\r\n                document.body.classList.add('oak-dialog-open');\r\n            } else {\r\n                sendMessage('dialog', false);\r\n                document.body.classList.remove('oak-dialog-open');\r\n            }\r\n        }\r\n    }\r\n    \r\n    componentDidMount(){\r\n      document.addEventListener(\"keydown\", this.escFunction, false);\r\n      const documentWidth = document.documentElement.clientWidth;\r\n      const windowWidth = window.innerWidth;\r\n      const scrollBarWidth = windowWidth - documentWidth;\r\n      document.documentElement.style\r\n          .setProperty('--scrollbar-width', scrollBarWidth + 'px');\r\n    }\r\n\r\n    componentWillUnmount(){\r\n      document.removeEventListener(\"keydown\", this.escFunction, false);\r\n    }\r\n\r\n    escFunction = (event) => {\r\n        if(event.keyCode === 27) {\r\n          if (this.props.visible) {\r\n            this.props.toggleVisibility();\r\n          }\r\n        }\r\n    }\r\n\r\n    getDialogStyle = () => {\r\n        let style = \"\";\r\n        style = style + (this.props.small ? \" small\" : \"\");\r\n        style = style + (this.props.fullscreen ? \" fullscreen\" : \"\");\r\n        return style;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"oak-dialog\">\r\n                <div className={(this.props.visible ? \"dialog show \" + this.getDialogStyle() : \"dialog hide \" + this.getDialogStyle())}>\r\n                    <div className={(this.props.visible ? \"container\": \"container hidetext\")}>\r\n                        <div className=\"dialog-header\">\r\n                            <div className=\"container\" onClick={this.props.toggleVisibility}>\r\n                                <i className=\"material-icons\">close</i><div className=\"text-esc\">esc</div>\r\n                            </div>\r\n                        </div>\r\n                        {this.props.children}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default OakDialog;\r\n","import React, { Component } from 'react';\r\nimport './oak-button-notch.scss';\r\n\r\ninterface Props {\r\n    icon?: string,\r\n    action?: any,\r\n    variant?: 'block' | 'outline' | 'animate in' | 'animate out' | 'animate none' | 'disabled'\r\n    theme?: 'primary' | 'secondary' | 'tertiary' | 'default',\r\n    align?: 'left' | 'right' | 'center',\r\n    small?: boolean,\r\n    invert?: boolean\r\n}\r\n\r\ninterface State {\r\n}\r\n\r\nclass OakButton extends Component<Props, State> {    \r\n\r\n    constructor (props: Props) {\r\n        super(props);\r\n        this.state = {\r\n            menuActive: false\r\n        }\r\n    }\r\n\r\n    getStyle = () => {\r\n        let style = this.props.theme ? this.props.theme : \"\";\r\n        style = style + (this.props.variant ? \" \" + this.props.variant : \"\");\r\n\r\n        if (!this.props.children) {\r\n            style = style + \" icon\";\r\n        }\r\n\r\n        style = style + (this.props.invert ? \" invert\": \"\");\r\n\r\n        style = style + (this.props.small ? \" small\" : \"\");\r\n\r\n        style = style + (this.props.align ? \" align-\" + this.props.align : \"\");\r\n\r\n        return style;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <button className={\"oak-button \" + this.getStyle()} onClick={this.props.action}>\r\n                {this.props.icon && <i className=\"material-icons\">{this.props.icon}</i>}\r\n                {this.props.children && this.props.children}\r\n            </button>\r\n        )\r\n    }\r\n}\r\n\r\nexport default OakButton;","import React, { Component } from 'react';\r\nimport './ViewResolver.scss';\r\nimport { sendMessage, receiveMessage } from '../../events/MessageService';\r\nimport OakButton from './OakButton';\r\n\r\ninterface Props {\r\n    sideLabel?: string\r\n}\r\n\r\ninterface State {\r\n    views: any,\r\n    main?: any,\r\n    side?: any,\r\n    showSide: boolean,\r\n    mobileViewPort: any\r\n}\r\n\r\nclass ViewResolver extends Component<Props, State> {\r\n\r\n    _isMounted = false;\r\n    \r\n    viewPort = window.matchMedia(\"(max-width: 767px)\");\r\n\r\n    viewPortChange = (port) => {\r\n        this.setState({\r\n            mobileViewPort: port.matches\r\n        });\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            views: this.props.children,\r\n            showSide: false,\r\n            mobileViewPort: false\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.initializeViews();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this._isMounted = true;\r\n        this.viewPortChange(this.viewPort);\r\n        this.viewPort.addListener(this.viewPortChange);\r\n\r\n        receiveMessage().subscribe(message => {\r\n            if (this._isMounted) {\r\n                if (message.name === 'sidebar') {\r\n                    this.setState({\r\n                        showSide: message.signal\r\n                    })\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this._isMounted = false;\r\n    }\r\n\r\n    initializeViews() {\r\n        React.Children.toArray(this.state.views).forEach((node) => {\r\n            // node.type.name is minified after build and so static build result has different alphabet\r\n            // if (node.type.name === 'View') {\r\n                if (node.props.main) {\r\n                    this.setState({\r\n                        main: node\r\n                    })\r\n                } else if (node.props.side) {\r\n                    this.setState({\r\n                        side: node\r\n                    })\r\n                }\r\n            // }\r\n        })\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.children) {\r\n            this.setState({\r\n                views: nextProps.children\r\n            }, () => {\r\n                this.initializeViews();\r\n            })\r\n        }\r\n    }\r\n\r\n    toggleSideView = () => {\r\n        sendMessage('sidebar', !this.state.showSide);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n            {!this.state.mobileViewPort && <div className=\"view-desktop\">\r\n                {this.state.side && <div className=\"view-side\">\r\n                    {this.state.side}\r\n                </div>}\r\n                <div className={'view-content' + (this.state.side ? ' side-present' : '')}>\r\n                    {this.state.main}\r\n                </div>\r\n            </div>}\r\n\r\n            {this.state.mobileViewPort && <div className=\"view-mobile\">\r\n                <div className={(this.state.showSide ? \"slider show\" : \"slider hide\")}>\r\n                    <div className=\"topbar\" onClick={this.toggleSideView}>\r\n                        <div>\r\n                            <OakButton theme=\"default\" variant=\"disabled\" action={this.toggleSideView}>\r\n                                {!this.state.showSide && <><i className=\"material-icons\">expand_more</i>{this.props.sideLabel ? this.props.sideLabel : 'Menu'}</>}\r\n                                {this.state.showSide && <><i className=\"material-icons\">expand_less</i>Collapse</>}\r\n                            </OakButton>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"view-side\">\r\n                        {this.state.showSide && this.state.side}\r\n                    </div>\r\n                </div>\r\n                {!this.state.showSide && <div className=\"view-main\">\r\n                    {this.state.main}\r\n                </div>}\r\n            </div>}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ViewResolver;","import React, { Component } from 'react';\r\n\r\ninterface Props {\r\n    main?: any,\r\n    side?: any\r\n}\r\n\r\ninterface State {\r\n}\r\n\r\nclass View extends Component<Props, State> {\r\n    render() {\r\n        return (\r\n            <div>\r\n               {/* {this.props} */}\r\n               {this.props.children}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default View;","export function isEmptyOrSpaces(str){\r\n    return str === null || str.match(/^ *$/) !== null;\r\n}\r\n\r\nexport function match(text, words) {\r\n    let found = false;\r\n    if (words) {\r\n        words.split(' ').forEach(word => {\r\n            if (text.match(new RegExp('(\\\\w*'+ word +'\\\\w*)','gi'))) {\r\n                found = true;\r\n            }\r\n        });\r\n    }\r\n    return found;\r\n}\r\n\r\nexport function sort(array, property, isReverseOrder) {\r\n    const result = array.sort(function(o1,o2){\r\n        if (isReverseOrder) {\r\n            return o1[property] > o2[property] ? -1 : o1[property] < o2[property] ? 1 : 0;\r\n        } else {\r\n            return o1[property] < o2[property] ? -1 : o1[property] > o2[property] ? 1 : 0;\r\n        }\r\n    });\r\n\r\n    return result;\r\n}","import React, { Component } from 'react';\r\nimport './Sidebar.scss';\r\nimport { sendMessage, receiveMessage } from '../../events/MessageService';\r\n\r\ninterface Props {\r\n    show?: boolean,\r\n    elements?: Array<string>,\r\n    label: string,\r\n    icon: string,\r\n    number?: number,\r\n    animate?: boolean\r\n}\r\n\r\ninterface State {\r\n    show: boolean,\r\n    elements: Array<string>\r\n}\r\n\r\nclass Sidebar extends Component<Props, State> {\r\n\r\n    _isMounted = false;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            show: this.props.show ? true : false,\r\n            elements: this.props.elements ? this.props.elements : []\r\n        }\r\n    }\r\n\r\n    toggle = () => {\r\n        this.setState({\r\n            show: !this.state.show\r\n        }, () => sendMessage('sidebarExpanded', this.state.show, {label: this.props.label}));\r\n    }\r\n\r\n    hide = () => {\r\n        this.setState({\r\n            show: false\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this._isMounted = true;\r\n        receiveMessage().subscribe(message => {\r\n            if (this._isMounted) {\r\n                if (message.name === 'sidebarExpanded' && message.signal && message.data && message.data.label !== this.props.label) {\r\n                    this.setState({\r\n                        show: false\r\n                    })\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this._isMounted = false;\r\n    }\r\n\r\n    render() {\r\n        const elements = this.state.elements.map((item: any) => (\r\n            <div key={item.label} className=\"element\" onClick={item.action}><i className=\"material-icons\">{item.icon}</i>{item.label}</div>\r\n        ))\r\n        return (            \r\n            <div className=\"sidebar\">\r\n                <div className={this.state.show ? \"header active\" : \"header\"} onClick={this.toggle}>\r\n                    <div className=\"label\">\r\n                        <i className=\"material-icons\">{this.props.icon}</i>\r\n                        {this.props.label}\r\n                        {this.props.number !== undefined && <div className=\"number\">{this.props.number}</div>}\r\n                    </div>\r\n                    {/* <div className=\"aria\"><i className=\"material-icons\">{this.state.show ? 'expand_less' : 'expand_more'}</i></div> */}\r\n                    <div className=\"aria\"><i className={this.state.show ? \"material-icons collapse\" : \"material-icons\"}>keyboard_arrow_left</i></div>\r\n                </div>\r\n                <div className={this.state.show ? \"content show \" + (this.props.animate ? \"animate\" : \"static\") : \"content hide \" + (this.props.animate ? \"animate\" : \"static\")}>\r\n                    {elements}\r\n                    {this.props.children}\r\n                </div>\r\n            </div>\r\n            \r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default Sidebar;","import axios from \"axios\";\r\nimport sjcl from 'ioak-sjcl';\r\nimport CryptoJS from 'crypto-js';\r\n\r\nconst baseUrl = process.env.REACT_APP_API_URL;\r\n\r\nconst autoGeneratedFields = ['_id', 'id', 'createdAt', 'lastModifiedAt', 'userId'];\r\n\r\nconst unprotectedEndpoints = [\"/auth/keys\", \"/auth/signup\", \"/auth/keys/\", \"/auth/signin\", \"/auth/reset\", \"/auth/sendResetCode\"];\r\n\r\nexport function httpGet(endpoint: string, headers: any, password: string = \"\", skipFields: Array<string> = []) {\r\n    console.log(password);\r\n    return axios.get(baseUrl + endpoint, headers)\r\n        .then(response => {\r\n            if (!unprotectedEndpoints.find((item => endpoint.includes(item)))) {\r\n                response.data = decryptContent(response.data, password, skipFields);\r\n            }\r\n            return Promise.resolve(response);\r\n        }\r\n    )\r\n}\r\n\r\nexport function httpPost(endpoint: string, payload: any, headers: any, password: string = \"\", skipFields: Array<string> = []) {\r\n    if (!unprotectedEndpoints.find((item => endpoint.includes(item)))) {\r\n        payload = encryptContent(payload, password, skipFields);\r\n    }\r\n    return axios.post(baseUrl + endpoint, payload, headers)\r\n        .then(response => {\r\n            if (!unprotectedEndpoints.find((item => endpoint.includes(item)))) {\r\n                response.data = decryptContent(response.data, password, skipFields);\r\n            }\r\n            return Promise.resolve(response);\r\n        }\r\n    );\r\n}\r\n\r\nexport function httpPut(endpoint: string, payload: any, headers: any, password: string = \"\", skipFields: Array<string> = []) {\r\n    if (!unprotectedEndpoints.find((item => endpoint.includes(item)))) {\r\n        payload = encryptContent(payload, password, skipFields);\r\n    }\r\n    return axios.put(baseUrl + endpoint, payload, headers)\r\n        .then(response => {\r\n            if (!unprotectedEndpoints.find((item => endpoint.includes(item)))) {\r\n                response.data = decryptContent(response.data, password, skipFields);\r\n            }\r\n            return Promise.resolve(response);\r\n        }\r\n        );\r\n    //     .then(function(response) {\r\n    //         return Promise.resolve(response);\r\n    //     }\r\n    // )\r\n}\r\n\r\nexport function httpDelete(endpoint: string, headers: any) {\r\n    return axios.delete(baseUrl + endpoint, headers)\r\n    //     .then(function(response) {\r\n    //         return Promise.resolve(response);\r\n    //     }\r\n    // )\r\n}\r\n\r\nfunction encryptContent(content, password: string = \"\", skipFields: Array<string> = []) {\r\n    if (Array.isArray(content)) {\r\n        let encryptedContent: any = [];\r\n        content.forEach(item => encryptedContent.push(encryptObject(item, password, skipFields)));\r\n        return encryptedContent;\r\n    } else {\r\n        return encryptObject(content, password, skipFields);\r\n    }\r\n\r\n}\r\n\r\nfunction encryptObject(content, password: string = \"\", skipFields: Array<string> = []) {\r\n    let encryptedContent = {};\r\n    for(let key in content) {\r\n        if (content[key] && !skipFields.includes(key) && !autoGeneratedFields.includes(key)) {\r\n            encryptedContent[key] = encrypt(password, content[key], 'aasd');\r\n        } else {\r\n            encryptedContent[key] = content[key];\r\n        }\r\n    }\r\n    return encryptedContent;\r\n}\r\n\r\n\r\nfunction decryptContent(encryptedContent, password: string = \"\", skipFields: Array<string> = []) {\r\n    if (Array.isArray(encryptedContent)) {\r\n        let content: any = [];\r\n        encryptedContent.forEach(item => content.push(decryptObject(item, password, skipFields)));\r\n        return content;\r\n    } else {\r\n        return decryptObject(encryptedContent, password, skipFields);\r\n    }\r\n\r\n}\r\n\r\nfunction decryptObject(encryptedContent, password: string = \"\", skipFields: Array<string> = []) {\r\n    let content = {};\r\n    \r\n    for(let key in encryptedContent) {\r\n        if (encryptedContent[key] && !skipFields.includes(key) && !autoGeneratedFields.includes(key)) {\r\n            content[key] = decrypt(password, encryptedContent[key]);\r\n        } else {\r\n            content[key] = encryptedContent[key];\r\n        }\r\n    }\r\n    return content;\r\n}\r\n\r\nfunction encrypt(password, message, salt) {\r\n    const config = {\r\n        cipher: 'aes',\r\n        iter: '12000',\r\n        ks: 256,\r\n        salt: CryptoJS.enc.Base64.stringify((CryptoJS.enc.Utf8.parse(salt)))\r\n    }\r\n    return sjcl.encrypt(password, message, config);\r\n}\r\n\r\nfunction decrypt(password, ciphertext) {\r\n    return sjcl.decrypt(password, ciphertext);\r\n}","import React from 'react';\r\nimport './OakText.scss';\r\n\r\ninterface Props {\r\n    label: string,\r\n    id: string,\r\n    data: any,\r\n    type?: string,\r\n    handleChange: any,\r\n    errorFields?: any,\r\n    disabled?: boolean,\r\n    rows?: number,\r\n    multiline?: boolean\r\n}\r\nfunction OakText(props: Props) {\r\n    return (\r\n        <div className=\"oak-text-field\">\r\n            <label>{props.label}</label>\r\n            {!props.multiline && <input disabled={props.disabled} autoComplete=\"off\"\r\n                className={(props.errorFields && props.errorFields[props.id] ? \"error\" : \"\") + (props.disabled ? \" disabled\" : \"\")}\r\n                type={props.type ? props.type : \"text\"} name={props.id} value={props.data[props.id]} onChange={props.handleChange}></input>}\r\n            \r\n            {props.multiline && <textarea disabled={props.disabled} rows={props.rows ? props.rows : 4}\r\n                className={(props.errorFields && props.errorFields[props.id] ? \"error\" : \"\") + (props.disabled ? \" disabled\" : \"\")}\r\n                name={props.id} value={props.data[props.id]} onChange={props.handleChange}></textarea>}\r\n        </div>\r\n    )\r\n}\r\n\r\nOakText.propTypes = {\r\n};\r\n\r\nexport default OakText;\r\n","import React, { Component } from 'react';\r\nimport Link from './Link';\r\nimport { constants } from '../Constants';\r\nimport OakDialog from '../Ux/OakDialog';\r\nimport ViewResolver from '../Ux/ViewResolver';\r\nimport View from '../Ux/View';\r\nimport './style.scss';\r\nimport { Switch } from '@material-ui/core';\r\nimport { isEmptyOrSpaces, match } from '../Utils';\r\nimport Sidebar from '../Ux/Sidebar';\r\nimport { httpGet, httpPut, httpDelete } from '../Lib/RestTemplate';\r\nimport { sendMessage } from '../../events/MessageService';\r\nimport { Authorization } from '../Types/GeneralTypes';\r\nimport OakText from '../Ux/OakText';\r\nimport OakButton from '../Ux/OakButton';\r\n\r\nconst queryString = require('query-string');\r\n\r\ninterface Props {\r\n    authorization: Authorization\r\n    location: any,\r\n    logout: Function\r\n}\r\n\r\ninterface State {\r\n    items: any,\r\n    view: any,\r\n\r\n    searchtext: string,\r\n    isFiltered: boolean,\r\n\r\n    id?: string,\r\n    title: string,\r\n    href: string,\r\n    tags: string,\r\n    editDialogLabel: string,\r\n    isEditDialogOpen: boolean,\r\n    firstLoad: boolean,\r\n\r\n    searchPref: {\r\n        title: boolean,\r\n        tags: boolean,\r\n        href: boolean,\r\n        content: boolean\r\n    },\r\n\r\n    sidebarElements: any\r\n}\r\nclass Bookmarks extends Component<Props, State> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            items: [],\r\n            view: [],\r\n            isEditDialogOpen: false,\r\n\r\n            searchtext: '',\r\n            isFiltered: false,\r\n\r\n            id: undefined,\r\n            title: '',\r\n            href: '',\r\n            tags: '',\r\n            editDialogLabel: 'Add',\r\n            firstLoad: true,\r\n\r\n            searchPref: {\r\n                title: true,\r\n                tags: true,\r\n                href: true,\r\n                content: true\r\n            },\r\n\r\n            sidebarElements: {\r\n                addNew: [\r\n                    {\r\n                        label: 'New Bookmark',\r\n                        action: this.toggleEditDialog,\r\n                        icon: 'note_add'\r\n                    }\r\n                ]\r\n            }\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        if (this.props.location.search) {\r\n            const query = queryString.parse(this.props.location.search);\r\n            if (query && query.q) {\r\n                if (query.q.startsWith('tags')) {\r\n                    this.setState({\r\n                        searchPref: {\r\n                            title: false,\r\n                            tags: true,\r\n                            href: true,\r\n                            content: false\r\n                        }\r\n                    })\r\n                }\r\n                this.setState({\r\n                    searchtext: query.q,\r\n                    isFiltered: true\r\n                })\r\n            }\r\n        }\r\n\r\n        if(this.state.firstLoad && this.props.authorization.isAuth) {\r\n            this.initializeBookmarks(this.props.authorization);\r\n            this.setState({firstLoad: false})\r\n        }\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        if (this.state.firstLoad && nextProps.authorization) {\r\n            this.initializeBookmarks(nextProps.authorization);\r\n            this.setState({firstLoad: false})\r\n        }\r\n    }\r\n\r\n    initializeBookmarks(authorization) {\r\n        const that = this;\r\n        httpGet(constants.API_URL_BOOKMARK,\r\n            {\r\n                headers: {\r\n                    Authorization: 'Bearer ' + authorization.token\r\n                }\r\n            }, authorization.password)\r\n            .then(function(response) {\r\n                that.setState({items: response.data, view: response.data});\r\n                if (that.state.isFiltered) {\r\n                    that.search();\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    toggleEditDialog = () => {\r\n        this.setState({\r\n            isEditDialogOpen: !this.state.isEditDialogOpen,\r\n            id: undefined,\r\n            title: '',\r\n            href: '',\r\n            tags: '',\r\n            editDialogLabel: 'Add'\r\n        })\r\n    }\r\n\r\n    editBookmark = (bookmark) => {\r\n        this.setState({\r\n            isEditDialogOpen: true,\r\n            id: bookmark._id,\r\n            title: bookmark.title,\r\n            href: bookmark.href,\r\n            tags: bookmark.tags,\r\n            editDialogLabel: 'Save'\r\n        })\r\n    }\r\n\r\n    deleteBookmark = (bookmarkId) => {\r\n        const that = this;\r\n        httpDelete(constants.API_URL_BOOKMARK + \"/\" + bookmarkId,\r\n        {\r\n            headers: {\r\n                Authorization: 'Bearer ' + this.props.authorization.token\r\n            }\r\n        })\r\n        .then(function(response) {\r\n            if (response.status === 201) {\r\n                sendMessage('notification', true, {type: 'success', message: 'Bookmark deleted', duration: 5000});\r\n                that.initializeBookmarks(that.props.authorization);\r\n            }\r\n        })\r\n        .catch((error) => {\r\n            if (error.response.status === 401) {\r\n                that.props.logout(null, 'failure', 'Session expired. Login again');\r\n            }\r\n        })\r\n    }\r\n\r\n    clearSearch = () => {\r\n        this.setState({\r\n            view: this.state.items,\r\n            isFiltered: false,\r\n            searchtext: ''\r\n        })\r\n        sendMessage('sidebar', false)\r\n    }\r\n\r\n    searchByTag = (tagName) => {\r\n        \r\n        this.setState({\r\n            searchPref: {\r\n                ...this.state.searchPref,\r\n                title: false,\r\n                tags: true,\r\n                href: false\r\n            },\r\n            searchtext: tagName,\r\n            isFiltered: true\r\n        }, () => this.initializeBookmarks(this.props.authorization));\r\n    }\r\n\r\n    search = (event?: any) => {\r\n        if (event) {\r\n            event.preventDefault();\r\n        }\r\n\r\n        if (isEmptyOrSpaces(this.state.searchtext)) {\r\n            this.setState({\r\n                view: this.state.items,\r\n                isFiltered: false\r\n            });\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            view: this.state.items.filter((item) => {\r\n                if (this.state.searchPref.title && match(item.title, this.state.searchtext)) {\r\n                    return true;\r\n                } else if (this.state.searchPref.tags && match(item.tags, this.state.searchtext)) {\r\n                    return true;\r\n                } else if (this.state.searchPref.href && match(item.href, this.state.searchtext)) {\r\n                    return true;\r\n                }\r\n            }),\r\n            isFiltered: true\r\n        });\r\n        sendMessage('sidebar', false)\r\n    }\r\n\r\n    toggleSearchPref = (pref) => {\r\n        this.setState({\r\n            searchPref: {\r\n                ...this.state.searchPref,\r\n                [pref]: !this.state.searchPref[pref]\r\n            }\r\n        })\r\n    }\r\n\r\n    addBookmark= () => {\r\n        const that = this;\r\n\r\n        let bookmark = {\r\n            id: this.state.id,\r\n            title: this.state.title,\r\n            href: this.state.href,\r\n            tags: this.state.tags\r\n        }\r\n\r\n        if (isEmptyOrSpaces(bookmark.title)) {\r\n            sendMessage('notification', true, {type: 'failure', message: 'Title / description missing', duration: 5000});\r\n            return;\r\n        }\r\n\r\n        if (isEmptyOrSpaces(bookmark.href)) {\r\n            sendMessage('notification', true, {type: 'failure', message: 'Website URL / Link is missing', duration: 5000});\r\n            return;\r\n        }\r\n\r\n        if (isEmptyOrSpaces(bookmark.tags)) {\r\n            bookmark.tags = 'unsorted';\r\n        }\r\n\r\n        httpPut(constants.API_URL_BOOKMARK, bookmark,\r\n        {\r\n            headers: {\r\n                Authorization: 'Bearer ' + this.props.authorization.token\r\n            }\r\n        }, this.props.authorization.password)\r\n        .then(function(response) {\r\n            if (response.status === 201) {\r\n                sendMessage('notification', true, {type: 'success', message: 'Bookmark created', duration: 5000});\r\n                that.toggleEditDialog();\r\n\r\n                that.initializeBookmarks(that.props.authorization);\r\n            }\r\n        })\r\n        .catch((error) => {\r\n            if (error.response.status === 401) {\r\n                that.props.logout(null, 'failure', 'Session expired. Login again');\r\n            }\r\n        })\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState(\r\n            {\r\n                ...this.state,\r\n                [event.currentTarget.name]: event.currentTarget.value\r\n            }\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const listview = this.state.view.map(item => (\r\n            <div key={item._id}>\r\n            <Link id={item._id} bookmark={item} editBookmark={this.editBookmark} deleteBookmark={this.deleteBookmark} searchByTag={this.searchByTag} />\r\n            <br />\r\n            </div>\r\n        ))\r\n        return (\r\n            <div className=\"bookmarks\">\r\n                <OakDialog visible={this.state.isEditDialogOpen} toggleVisibility={this.toggleEditDialog}>\r\n                    <div className=\"dialog-body\">\r\n                        <OakText label=\"Title\" data={this.state} id=\"title\" handleChange={e => this.handleChange(e)} />\r\n                        <OakText label=\"URL\" data={this.state} id=\"href\" handleChange={e => this.handleChange(e)} />\r\n                        <OakText label=\"Tags\" data={this.state} id=\"tags\" handleChange={e => this.handleChange(e)} />\r\n                    </div>\r\n                    <div className=\"dialog-footer\">\r\n                        <OakButton action={this.toggleEditDialog} theme=\"default\" variant=\"outline\" align=\"left\"><i className=\"material-icons\">close</i>Cancel</OakButton>\r\n                        <OakButton action={this.addBookmark} theme=\"primary\" variant=\"animate in\" align=\"right\"><i className=\"material-icons\">double_arrow</i>{this.state.editDialogLabel}</OakButton>\r\n                    </div>\r\n                </OakDialog>\r\n\r\n                <ViewResolver>\r\n                    <View main>\r\n                        {listview}\r\n                    </View>\r\n                    <View side>\r\n                        <div className=\"filter-container\">\r\n                            <div className=\"section-main\">\r\n                                <Sidebar label=\"Add New\" elements={this.state.sidebarElements['addNew']} icon=\"add\" animate />\r\n                                <Sidebar label=\"Search\" elements={this.state.sidebarElements['search']} icon=\"search\" animate number={this.state.isFiltered ? this.state.view.length : undefined}>\r\n                                    <form method=\"GET\" onSubmit={this.search} noValidate>\r\n                                    <div className=\"space-top-2 space-left-4 space-right-4\"><OakText label=\"Keywords\" id=\"searchtext\" data={this.state} handleChange={e => this.handleChange(e)} /></div>\r\n                                    </form>\r\n                                    <div className=\"typography-5 space-top-2 space-left-4\">\r\n                                        <Switch\r\n                                            checked={this.state.searchPref.title}\r\n                                            onChange={() => this.toggleSearchPref('title')}\r\n                                            inputProps={{ 'aria-label': 'primary checkbox' }}/>\r\n                                        Include title\r\n                                    </div>\r\n                                    <div className=\"typography-5 space-top-2 space-left-4\">\r\n                                        <Switch\r\n                                            checked={this.state.searchPref.tags}\r\n                                            onChange={() => this.toggleSearchPref('tags')}\r\n                                            inputProps={{ 'aria-label': 'primary checkbox' }}/>\r\n                                        Include tags\r\n                                    </div>\r\n                                    <div className=\"typography-5 space-top-2 space-left-4\">\r\n                                        <Switch\r\n                                            checked={this.state.searchPref.href}\r\n                                            onChange={() => this.toggleSearchPref('href')}\r\n                                            inputProps={{ 'aria-label': 'primary checkbox' }}/>\r\n                                        Include URL\r\n                                    </div>\r\n                                    {this.state.isFiltered && <div className=\"typography-4 space-top-2 space-left-2\">Found {this.state.view.length} bookmarks matching the search criteria</div>}\r\n                                    <div className=\"actionbar-2 space-top-2 space-bottom-2\">\r\n                                        <div>\r\n                                            <OakButton action={this.clearSearch} theme=\"default\">Clear</OakButton>\r\n                                        </div>\r\n                                        <div>\r\n                                        <OakButton action={this.search} theme=\"primary\" variant=\"animate in\">Search</OakButton>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </Sidebar>\r\n                            </div>\r\n                        </div>\r\n                    </View>\r\n                </ViewResolver>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Bookmarks;\r\n","import React from 'react';\r\nimport showdown  from 'showdown';\r\nimport './Showdown.scss';\r\n\r\ninterface Props {\r\n    source: string\r\n}\r\nfunction Showdown(props: Props) {\r\n    const converter = new showdown.Converter({tables: true});\r\n    const html      = converter.makeHtml(props.source);\r\n    return (\r\n        <div className=\"markdown-body\">\r\n            <div dangerouslySetInnerHTML={{__html:html}} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Showdown;\r\n","import React from 'react';\r\nimport './OakSelect.scss';\r\n\r\ninterface Props {\r\n  id: string,\r\n  label?: string,\r\n  handleChange: Function,\r\n  error?: boolean,\r\n  data: any,\r\n  elements?: string[],\r\n  objects?: Array<any>,\r\n  first?: string,\r\n  firstAction?: string,\r\n  variant?: 'outline' | 'no-outline' | 'block' | 'normal',\r\n  theme?: 'primary' | 'secondary' | 'tertiary' | 'default',\r\n  width?: 'width-25' | 'width-50' | 'width-75' | 'width-100'\r\n}\r\ninterface State {\r\n  show?: boolean\r\n}\r\n\r\nexport default class OakSelect extends React.Component<Props, State> {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      show: false\r\n    }\r\n  }\r\n  \r\n  toggle = () => {\r\n    this.setState({\r\n      show: !this.state.show\r\n    })\r\n  }\r\n\r\n  changeSelection = (e, newValue) => {\r\n    e.target.name = this.props.id;\r\n    e.target.value = newValue;\r\n    this.props.handleChange(e);\r\n    this.toggle();\r\n  }\r\n  \r\n  getStyle = () => {\r\n    let style = this.props.theme ? this.props.theme : \"\";\r\n    style = style + (this.props.variant ? \" \" + this.props.variant : \"\");\r\n    style = style + (this.props.width ? \" \" + this.props.width : \"\");\r\n\r\n    return style;\r\n  }\r\n\r\n  render() {\r\n    let dropdownList: Array<any> = [];\r\n\r\n    if (this.props.elements) {\r\n      dropdownList = this.props.elements.map(item => <div className=\"option\" key={item} onClick={(e) => this.changeSelection(e, item)}>{item}</div>);\r\n    } else if (this.props.objects) {\r\n      dropdownList = this.props.objects.map(item => <div className=\"option\" key={item} onClick={(e) => this.changeSelection(e, item.key)}>{item.value}</div>);\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <div className={\"oak-select \" + this.getStyle()}>\r\n          {this.props.label && <label>{this.props.label}</label>}\r\n          <div className=\"select-button\" onClick={() => this.toggle()}>\r\n            {this.props.elements && <div>{this.props.data[this.props.id]}</div>}\r\n            {this.props.objects && <div>{this.props.objects.find((element) => element.key === this.props.data[this.props.id]) && this.props.objects.find((element) => element.key === this.props.data[this.props.id]).value}</div>}\r\n            {/*{this.props.objects && <div>{this.props.objects[0].value}</div>}*/}\r\n            <div><i className=\"material-icons\">keyboard_arrow_down</i></div>\r\n          </div>\r\n          <div className={this.state.show ? \"dropdown show\" : \"dropdown hide\"}>\r\n            <div className=\"dropdown-content\">\r\n              {this.props.first && <div className=\"option\" onClick={e => this.changeSelection(e, this.props.first)}>{this.props.first}</div>}\r\n              {this.props.firstAction && <div className=\"option\" onClick={e => this.changeSelection(e, this.props.firstAction)}>{this.props.firstAction}</div>}\r\n              {dropdownList}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport Showdown from '../Ux/Showdown';\r\nimport OakSelect from '../Ux/OakSelect';\r\nimport { receiveMessage } from '../../events/MessageService';\r\nimport OakText from '../Ux/OakText';\r\nimport OakButton from '../Ux/OakButton';\r\n\r\ninterface Props {\r\n    note: any,\r\n    id: string,\r\n    deleteNote: Function,\r\n    saveNote: Function,\r\n    notebooks: any\r\n}\r\n\r\ninterface State {\r\n    editNote: boolean,\r\n    preview: boolean,\r\n\r\n    newNotebook: string,\r\n\r\n    id?: string,\r\n    title: string,\r\n    tags: string,\r\n    content: any,\r\n    notebook: string,\r\n    flags: any,\r\n    flag: string\r\n}\r\n\r\nclass Note extends Component<Props, State> {\r\n    \r\n    _isMounted = false;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            editNote: false,\r\n            preview: true,\r\n            newNotebook: '',\r\n            title: '',\r\n            content: '',\r\n            tags: '',\r\n            notebook: '',\r\n            flag: '',\r\n\r\n            flags: [\r\n                {\r\n                    key: 'one',\r\n                    value: <div className=\"select-palette one\" />\r\n                },\r\n                {\r\n                    key: 'two',\r\n                    value: <div className=\"select-palette two\" />\r\n                },\r\n                {\r\n                    key: 'three',\r\n                    value: <div className=\"select-palette three\" />\r\n                },\r\n                {\r\n                    key: 'four',\r\n                    value: <div className=\"select-palette four\" />\r\n                },\r\n                {\r\n                    key: 'five',\r\n                    value: <div className=\"select-palette five\" />\r\n                },\r\n                {\r\n                    key: 'six',\r\n                    value: <div className=\"select-palette six\" />\r\n                }\r\n            ]\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this._isMounted = true;\r\n        receiveMessage().subscribe(message => {\r\n            if (this._isMounted) {\r\n                if (message.name === 'closeNoteEditView' && message.signal) {\r\n                    this.hideEdit();\r\n                    this.setState({newNotebook: ''});\r\n                }\r\n            }\r\n        });\r\n    }\r\n    \r\n    componentWillUnmount() {\r\n        this._isMounted = false;\r\n    }\r\n\r\n    delete = () => {\r\n        this.props.deleteNote(this.props.id);\r\n    }\r\n\r\n    showEdit = () => {\r\n        this.setState({\r\n            editNote: true,\r\n            title: this.props.note.title,\r\n            content: this.props.note.content,\r\n            tags: this.props.note.tags,\r\n            notebook: this.props.note.notebook,\r\n            flag: this.props.note.flag\r\n        })\r\n    }\r\n\r\n    hideEdit = () => {\r\n        this.setState({\r\n            editNote: false\r\n        })\r\n    }\r\n\r\n    save = () => {\r\n        let notebook = this.state.notebook;\r\n\r\n        if (notebook === '<create new>') {\r\n            notebook = this.state.newNotebook;\r\n        }\r\n\r\n        this.props.saveNote({\r\n            id: this.props.id,\r\n            title: this.state.title,\r\n            content: this.state.content,\r\n            tags: this.state.tags,\r\n            flag: this.state.flag,\r\n            notebook: notebook\r\n        }, true)\r\n    }\r\n\r\n    togglepreview = () => {\r\n        this.setState({\r\n            preview: !this.state.preview\r\n        })\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState(\r\n            {\r\n                ...this.state,\r\n                [event.target.name]: event.target.value\r\n            }\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const tags: any = [];\r\n        if (this.props.note.tags) {\r\n            this.props.note.tags.split(\" \").map(item => {\r\n                tags.push(<div key={item} className=\"tag\">{item}</div>);\r\n            })\r\n        }\r\n\r\n        return (\r\n            <>\r\n            {!this.state.editNote && \r\n            <>\r\n                <div className=\"notebook\"><i className=\"material-icons\">insert_drive_file</i>{this.props.note.notebook}</div>\r\n                {/* <div className=\"space-bottom-2\" /> */}\r\n                <div className=\"typography-3 space-bottom-1\">\r\n                    {this.props.note.title}\r\n                </div>\r\n                {tags}\r\n                <div className=\"space-bottom-2\" />\r\n                <OakButton action={this.showEdit} theme=\"secondary\" variant=\"animate in\" align=\"left\"><i className=\"material-icons\">edit</i>Edit</OakButton>\r\n                <OakButton action={this.delete} theme=\"secondary\" variant=\"animate in\" align=\"right\"><i className=\"material-icons\">delete</i>Delete</OakButton>\r\n                \r\n                \r\n                <Showdown source={this.props.note.content} />\r\n\r\n            </>}\r\n            \r\n            {this.state.editNote && \r\n                <div>\r\n                    <div className=\"typography-3 space-bottom-1\">{this.state.title}</div>\r\n                    \r\n                    <OakButton action={this.save} theme=\"primary\" variant=\"animate in\" align=\"left\"><i className=\"material-icons\">double_arrow</i>Save</OakButton>\r\n                    <OakButton action={this.showEdit} theme=\"default\" variant=\"outline\" align=\"center\"><i className=\"material-icons\">refresh</i>Undo All</OakButton>\r\n                    <OakButton action={this.hideEdit} theme=\"default\" variant=\"outline\" align=\"center\"><i className=\"material-icons\">close</i>Cancel</OakButton>\r\n                    {!this.state.preview && <OakButton action={this.togglepreview} theme=\"default\" variant=\"outline\" align=\"right\"><i className=\"material-icons\">visibility</i>Show Preview</OakButton>}\r\n                    {this.state.preview && <OakButton action={this.togglepreview} theme=\"default\" variant=\"outline\" align=\"right\"><i className=\"material-icons\">visibility_off</i>Hide Preview</OakButton>}\r\n\r\n                    <div><OakSelect width=\"width-25\" label=\"Flag\" data={this.state} id=\"flag\" handleChange={e => this.handleChange(e)} objects={this.state.flags} /></div>\r\n                    <div><OakSelect label=\"Notebook\" data={this.state} id=\"notebook\" handleChange={e => this.handleChange(e)} elements={this.props.notebooks} firstAction=\"<create new>\" /></div>\r\n                    <div>\r\n                        {this.state.notebook === '<create new>' && <OakText label=\"Notebook name\" data={this.state} id=\"newNotebook\" handleChange={e => this.handleChange(e)} />}\r\n                    </div>\r\n                    <OakText label=\"Title\" data={this.state} id=\"title\" handleChange={e => this.handleChange(e)} />\r\n                    <OakText label=\"Tags (separated by blank spaces)\" data={this.state} id=\"tags\" handleChange={e => this.handleChange(e)} />\r\n\r\n                    {this.state.preview && <div className=\"edit-note-view\">\r\n                        <div><OakText label=\"Content (Markdown / HTML / Plaintext)\" data={this.state} id=\"content\" multiline handleChange={e => this.handleChange(e)} /></div>\r\n                        <div>\r\n                            <div className=\"typography-5 space-bottom-1\">Preview</div>\r\n                            <Showdown source={this.state.content} />\r\n                        </div>\r\n                    </div>}\r\n                    {!this.state.preview && <OakText label=\"Content (Markdown / HTML / Plaintext)\" data={this.state} id=\"content\" multiline handleChange={e => this.handleChange(e)} />}\r\n                    <div className=\"space-top-2\" />\r\n            </div>}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Note;\r\n","import React from 'react';\r\nimport './ActionButton.scss';\r\n\r\ninterface Props {\r\n    icon?: string,\r\n    leftLabel?: string,\r\n    leftAction?: any,\r\n    rightLabel?: string,\r\n    rightAction?: any,\r\n    type?: string\r\n}\r\nfunction ActionButton(props: Props) {\r\n    const icon = <i className=\"material-icons\">{props.icon}</i>;\r\n    return (\r\n        <div className=\"action-button\">\r\n            {props.leftLabel && props.rightLabel && <button className={\"left \" + props.type} onClick={props.leftAction}>{props.icon && icon}{props.leftLabel}</button>}\r\n            {props.leftLabel && props.rightLabel && <button className={\"right \" + props.type} onClick={props.rightAction}>{props.icon && icon}{props.rightLabel}</button>}\r\n            {props.leftLabel && !props.rightLabel && <button className={\"center \" + props.type} onClick={props.leftAction}>{props.icon && icon}{props.leftLabel}</button>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ActionButton;\r\n","import React, { Component } from 'react';\r\nimport ActionButton from '../Ux/ActionButton';\r\nimport './style.scss';\r\nconst removeMd = require('remove-markdown');\r\n\r\ninterface Props {\r\n    selectNote: Function,\r\n    note: any,\r\n    id: string,\r\n    selected: boolean,\r\n    showTag: boolean\r\n}\r\ninterface State {\r\n\r\n}\r\nclass NoteRef extends Component<Props, State> {\r\n\r\n    selectNote = () => {\r\n        this.props.selectNote(this.props.id);\r\n    }\r\n\r\n    render() {\r\n        const tags: any = [];\r\n        if (this.props.note.tags) {\r\n            this.props.note.tags.split(\" \").map(item => {\r\n                tags.push(<ActionButton leftLabel={item}></ActionButton>);\r\n            })\r\n        }\r\n        return (\r\n            <>\r\n            <div className={this.props.selected ? \"noteref selected\" : \"noteref\"} onClick={this.selectNote}>\r\n                <div className=\"content\">\r\n                    {this.props.note.flag && <div className={\"flag-palette \" + this.props.note.flag} />}\r\n                    {this.props.showTag && <div className=\"notebook\">\r\n                        {/* <i className=\"material-icons\">insert_drive_file</i> */}\r\n                        {this.props.note.notebook}\r\n                    </div>}\r\n                    <div className=\"title\">{this.props.note.title}</div>\r\n                    <div className=\"space-bottom-0\" />\r\n                    <div className=\"detail\">{removeMd(this.props.note.content.substring(0, 100))}</div>\r\n                    {/* <div className=\"detail typography-5\"><Showdown source={this.props.note.content.substring(0, 150)} /></div> */}\r\n                </div>\r\n            </div>\r\n            <div className=\"separator\" />\r\n            {/* <hr /> */}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NoteRef;\r\n","import React, { Component } from 'react';\r\nimport Note from './Note';\r\nimport { Switch } from '@material-ui/core';\r\nimport { constants } from '../Constants';\r\nimport { httpGet, httpPut, httpDelete } from \"../Lib/RestTemplate\";\r\nimport OakDialog from '../Ux/OakDialog';\r\nimport ViewResolver from '../Ux/ViewResolver';\r\nimport View from '../Ux/View';\r\nimport './style.scss';\r\nimport NoteRef from './NoteRef';\r\nimport { isEmptyOrSpaces, match, sort } from '../Utils';\r\nimport OakSelect from '../Ux/OakSelect';\r\nimport Sidebar from '../Ux/Sidebar';\r\n\r\nimport { sendMessage, receiveMessage } from '../../events/MessageService';\r\nimport { Authorization } from '../Types/GeneralTypes';\r\nimport OakText from '../Ux/OakText';\r\nimport OakButton from '../Ux/OakButton';\r\n\r\nconst queryString = require('query-string');\r\n\r\ninterface Props {\r\n    authorization: Authorization\r\n    location: any,\r\n    logout: Function\r\n}\r\n\r\ninterface State {\r\n    items: any,\r\n    view: any,\r\n\r\n    searchtext: string,\r\n    isFiltered: boolean,\r\n\r\n    id?: string,\r\n    title: string,\r\n    tags: string,\r\n    isAddDialogOpen: boolean,\r\n    firstLoad: boolean,\r\n    selectedNoteId?: string,\r\n    content: string,\r\n    newNotebook: string,\r\n    existingNotebook: string,\r\n    existingNotebookList: any,\r\n    filteredNotebookList: any,\r\n    notebookFilter: string,\r\n    showFilter: boolean,\r\n    sortBy: string,\r\n    sortOrder: string,\r\n    flag: string,\r\n\r\n    searchPref: {\r\n        title: boolean,\r\n        tags: boolean,\r\n        content: boolean\r\n    },\r\n    searchResults: any,\r\n\r\n    sidebarElements: any\r\n}\r\n\r\nclass Notes extends Component<Props, State> {\r\n\r\n    _isMounted = false;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            items: [],\r\n            searchResults: [],\r\n            view: [],\r\n            isAddDialogOpen: false,\r\n\r\n            selectedNoteId: '',\r\n\r\n            title: '',\r\n            content: '',\r\n            tags: '',\r\n            newNotebook: '',\r\n            existingNotebook: '',\r\n            existingNotebookList: [],\r\n            filteredNotebookList: [],\r\n            notebookFilter: 'all notebooks',\r\n            sortBy: 'last modified',\r\n            sortOrder: 'descending',\r\n            firstLoad: true,\r\n            flag: '',\r\n\r\n            showFilter: false,\r\n            searchtext: '',\r\n            isFiltered: false,\r\n            searchPref: {\r\n                title: true,\r\n                tags: true,\r\n                content: true\r\n            },\r\n\r\n            sidebarElements: {\r\n                addNew: [\r\n                    {\r\n                        label: 'New Note',\r\n                        action: this.newNote,\r\n                        icon: 'note_add'\r\n                    }\r\n                ]\r\n            }\r\n        }\r\n    }\r\n\r\n    sortTypes =\r\n        {'created': 'createdAt',\r\n        'last modified': 'lastModifiedAt',\r\n        'notebook': 'notebook',\r\n        'note name': 'title'}\r\n\r\n    sortOrders = [\r\n        'ascending',\r\n        'descending'\r\n    ];\r\n\r\n    componentDidMount() {\r\n        this._isMounted = true;\r\n        if (this.props.location.search) {\r\n            const query = queryString.parse(this.props.location.search);\r\n            if (query && query.q) {\r\n                if (query.q.startsWith('tags')) {\r\n                    this.setState({\r\n                        searchPref: {\r\n                            title: false,\r\n                            tags: true,\r\n                            content: false\r\n                        }\r\n                    })\r\n                }\r\n                this.setState({\r\n                    searchtext: query.q,\r\n                    isFiltered: true\r\n                })\r\n            }\r\n        }\r\n\r\n        if(this.state.firstLoad && this.props.authorization.isAuth) {\r\n            this.initializeNotes(this.props.authorization);\r\n            this.setState({firstLoad: false})\r\n        }\r\n\r\n        receiveMessage().subscribe(message => {\r\n            if (this._isMounted) {\r\n                if (message.name === 'noteListRefreshed') {\r\n                    this.applyFilter();\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this._isMounted = false;\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (this.state.firstLoad && nextProps.authorization) {\r\n            this.initializeNotes(nextProps.authorization);\r\n            this.setState({firstLoad: false})\r\n        }\r\n    }\r\n\r\n    initializeNotes(authorization: Authorization, selectedNoteId?: string) {\r\n        const that = this;\r\n        httpGet(constants.API_URL_NOTE,\r\n            {\r\n                headers: {\r\n                    Authorization: 'Bearer ' + authorization.token\r\n                }\r\n            }, authorization.password)\r\n            .then(function(response) {\r\n                that.setState({items: response.data, searchResults: response.data, view: response.data});\r\n                if (that.state.isFiltered) {\r\n                    that.search();\r\n                } else {\r\n                    sendMessage('noteListRefreshed', true);\r\n                }\r\n\r\n                const existingNotebookList: any = [];\r\n                response.data.map(item => existingNotebookList.push(item.notebook))\r\n\r\n                that.setState({\r\n                    existingNotebookList: [...new Set(existingNotebookList)]\r\n                });\r\n\r\n                if (selectedNoteId) {\r\n                    that.setState({selectedNoteId: selectedNoteId});\r\n                } else if (!that.state.selectedNoteId && response.data && response.data.length > 0) {\r\n                    that.setState({selectedNoteId: response.data[0]._id});\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    newNote = () => {\r\n        this.toggleAddDialog();\r\n        sendMessage('sidebar', false);\r\n    }\r\n\r\n    toggleAddDialog = () => {\r\n        this.setState({\r\n            isAddDialogOpen: !this.state.isAddDialogOpen,\r\n        });\r\n        this.resetForm();\r\n    }\r\n\r\n    resetForm = () => {\r\n        this.setState({\r\n            id: undefined,\r\n            title: '',\r\n            content: '',\r\n            tags: '',\r\n            existingNotebook: '',\r\n            newNotebook: ''\r\n        })\r\n    }\r\n\r\n    closeAllDialog = () => {\r\n        this.setState({\r\n            isAddDialogOpen: false,\r\n        });\r\n        this.resetForm();\r\n    }\r\n\r\n    toggleFilter = () => {\r\n        this.setState({showFilter: !this.state.showFilter});\r\n    }\r\n\r\n    clearSearch = () => {\r\n        this.setState({\r\n            searchResults: this.state.items,\r\n            isFiltered: false,\r\n            searchtext: ''\r\n        }, () => sendMessage('noteListRefreshed', true))\r\n        sendMessage('sidebar', false);\r\n    }\r\n\r\n    search = (event?: any) => {\r\n        if (event) {\r\n            event.preventDefault();\r\n        }\r\n\r\n        if (isEmptyOrSpaces(this.state.searchtext)) {\r\n            this.setState({\r\n                searchResults: this.state.items,\r\n                isFiltered: false\r\n            }, () => sendMessage('noteListRefreshed', true));\r\n            return;\r\n        }\r\n\r\n        const searchResults = this.state.items.filter((item) => {\r\n            if (this.state.searchPref.title && match(item.title, this.state.searchtext)) {\r\n                return true;\r\n            } else if (this.state.searchPref.tags && match(item.tags, this.state.searchtext)) {\r\n                return true;\r\n            } else if (this.state.searchPref.content && match(item.content, this.state.searchtext)) {\r\n                return true;\r\n            }\r\n        });\r\n        let selectedNoteId = undefined;\r\n        if (searchResults.length > 0) {\r\n            selectedNoteId = searchResults[0]._id;\r\n        }\r\n\r\n        let notebookFilter = \"all notebooks\";\r\n        let notebookList: any = [];\r\n        searchResults.map(item => {\r\n            notebookList.push(item.notebook);\r\n        });\r\n\r\n        if ([...new Set(notebookList)].length === 1) {\r\n            notebookFilter = notebookList[0];\r\n        }\r\n        this.setState({\r\n            searchResults: searchResults,\r\n            isFiltered: true,\r\n            selectedNoteId: selectedNoteId,\r\n            notebookFilter: notebookFilter\r\n        }, () => sendMessage('noteListRefreshed', true));\r\n        sendMessage('sidebar', false)\r\n    }\r\n\r\n    applyFilter = () => {\r\n        const notebookList: any = [];\r\n        let noteList: any = [];\r\n        this.state.searchResults.map(item => {\r\n            if (isEmptyOrSpaces(this.state.notebookFilter) || this.state.notebookFilter === 'all notebooks' || item.notebook === this.state.notebookFilter) {\r\n                noteList.push(item);\r\n            }\r\n            notebookList.push(item.notebook);\r\n        });\r\n\r\n        noteList = sort(noteList, this.sortTypes[this.state.sortBy], this.state.sortOrder === 'descending' ? true : false);\r\n\r\n        let selectedNoteId = '';\r\n        if (noteList && noteList.length > 0) {\r\n            selectedNoteId = noteList[0]._id;\r\n        }\r\n\r\n        this.setState({\r\n            selectedNoteId: selectedNoteId,\r\n            view: noteList,\r\n            filteredNotebookList: [...new Set(notebookList)]\r\n        });\r\n    }\r\n\r\n    toggleSearchPref = (pref) => {\r\n        this.setState({\r\n            searchPref: {\r\n                ...this.state.searchPref,\r\n                [pref]: !this.state.searchPref[pref]\r\n            }\r\n        })\r\n    }\r\n\r\n    deleteNote = (noteId) => {\r\n        const that = this;\r\n        httpDelete(constants.API_URL_NOTE + \"/\" + noteId,\r\n        {\r\n            headers: {\r\n                Authorization: 'Bearer ' + this.props.authorization.token\r\n            }\r\n        })\r\n        .then(function(response) {\r\n            if (response.status === 201) {\r\n                sendMessage('notification', true, {type: 'success', message: 'Note deleted', duration: 5000});\r\n                that.setState({\r\n                    selectedNoteId: undefined\r\n                }, () => that.initializeNotes(that.props.authorization));\r\n\r\n            }\r\n        })\r\n        .catch((error) => {\r\n            if (error.response.status === 401) {\r\n                that.props.logout(null, 'failure', 'Session expired. Login again');\r\n            }\r\n        })\r\n    }\r\n\r\n    selectNote = (noteId) => {\r\n        this.setState({\r\n            selectedNoteId: noteId\r\n        })\r\n        sendMessage('sidebar', false);\r\n    }\r\n\r\n    saveNoteEvent = () => {\r\n        let notebook = this.state.existingNotebook;\r\n        if (notebook === '<create new>') {\r\n            notebook = this.state.newNotebook;\r\n        }\r\n        this.saveNote({\r\n            id: null,\r\n            type: 'Note',\r\n            title: this.state.title,\r\n            content: this.state.content,\r\n            tags: this.state.tags,\r\n            flag: this.state.flag,\r\n            notebook: notebook\r\n        });\r\n    }\r\n\r\n    saveNote = (note, edit=false) => {\r\n\r\n        const that = this;\r\n\r\n        if (!note) {\r\n            sendMessage('notification', true, {type: 'failure', message: 'Unknown error', duration: 5000});\r\n            return;\r\n        }\r\n\r\n        if (isEmptyOrSpaces(note.notebook)) {\r\n            sendMessage('notification', true, {type: 'failure', message: 'Notebook not chosen', duration: 5000});\r\n            return;\r\n        }\r\n\r\n        if (isEmptyOrSpaces(note.title)) {\r\n            sendMessage('notification', true, {type: 'failure', message: 'Note name / title missing', duration: 5000});\r\n            return;\r\n        }\r\n\r\n        if (isEmptyOrSpaces(note.tags)) {\r\n            note.tags = 'unsorted';\r\n        }\r\n\r\n        httpPut(constants.API_URL_NOTE, {\r\n            id: note.id,\r\n            type: note.type,\r\n            title: note.title,\r\n            attributes: note.attributes,\r\n            content: note.content,\r\n            tags: note.tags,\r\n            flag: note.flag,\r\n            notebook: note.notebook\r\n        },\r\n        {\r\n            headers: {\r\n                Authorization: 'Bearer ' + this.props.authorization.token\r\n            }\r\n        }, this.props.authorization.password, ['attributes'])\r\n        .then(function(response) {\r\n            if (response.status === 201) {\r\n                if (edit) {\r\n                    sendMessage('notification', true, {type: 'success', message: 'Note edited', duration: 5000});\r\n                    sendMessage('closeNoteEditView', true);\r\n                } else {\r\n                    sendMessage('notification', true, {type: 'success', message: 'Note created', duration: 5000});\r\n                    that.closeAllDialog();\r\n                }\r\n\r\n                that.initializeNotes(that.props.authorization, response.data._id);\r\n            }\r\n        })\r\n        .catch((error) => {\r\n            if (error.response.status === 401) {\r\n                that.props.logout(null, 'failure', 'Session expired. Login again');\r\n            }\r\n        })\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState(\r\n            {\r\n                ...this.state,\r\n                [event.target.name]: event.target.value\r\n            }\r\n        )\r\n    }\r\n\r\n    handleNotebookFilterChange = (event) => {\r\n        this.setState(\r\n        {\r\n            ...this.state,\r\n            [event.target.name]: event.target.value\r\n        },\r\n        () => this.applyFilter());\r\n    }\r\n\r\n    render() {\r\n        const noteview = this.state.view.map(item => (\r\n            <div key={item._id}>\r\n                {item._id === this.state.selectedNoteId &&\r\n                        <Note key={item._id} id={item._id} note={item} saveNote={this.saveNote} deleteNote={this.deleteNote} notebooks={this.state.existingNotebookList}/>}\r\n            </div>\r\n        ))\r\n        const listNoteRef = this.state.view.map(item => (\r\n            <div key={item._id}>\r\n                <NoteRef selected={this.state.selectedNoteId === item._id ? true : false} id={item._id} note={item} selectNote={this.selectNote} showTag={this.state.notebookFilter === 'all notebooks'}/>\r\n            </div>\r\n        ))\r\n        return (\r\n            <div className=\"notes\">\r\n                <OakDialog visible={this.state.isAddDialogOpen} toggleVisibility={this.toggleAddDialog}>\r\n                    <div className=\"dialog-body\">\r\n                        <div><OakSelect label=\"Notebook\" data={this.state} id=\"existingNotebook\" handleChange={e => this.handleChange(e)} elements={this.state.existingNotebookList} firstAction=\"<create new>\" /></div>\r\n                        <div>\r\n                            {this.state.existingNotebook === '<create new>' && <OakText label=\"Notebook name\" data={this.state} id=\"newNotebook\" handleChange={e => this.handleChange(e)} />}\r\n                        </div>\r\n                        <div><OakText label=\"Title\" data={this.state} id=\"title\" handleChange={e => this.handleChange(e)} /></div>\r\n                        <div><OakText label=\"Tags (separated by blank spaces)\" data={this.state} id=\"tags\" handleChange={e => this.handleChange(e)} /></div>\r\n                        <div><OakText label=\"Content (Markdown / HTML / Plaintext)\" data={this.state} id=\"content\" multiline handleChange={e => this.handleChange(e)} /></div>\r\n                    </div>\r\n                    <div className=\"dialog-footer\">\r\n                        <OakButton action={this.toggleAddDialog} theme=\"default\" variant=\"outline\"><i className=\"material-icons\">close</i>Cancel</OakButton>\r\n                        <OakButton action={this.saveNoteEvent} theme=\"primary\" variant=\"animate in\"><i className=\"material-icons\">double_arrow</i>Save</OakButton>\r\n                    </div>\r\n                </OakDialog>\r\n\r\n                <ViewResolver sideLabel='More options'>\r\n                    <View main>\r\n                        {noteview}\r\n                    </View>\r\n                    <View side>\r\n                        <div className=\"filter-container\">\r\n                            <div className=\"section-main\">\r\n                                <Sidebar label=\"Add New\" elements={this.state.sidebarElements['addNew']} icon=\"add\" animate />\r\n                                <Sidebar label=\"Search\" elements={this.state.sidebarElements['search']} icon=\"search\" animate number={this.state.isFiltered ? this.state.searchResults.length : undefined}>\r\n                                    <div className=\"space-top-1\" />\r\n                                    <form method=\"GET\" onSubmit={this.search} noValidate>\r\n                                        <div className=\"space-left-4 space-right-4\"><OakText label=\"Keywords\" id=\"searchtext\" data={this.state} handleChange={e => this.handleChange(e)} /></div>\r\n                                    </form>\r\n                                    <div className=\"typography-5 space-top-2 space-left-4\">\r\n                                        <Switch\r\n                                            checked={this.state.searchPref.title}\r\n                                            onChange={() => this.toggleSearchPref('title')}\r\n                                            inputProps={{ 'aria-label': 'primary checkbox' }}/>\r\n                                        Include title\r\n                                    </div>\r\n                                    <div className=\"typography-5 space-top-2 space-left-4\">\r\n                                        <Switch\r\n                                            checked={this.state.searchPref.tags}\r\n                                            onChange={() => this.toggleSearchPref('tags')}\r\n                                            inputProps={{ 'aria-label': 'primary checkbox' }}/>\r\n                                        Include tags\r\n                                    </div>\r\n                                    <div className=\"typography-5 space-top-2 space-left-4\">\r\n                                        <Switch\r\n                                            checked={this.state.searchPref.content}\r\n                                            onChange={() => this.toggleSearchPref('content')}\r\n                                            inputProps={{ 'aria-label': 'primary checkbox' }}/>\r\n                                        Include Content\r\n                                    </div>\r\n                                    {this.state.isFiltered && <div className=\"typography-4 space-top-2\">Found {this.state.searchResults.length} notes matching the search criteria</div>}\r\n                                    <div className=\"actionbar-2 space-top-2 space-bottom-2\">\r\n                                        <div>\r\n                                            <OakButton action={this.clearSearch} theme=\"default\" variant=\"animate none\">Clear</OakButton>\r\n                                        </div>\r\n                                        <div>\r\n                                            <OakButton action={this.search} theme=\"default\" variant=\"animate in\">Search</OakButton>\r\n                                        </div>\r\n                                    </div>\r\n                                </Sidebar>\r\n\r\n                                <Sidebar label={this.state.isFiltered ? \"Search results\" : \"All Notes\"} icon=\"notes\" number={this.state.view.length}>\r\n                                    <div className=\"filter-bar\">\r\n                                        {this.state.filteredNotebookList.length > 1 && <div><OakSelect label=\"Notebook\" data={this.state} id=\"notebookFilter\" handleChange={e => this.handleNotebookFilterChange(e)} elements={this.state.filteredNotebookList} first='all notebooks' /></div>}\r\n                                        {this.state.filteredNotebookList.length === 1 && <div><OakSelect label=\"Notebook\" data={this.state} id=\"notebookFilter\" handleChange={e => this.handleNotebookFilterChange(e)} elements={this.state.filteredNotebookList} /></div>}\r\n                                        <div></div>\r\n                                        <div><OakSelect label=\"Sort by\" data={this.state} id=\"sortBy\" handleChange={e => this.handleNotebookFilterChange(e)} elements={Object.keys(this.sortTypes)} /></div>\r\n                                        <div><OakSelect label=\"Sort Order\" data={this.state} id=\"sortOrder\" handleChange={e => this.handleNotebookFilterChange(e)} elements={this.sortOrders} /></div>\r\n                                    </div>\r\n                                    {listNoteRef}\r\n                                </Sidebar>\r\n                            </div>\r\n                        </div>\r\n                    </View>\r\n                </ViewResolver>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Notes;\r\n","import { GET_AUTH, REMOVE_AUTH, ADD_AUTH } from '../actions/types';\r\n\r\nexport const getAuth = () => dispatch => {\r\n    dispatch({\r\n        type: GET_AUTH\r\n    });\r\n}\r\n\r\nexport const addAuth = (data) => dispatch => {\r\n    dispatch({\r\n        type: ADD_AUTH,\r\n        payload: data\r\n    });\r\n}\r\n\r\nexport const removeAuth = () => dispatch => {\r\n    dispatch({\r\n        type: REMOVE_AUTH\r\n    });\r\n}","import { httpGet, httpPost, httpPut } from \"../Lib/RestTemplate\";\r\nimport sjcl from 'ioak-sjcl';\r\nimport CryptoJS from 'crypto-js';\r\nimport { constants } from '../Constants';\r\n\r\nexport function preSignup() {\r\n    return httpGet(constants.API_URL_PRESIGNUP, null)\r\n        .then(function(response) {\r\n            return Promise.resolve(response);\r\n        })\r\n}\r\n\r\nexport function signup(data) {\r\n    return httpPost(constants.API_URL_SIGNUP, {\r\n        name: data.name,\r\n        email: data.email,\r\n        problem: encrypt(data.password, data.solution, data.salt),\r\n        solution: data.solution\r\n        }, null)\r\n        .then(function(response) {\r\n            return Promise.resolve(response.status);\r\n        })\r\n}\r\n\r\nexport function preSignin(email) {\r\n    return httpGet(constants.API_URL_PRESIGNIN + email, null)\r\n        .then(response => Promise.resolve(response))\r\n        .catch(error => Promise.resolve(error.response))\r\n}\r\n\r\nexport function signin(data, problem) {\r\n    try {\r\n        let solution = decrypt(data.password, JSON.stringify(problem));\r\n        return httpPost(constants.API_URL_SIGNIN, {\r\n            email: data.email, solution: solution\r\n            }, null)\r\n            .then(function(response) {\r\n                return Promise.resolve(response);\r\n            })\r\n\r\n    } catch(error) {\r\n        if (error.message === \"ccm: tag doesn't match\") {\r\n            return Promise.resolve({\r\n                status: 401\r\n            });\r\n        } else {\r\n            return Promise.resolve(error);\r\n        }\r\n    }\r\n}\r\n\r\nexport function updateUserDetails(data, authorization, type) {\r\n    return httpGet(constants.API_URL_PRESIGNUP, null)\r\n        .then(function(response) {\r\n            if (response.status === 200) {\r\n                let newData = {};\r\n                if (type && type === 'password') {\r\n                    newData = {\r\n                        problem: encrypt(data.password, response.data.solution, response.data.salt),\r\n                        solution: response.data.solution\r\n                    }\r\n                } else {\r\n                    newData = {\r\n                        name: data.name,\r\n                        email: data.email\r\n                    }\r\n                }\r\n\r\n                return httpPut(constants.API_URL_USER_DETAILS, newData,\r\n                    {\r\n                        headers: {\r\n                            Authorization: 'Bearer ' + authorization.token\r\n                        }\r\n                    }, authorization.password)\r\n                    .then(function(response) {\r\n                        return Promise.resolve(response);\r\n                    })\r\n            }\r\n        })\r\n}\r\n\r\nexport function sentPasswordChangeEmail(data, type) {\r\n\r\n    return httpPost(constants.API_URL_CODE, data, null)\r\n        .then(function(response) {\r\n            return Promise.resolve(response.status);\r\n        })\r\n}\r\n\r\nexport function resetPassword(data, type) {\r\n\r\n    return httpGet(constants.API_URL_PRESIGNUP, null)\r\n        .then(function(response) {\r\n            if (response.status === 200) {\r\n                let newData = {};\r\n                if (type && type === 'password') {\r\n                    newData = {\r\n                        problem: encrypt(data.password, response.data.solution, response.data.salt),\r\n                        solution: response.data.solution,\r\n                        resetCode: data.resetCode\r\n                    }\r\n\r\n                }\r\n\r\n                return httpPost(constants.API_URL_RESET, newData, null)\r\n                    .then(function(response) {\r\n                        return Promise.resolve(response.status);\r\n                    })\r\n\r\n\r\n            }\r\n        })\r\n}\r\n\r\nfunction encrypt(password, message, salt) {\r\n    const config = {\r\n        cipher: 'aes',\r\n        iter: '12000',\r\n        ks: 256,\r\n        salt: CryptoJS.enc.Base64.stringify((CryptoJS.enc.Utf8.parse(salt)))\r\n    }\r\n    return sjcl.encrypt(password, message, config);\r\n}\r\n\r\nfunction decrypt(password, ciphertext) {\r\n    return sjcl.decrypt(password, ciphertext);\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getAuth, addAuth, removeAuth } from '../../actions/AuthActions';\r\nimport './Login.scss';\r\nimport {signup, signin, sentPasswordChangeEmail, preSignup, preSignin} from './AuthService';\r\nimport { Authorization } from '../Types/GeneralTypes';\r\nimport { sendMessage } from '../../events/MessageService';\r\nimport {isEmptyOrSpaces} from \"../Utils\";\r\nimport OakText from '../Ux/OakText';\r\nimport OakButton from '../Ux/OakButton';\r\n\r\nconst queryString = require('query-string');\r\n\r\ninterface Props {\r\n    getAuth: Function,\r\n    addAuth: Function,\r\n    removeAuth: Function,\r\n    history: any,\r\n    location: any,\r\n    authorization: Authorization\r\n}\r\n\r\ninterface State {\r\n    newuser: boolean,\r\n    name: string,\r\n    email: string,\r\n    password: string,\r\n    resetCode: string\r\n}\r\n\r\nclass Login extends Component<Props, State> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            newuser: false,\r\n            name: '',\r\n            email: '',\r\n            password: '',\r\n            resetCode:''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.location.search) {\r\n            const query = queryString.parse(this.props.location.search);\r\n            if (query && query.type === 'signup') {\r\n                this.setState({\r\n                    newuser: true\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    signin = (event) => {\r\n        event.preventDefault();\r\n\r\n        sendMessage('notification', false);\r\n        sendMessage('spinner');\r\n        if (this.state.email && this.state.password) {\r\n            preSignin(this.state.email).then((response) => {\r\n                if (response.status === 200) {\r\n                    signin({\r\n                        email: this.state.email,\r\n                        password: this.state.password\r\n                        }, response.data)\r\n                        .then((response) => {\r\n                            if (response.status === 200) {\r\n                                sendMessage('notification', true, {message: 'Signed In successfully', type: 'success', duration: 3000});\r\n                                this.success(response.data, this.state.password);\r\n                            } else if (response.status === 401) {\r\n                                sendMessage('notification', true, {message: 'Incorrect passphrase', type: 'failure', duration: 3000});\r\n                            } else {\r\n                                sendMessage('notification', true, {message: 'Unknown response from server. Please try again or at a later time', type: 'failure', duration: 3000});\r\n                            }\r\n                        })\r\n                        .catch((error) => {\r\n                            sendMessage('notification', true, {'type': 'failure', message: 'Unknown error. Please try again or at a later time', duration: 3000});\r\n                        })\r\n                } else if (response.status === 404) {\r\n                    sendMessage('notification', true, {message: 'User name does not exist', type: 'failure', duration: 3000});\r\n                }\r\n            })\r\n\r\n            \r\n        } else {\r\n            sendMessage('notification', true, {type: 'failure', message: 'Username/password cannot be empty', duration: 3000});\r\n        }\r\n    }\r\n\r\n    signup = (event) => {\r\n        event.preventDefault();\r\n        const that = this;\r\n        sendMessage('notification', false);\r\n        sendMessage('spinner');\r\n        if (this.state.name && this.state.password && this.state.email) {\r\n            if (!(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(this.state.email))) {\r\n                sendMessage('notification', true, {type: 'failure', message: 'Email ID is invalid', duration: 3000});\r\n                return;\r\n            }\r\n            preSignup().then(function(response) {\r\n                if (response.status === 200) {\r\n                    signup({\r\n                        name: that.state.name,\r\n                        password: that.state.password,\r\n                        email: that.state.email,\r\n                        solution: response.data.solution,\r\n                        salt: response.data.salt\r\n                        })\r\n                        .then(function(status) {\r\n                            if (status === 200) {\r\n                                sendMessage('notification', true, {'type': 'success', message: 'Your account has been created. You can login now', duration: 3000});\r\n                                that.toggle();\r\n                            }\r\n                        })\r\n                }\r\n            });\r\n        } else if (!this.state.name) {\r\n            sendMessage('notification', true, {type: 'failure', message: 'Name cannot be empty', duration: 3000});\r\n        } else if (!this.state.email) {\r\n            sendMessage('notification', true, {type: 'failure', message: 'Email cannot be empty', duration: 3000});\r\n        } else if (!this.state.password) {\r\n            sendMessage('notification', true, {type: 'failure', message: 'Password cannot be empty', duration: 3000});\r\n        }\r\n    }\r\n\r\n    sentEmailWithCode = () => {\r\n        if (isEmptyOrSpaces(this.state.email)) {\r\n            sendMessage('notification', true, {message: 'Email cannot be empty', type: 'failure', duration: 5000});\r\n            return;\r\n        }\r\n\r\n        this.sentPasswordChangeEmail('password');\r\n\r\n    }\r\n\r\n    sentPasswordChangeEmail = (type) => {\r\n        const min = 1;\r\n        const max = 100;\r\n        const rand = min + Math.random() * (max - min);\r\n        sentPasswordChangeEmail({\r\n            email: this.state.email,\r\n            resetCode: rand\r\n        }, type)\r\n            .then((response: any) => {\r\n                if (response === 200) {\r\n                    if (type === 'password') {\r\n                        sendMessage('notification', true, {message: 'Password sent successfully', type: 'success', duration: 3000});\r\n                    }\r\n                } else {\r\n                    sendMessage('notification', true, {'type': 'failure', message: 'Invalid Email error', duration: 3000});\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                sendMessage('notification', true, {'type': 'failure', message: 'Bad request', duration: 3000});\r\n            })\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState(\r\n            {\r\n                ...this.state,\r\n                [event.currentTarget.name]: event.currentTarget.value\r\n            }\r\n        )\r\n    }\r\n\r\n    success = (data, password) => {\r\n        this.props.addAuth({\r\n            isAuth: true,\r\n            token: data.token,\r\n            secret: data.secret,\r\n            name: data.name,\r\n            email: data.email,\r\n            password: password\r\n        });\r\n        sendMessage('loggedin', true);\r\n        this.props.history.push(\"/home\");\r\n    }\r\n\r\n    toggle = () => {\r\n        this.setState({\r\n            newuser: !this.state.newuser\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"login\">\r\n                {!this.state.newuser && <div className=\"container\">\r\n                    <form method=\"GET\" onSubmit={this.signin} noValidate>\r\n                        <h1>Log In</h1>\r\n                        <div className=\"form\">\r\n                            <OakText label=\"Username/e-mail\" id=\"email\" data={this.state} handleChange={e => this.handleChange(e)} />\r\n                            <OakText label=\"Password\" id=\"password\" type=\"password\" data={this.state} handleChange={e => this.handleChange(e)} />\r\n                        </div>\r\n                        <br />\r\n                        <OakButton theme=\"primary\" variant=\"animate in\"  action={this.signin}>Sign In</OakButton>\r\n                        <br /><br />\r\n                        Don't have an account? &nbsp; <OakButton theme=\"secondary\" variant=\"outline\"  action={this.toggle}>Sign Up</OakButton>\r\n                        <br /><br />\r\n\r\n                    </form>\r\n\r\n                    <OakButton action={this.sentEmailWithCode}>Forgot password ?</OakButton>\r\n\r\n                </div>}\r\n\r\n                {this.state.newuser && <div className=\"container\">\r\n                    <form method=\"GET\" onSubmit={this.signup} noValidate>\r\n                        <h1>Sign Up</h1>\r\n                        <div className=\"form\">\r\n                            <OakText label=\"Name\" id=\"name\" data={this.state} handleChange={e => this.handleChange(e)} />\r\n                            <OakText label=\"Email / User Name\" id=\"email\" data={this.state} handleChange={e => this.handleChange(e)} />\r\n                            <OakText label=\"Password\" id=\"password\" type=\"password\" data={this.state} handleChange={e => this.handleChange(e)} />\r\n                        </div>\r\n                        <br />\r\n                        <OakButton theme=\"primary\" variant=\"animate in\"  action={this.signup}>Create account</OakButton>\r\n                        <br /><br />\r\n                        Already have a account? &nbsp; <OakButton theme=\"secondary\" variant=\"outline\"  action={this.toggle}>Sign In</OakButton>\r\n                    </form>\r\n                </div>}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    authorization: state.authorization\r\n})\r\n\r\nexport default connect(mapStateToProps, { getAuth, addAuth, removeAuth })(Login);\r\n","import React, { Component } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { getAuth } from '../../actions/AuthActions';\r\nimport { Authorization } from '../Types/GeneralTypes';\r\n\r\ninterface Props {\r\n  authorization: Authorization,\r\n  getAuth: Function,\r\n  path: string,\r\n  render: any,\r\n  renderAlt: any,\r\n  location: any\r\n}\r\n\r\ninterface State {\r\n\r\n}\r\n\r\nclass PrivateRoute extends Component<Props, State> {\r\n  componentWillMount() {\r\n    this.props.getAuth();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.props.authorization.isAuth && <Route path={this.props.path} render={this.props.render} />}\r\n        {/* {!this.props.authorization.isAuth && <Route path=\"/login\" render={this.props.renderAlt} />} */}\r\n        {/* {!this.props.authorization.isAuth && <Redirect to={{pathname: \"/login\", state: { from: this.props.location}}} />} */}\r\n        {/* {!this.props.authorization.isAuth && <Redirect to={{pathname: \"/login\"}} />} */}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  authorization: state.authorization\r\n})\r\n\r\nexport default connect(mapStateToProps, { getAuth })(PrivateRoute);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getAuth, addAuth, removeAuth } from '../../actions/AuthActions';\r\nimport { Authorization } from '../Types/GeneralTypes';\r\n\r\ninterface Props {\r\n    authorization: Authorization,\r\n    addAuth: Function,\r\n    getAuth: Function,\r\n    removeAuth: Function\r\n}\r\n\r\ninterface State {\r\n\r\n}\r\n\r\nclass AuthInit extends Component<Props, State> {\r\n    componentWillMount() {\r\n        if (!this.props.authorization.isAuth) {\r\n            console.log(this.props);\r\n        }\r\n        this.props.getAuth();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <></>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    authorization: state.authorization\r\n})\r\n\r\nexport default connect(mapStateToProps, { getAuth, addAuth, removeAuth })(AuthInit);","import { httpGet, httpPut } from '../components/Lib/RestTemplate';\r\nimport { constants } from '../components/Constants';\r\nimport { GET_PROFILE, SET_PROFILE } from './types';\r\n\r\nexport const getProfile = () => dispatch => {\r\n    dispatch({\r\n        type: GET_PROFILE\r\n    });\r\n}\r\n\r\nexport const reloadProfile = (authorization) => dispatch => {\r\n    httpGet(constants.API_URL_PREFERENCES,\r\n        {\r\n            headers: {\r\n                Authorization: 'Bearer ' + authorization.token\r\n            }\r\n        }, authorization.password)\r\n        .then(function(response) {\r\n            console.log(response);\r\n            dispatch({\r\n                type: SET_PROFILE,\r\n                payload: response.data\r\n            })\r\n        }\r\n    );\r\n}\r\n\r\nexport const persistProfile = (authorization, payload) => dispatch => {\r\n    httpPut(constants.API_URL_PREFERENCES, payload,\r\n        {\r\n            headers: {\r\n                Authorization: 'Bearer ' + authorization.token\r\n            }\r\n        }, authorization.password)\r\n        .then(function(response) {\r\n            dispatch({\r\n                type: SET_PROFILE,\r\n                payload: response.data\r\n            })\r\n        }\r\n    );\r\n}\r\n\r\nexport const setProfile = (payload) => dispatch => {\r\n    dispatch({\r\n        type: SET_PROFILE,\r\n        payload: payload\r\n    });\r\n}\r\n","import React, { Component } from 'react';\r\nimport { receiveMessage } from '../../events/MessageService';\r\n\r\ninterface Props {\r\n}\r\n\r\ninterface State {\r\n    backdrop: string\r\n}\r\n\r\nclass Backdrop extends Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {\r\n            backdrop: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        receiveMessage().subscribe(\r\n            message => {\r\n                if (message.name === 'dialog') {\r\n                    if (message.signal) {\r\n                        this.setState({backdrop: 'backdrop-fade'});\r\n                    } else {\r\n                        this.setState({backdrop: ''});\r\n                    }\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={this.state.backdrop}></div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Backdrop;","import React, { Component } from 'react';\r\nimport './style.scss';\r\nimport { receiveMessage, sendMessage } from '../../events/MessageService';\r\n\r\ninterface Props {\r\n}\r\n\r\ninterface State {\r\n    notification: any,\r\n    spinner: boolean\r\n}\r\n\r\nclass Notification extends Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {\r\n            spinner: false,\r\n            notification: null\r\n        }\r\n    }\r\n    componentWillMount() {\r\n        receiveMessage().subscribe(message => {\r\n            if (message.name === 'notification') {\r\n                if (!message.signal) {\r\n                    this.setState({\r\n                        notification: null,\r\n                    })\r\n                } else {\r\n                    this.setState({\r\n                        notification: message.data,\r\n                        spinner: false\r\n                    })\r\n                    \r\n                    if (message.data && message.data.duration) {\r\n                        setTimeout(() => {\r\n                            sendMessage('notification', false);\r\n                        }, message.data.duration);\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (message.name === 'spinner') {\r\n                this.setState({\r\n                    spinner: message.signal\r\n                })\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n            {this.state.notification && <div className={\"notification \" + this.state.notification.type}><div className=\"message\">{this.state.notification.message}</div></div>}\r\n            {this.state.spinner && <div className=\"lds-roller\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>}\r\n            {/* {this.props.spinner && <div className=\"lds-facebook\"><div></div><div></div><div></div></div>} */}\r\n            {/* {this.props.spinner && <div className=\"lds-dual-ring\"></div>} */}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Notification;","import React, { Component } from 'react';\r\n\r\nimport './style.scss';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Authorization, Profile } from '../Types/GeneralTypes';\r\n\r\ninterface Props {\r\n    authorization: Authorization,\r\n    profile: Profile\r\n}\r\n\r\ninterface State {\r\n    menu: boolean\r\n}\r\n\r\nclass Links extends Component<Props, State> {\r\n    toggleMenu = () => {\r\n        this.setState({\r\n            menu: !this.state.menu\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"links\">\r\n                {this.props.authorization.isAuth &&\r\n                    <>\r\n                    <NavLink to=\"/bookmarks\" className=\"navitem\" activeClassName=\"active\">Bookmarks</NavLink>\r\n                    <NavLink to=\"/notes\" className=\"navitem\" activeClassName=\"active\">Notes</NavLink>\r\n                    <NavLink to=\"/settings\" className=\"navitem\" activeClassName=\"active\">Settings</NavLink>\r\n                    <NavLink to=\"/help\" className=\"navitem\" activeClassName=\"active\">Help</NavLink>\r\n                    </>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Links;","import React, { Component } from 'react';\r\n\r\nimport './style.scss';\r\nimport protekt_white from '../../images/protekt_white.svg';\r\nimport protekt_black from '../../images/protekt_black.svg';\r\nimport Links from './Links';\r\nimport { Authorization, Profile } from '../Types/GeneralTypes';\r\nimport OakButton from '../Ux/OakButton';\r\n\r\ninterface Props {    \r\n    sendEvent: Function,\r\n    getAuth: Function,\r\n    addAuth: Function,\r\n    removeAuth: Function,\r\n    authorization: Authorization\r\n    getProfile: Function,\r\n    profile: Profile,\r\n    login: Function,\r\n    transparent: boolean,\r\n    logout: Function,\r\n    toggleSettings: any\r\n}\r\n\r\ninterface State {\r\n    showSettings: boolean\r\n}\r\n\r\nclass Desktop extends Component<Props, State> {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.props.getProfile();\r\n        this.state = {\r\n            showSettings: false\r\n        }\r\n    }\r\n\r\n    signin = (type) => {\r\n        this.props.login(type);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={(this.props.transparent ? \"navbar desktop transparent\" : \"navbar desktop\")}>\r\n                <div className=\"left\">\r\n                    {!this.props.transparent && this.props.profile.theme === 'theme_light' && <img className=\"logo\" src={protekt_black} alt=\"Protekt logo\" />}\r\n                    {(this.props.transparent || this.props.profile.theme === 'theme_dark') && <img className=\"logo\" src={protekt_white} alt=\"Protekt logo\" />}\r\n                    <Links authorization={this.props.authorization} profile={this.props.profile} />\r\n                </div>\r\n                <div className=\"right\">\r\n                    <div className=\"action\">\r\n                        {this.props.authorization.isAuth && \r\n                            <OakButton theme=\"default\" variant=\"outline\" small action={this.props.toggleSettings}><i className=\"material-icons\">brush</i>Appearance</OakButton>}\r\n                        {this.props.authorization.isAuth && \r\n                            <OakButton theme=\"default\" variant=\"outline\" small action={this.props.logout()}><i className=\"material-icons\">power_settings_new</i>Logout</OakButton>}\r\n                        {!this.props.authorization.isAuth && \r\n                            <OakButton theme=\"default\" variant=\"outline\" small action={() => this.signin('signin')}><i className=\"material-icons\">person</i>Login</OakButton>}\r\n                        {!this.props.authorization.isAuth && \r\n                            <OakButton theme=\"default\" variant=\"outline\" small action={() => this.signin('signup')}><i className=\"material-icons\">person_add</i>Signup</OakButton>}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Desktop;","import React, { Component } from 'react';\r\n\r\nimport './style.scss';\r\nimport protekt_white from '../../images/protekt_white.svg';\r\nimport protekt_black from '../../images/protekt_black.svg';\r\nimport Links from './Links';\r\nimport { Authorization, Profile } from '../Types/GeneralTypes';\r\nimport OakButton from '../Ux/OakButton';\r\n\r\ninterface Props {    \r\n    sendEvent: Function,\r\n    getAuth: Function,\r\n    addAuth: Function,\r\n    removeAuth: Function,\r\n    authorization: Authorization\r\n    getProfile: Function,\r\n    profile: Profile,\r\n    login: Function,\r\n    transparent: boolean,\r\n    logout: Function,\r\n    toggleSettings: any\r\n}\r\n\r\ninterface State {\r\n    menu: boolean\r\n}\r\n\r\nclass Mobile extends Component<Props, State> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.props.getProfile();\r\n        this.state = {\r\n            menu: false\r\n        }\r\n    }\r\n\r\n    toggleMenu = () => {\r\n        this.setState({\r\n            menu: !this.state.menu\r\n        })\r\n    }\r\n\r\n    signin = (type) => {\r\n        this.props.login(type);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n            <div className={(this.props.transparent ? \"navbar mobile transparent\" : \"navbar mobile\")}>\r\n                <div className=\"left\">\r\n                    {!this.props.transparent && this.props.profile.theme === 'theme_light' && <img className=\"logo\" src={protekt_black} alt=\"Protekt logo\" />}\r\n                    {(this.props.transparent || this.props.profile.theme === 'theme_dark') && <img className=\"logo\" src={protekt_white} alt=\"Protekt logo\" />}\r\n                    {/* links */}\r\n                </div>\r\n                <div className=\"right\">\r\n                    {/* <div className=\"settings-icon\" onClick={this.props.toggleSettings}><i className=\"material-icons\">settings</i></div> */}\r\n                    <div className={(this.state.menu ? \"menu active\" : \"menu\")} onClick={this.toggleMenu}><div></div></div>\r\n                    {/* action login */}\r\n                </div>\r\n            </div>\r\n            <div className={(this.state.menu ? \"slider show\" : \"slider hide\")} onClick={this.toggleMenu}>\r\n                <div className={(this.state.menu ? \"container\": \"container hidetext\")} onClick={this.toggleMenu}>\r\n                    <div className=\"action\">\r\n                        <div className=\"settings-icon\" onClick={this.props.toggleSettings}>\r\n                            {this.props.authorization.isAuth && <OakButton theme=\"default\" variant=\"outline\" small action={this.props.toggleSettings}><i className=\"material-icons\">brush</i>Appearance</OakButton>}\r\n                        </div>\r\n                        <div className=\"buttons\">\r\n                            {this.props.authorization.isAuth && <OakButton theme=\"default\" variant=\"outline\" small action={this.props.logout()}><i className=\"material-icons\">power_settings_new</i>Logout</OakButton>}\r\n                            {!this.props.authorization.isAuth && <OakButton theme=\"secondary\" variant=\"animate none\" small action={() => this.signin('signin')}><i className=\"material-icons\">person</i>Login</OakButton>}\r\n                            {!this.props.authorization.isAuth && <OakButton theme=\"secondary\" variant=\"animate none\" small action={() => this.signin('signup')}><i className=\"material-icons\">person_add</i>Signup</OakButton>}\r\n                        </div>\r\n                    </div>\r\n                    <Links authorization={this.props.authorization} profile={this.props.profile}/>\r\n                </div>\r\n            </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Mobile;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {withRouter} from 'react-router'\r\nimport { getProfile, setProfile, reloadProfile } from '../../actions/ProfileActions';\r\nimport {withCookies} from 'react-cookie';\r\n\r\nimport './style.scss';\r\nimport Desktop from './Desktop';\r\nimport Mobile from './Mobile';\r\nimport { Switch } from '@material-ui/core';\r\nimport OakDialog from '../Ux/OakDialog';\r\nimport { Authorization, Profile } from '../Types/GeneralTypes';\r\nimport { receiveMessage } from '../../events/MessageService';\r\nimport OakButton from '../Ux/OakButton';\r\n\r\ninterface Props {    \r\n    sendEvent: Function,\r\n    getAuth: Function,\r\n    addAuth: Function,\r\n    removeAuth: Function,\r\n    authorization: Authorization,\r\n    getProfile: Function,\r\n    setProfile: Function,\r\n    reloadProfile: Function,\r\n    profile: Profile,\r\n    login: Function,\r\n    transparent: boolean,\r\n    logout: Function,\r\n    toggleSettings: any,\r\n    history: any,\r\n    location: any,\r\n    match: any\r\n}\r\n\r\ninterface State {\r\n    visible: boolean,\r\n    mobilemenu: string,\r\n    chooseTheme: boolean,\r\n    showSettings: boolean,\r\n    transparentNavBar: boolean,\r\n    firstLoad: boolean\r\n}\r\n\r\nclass Navigation extends Component<Props, State> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.props.getProfile();\r\n        this.state = {\r\n            visible: false,\r\n            mobilemenu: 'hide',\r\n            chooseTheme: false,\r\n            showSettings: false,\r\n            transparentNavBar: false,\r\n            firstLoad: true\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        receiveMessage().subscribe(\r\n            message => {\r\n                if (message.name === 'navbar-transparency') {\r\n                    this.setState({\r\n                        transparentNavBar: message.signal\r\n                    })\r\n                }\r\n\r\n                if (message.name === 'loggedin') {\r\n                    this.props.reloadProfile(this.props.authorization);\r\n                    this.setState({\r\n                        firstLoad: false\r\n                    })\r\n                }\r\n\r\n                if (message.name === 'loggedout') {\r\n                    this.props.history.push('/home');\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (this.state.firstLoad && nextProps.authorization && nextProps.authorization.isAuth) {\r\n            this.props.reloadProfile(nextProps.authorization);\r\n            this.setState({\r\n                firstLoad: false\r\n            })\r\n        }\r\n    }\r\n\r\n    toggleDarkMode = () => {\r\n        if (this.props.profile.theme === 'theme_dark') {\r\n            this.props.setProfile({\r\n                ...this.props.profile,\r\n                theme: 'theme_light'\r\n            })   \r\n        } else  {\r\n            this.props.setProfile({\r\n                ...this.props.profile,\r\n                theme: 'theme_dark'\r\n            })   \r\n        }\r\n    }\r\n\r\n    changeTextSize = (size) => {\r\n        this.props.setProfile({\r\n            ...this.props.profile,\r\n            textSize: size\r\n        })\r\n    }\r\n\r\n    changeThemeColor = (color) => {\r\n        this.props.setProfile({\r\n            ...this.props.profile,\r\n            themeColor: color\r\n        })\r\n    }\r\n\r\n    login = (type) => {\r\n        this.props.history.push('/login?type=' + type);\r\n    }\r\n\r\n    toggleSettings = () => {\r\n        this.setState({\r\n            showSettings: !this.state.showSettings\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"nav\">\r\n                <Desktop {...this.props} logout={this.props.logout} login={this.login} toggleSettings={this.toggleSettings} transparent={this.state.transparentNavBar} />\r\n                <Mobile {...this.props} logout={this.props.logout} login={this.login} toggleSettings={this.toggleSettings} transparent={this.state.transparentNavBar} />\r\n\r\n                <OakDialog visible={this.state.showSettings} toggleVisibility={this.toggleSettings}>\r\n                    <div className=\"dialog-body\">\r\n                        <div className=\"settings\">\r\n                            <div>Dark mode</div>\r\n                            <div>\r\n                                <Switch\r\n                                checked={this.props.profile.theme === 'theme_dark'}\r\n                                onChange={this.toggleDarkMode}\r\n                                inputProps={{ 'aria-label': 'primary checkbox' }}/>\r\n                            </div>\r\n                            \r\n                            <div>Text Size</div>\r\n                            <div>\r\n                                <div className={\"text-size size-1 space-right-1 \" + (this.props.profile.textSize === 'textsize_tiny' ? 'active' : '')} onClick={() => this.changeTextSize('textsize_tiny')}>Az</div>\r\n                                <div className={\"text-size size-2 space-right-1 \" + (this.props.profile.textSize === 'textsize_small' ? 'active' : '')} onClick={() => this.changeTextSize('textsize_small')}>Az</div>\r\n                                <div className={\"text-size size-3 space-right-1 \" + (this.props.profile.textSize === 'textsize_medium' ? 'active' : '')} onClick={() => this.changeTextSize('textsize_medium')}>Az</div>\r\n                                <div className={\"text-size size-4 \" + (this.props.profile.textSize === 'textsize_large' ? 'active' : '')} onClick={() => this.changeTextSize('textsize_large')}>Az</div>\r\n                            </div>\r\n\r\n                            <div className=\"typography-5\">Color Scheme</div>\r\n                            <div>\r\n                                <div className=\"theme-color color-1\" onClick={() => this.changeThemeColor('themecolor_1')}><i className=\"material-icons\">{this.props.profile.themeColor === 'themecolor_1' && 'check'}</i></div>\r\n                                <div className=\"theme-color color-2\" onClick={() => this.changeThemeColor('themecolor_2')}><i className=\"material-icons\">{this.props.profile.themeColor === 'themecolor_2' && 'check'}</i></div>\r\n                                <div className=\"theme-color color-3\" onClick={() => this.changeThemeColor('themecolor_3')}><i className=\"material-icons\">{this.props.profile.themeColor === 'themecolor_3' && 'check'}</i></div>\r\n                                <div className=\"theme-color color-4\" onClick={() => this.changeThemeColor('themecolor_4')}><i className=\"material-icons\">{this.props.profile.themeColor === 'themecolor_4' && 'check'}</i></div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"dialog-footer\">\r\n                        <OakButton theme=\"primary\" variant=\"animate none\" action={this.toggleSettings}>Close</OakButton>\r\n                    </div>\r\n                </OakDialog>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    profile: state.profile\r\n})\r\n\r\nexport default connect(mapStateToProps, { getProfile, setProfile, reloadProfile })(withRouter(Navigation));","import React from 'react';\r\nimport { getProfile, setProfile, persistProfile } from '../../actions/ProfileActions';\r\nimport './style.scss';\r\nimport View from '../Ux/View';\r\nimport ViewResolver from '../Ux/ViewResolver';\r\nimport { Switch } from '@material-ui/core';\r\nimport { connect } from 'react-redux';\r\nimport {importBookmarks} from '../Bookmarks/BookmarkService';\r\nimport { isEmptyOrSpaces } from '../Utils';\r\nimport {signin, updateUserDetails, preSignin} from '../Auth/AuthService';\r\nimport { Authorization, Profile } from '../Types/GeneralTypes';\r\nimport { sendMessage } from '../../events/MessageService';\r\nimport { httpGet } from \"../Lib/RestTemplate\";\r\nimport {constants} from \"../Constants\";\r\nimport {sendBookmarkExportEmail} from \"./SettingsService\";\r\nimport OakText from \"../Ux/OakText\";\r\nimport OakButton from \"../Ux/OakButton\";\r\n\r\ninterface Props {\r\n  profile: Profile,\r\n  getProfile: Function,\r\n  setProfile: Function,\r\n  persistProfile: Function,\r\n  authorization: Authorization\r\n}\r\n\r\ninterface State {\r\n  oldPassword: string,\r\n  newPassword: string,\r\n  repeatPassword: string,\r\n  name: string,\r\n  email: string,\r\n  data:any\r\n}\r\n\r\nclass Settings extends React.Component<Props, State> {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: '',\r\n      email: '',\r\n      oldPassword: '',\r\n      newPassword: '',\r\n      repeatPassword: '',\r\n      data: []\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      // name: this.props.cookies.get('name'),\r\n      // email: this.props.cookies.get('email')\r\n    })\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    this.setState(\r\n        {\r\n          ...this.state,\r\n            [event.currentTarget.name]: event.currentTarget.value\r\n        }\r\n    )\r\n  }\r\n\r\n  toggleDarkMode = () => {\r\n      if (this.props.profile.theme === 'theme_dark') {\r\n          this.props.persistProfile(this.props.authorization, {\r\n              ...this.props.profile,\r\n              theme: 'theme_light'\r\n          })\r\n      } else  {\r\n          this.props.persistProfile(this.props.authorization, {\r\n              ...this.props.profile,\r\n              theme: 'theme_dark'\r\n          })\r\n      }\r\n  }\r\n\r\n  changeTextSize = (size) => {\r\n      this.props.persistProfile(this.props.authorization, {\r\n          ...this.props.profile,\r\n          textSize: size\r\n      })\r\n  }\r\n\r\n  changeThemeColor = (color) => {\r\n      this.props.persistProfile(this.props.authorization, {\r\n          ...this.props.profile,\r\n          themeColor: color\r\n      })\r\n  }\r\n\r\n  changePassword = () => {\r\n    if (isEmptyOrSpaces(this.state.oldPassword)) {\r\n      sendMessage('notification', true, {message: 'Old password not provided', type: 'failure', duration: 5000});\r\n      return;\r\n    }\r\n\r\n    if (isEmptyOrSpaces(this.state.newPassword) || isEmptyOrSpaces(this.state.repeatPassword)) {\r\n      sendMessage('notification', true, {message: 'New password not provided', type: 'failure', duration: 5000});\r\n      return;\r\n    }\r\n\r\n    if (this.state.newPassword !== this.state.repeatPassword) {\r\n      sendMessage('notification', true, {message: 'New password not provided', type: 'failure', duration: 5000});\r\n      return;\r\n    }\r\n\r\n    this.checkOldPassword('oldpassword');\r\n  }\r\n\r\n  checkOldPassword = (type) => {\r\n    preSignin(this.state.email).then((response) => {\r\n      if (response.status === 200) {\r\n          signin({\r\n              email: this.state.email,\r\n              password: this.state.oldPassword\r\n              }, response.data)\r\n              .then((response) => {\r\n                  if (response.status === 200) {\r\n                      this.updateUserDetailsImpl('password');\r\n                      // sendMessage('notification', true, {message: 'Passphrase updated successfully', type: 'success', duration: 3000});\r\n                  } else if (response.status === 401) {\r\n                      sendMessage('notification', true, {message: 'Incorrect passphrase', type: 'failure', duration: 3000});\r\n                  } else {\r\n                      sendMessage('notification', true, {message: 'Unknown response from server. Please try again or at a later time', type: 'failure', duration: 3000});\r\n                  }\r\n              })\r\n              .catch((error) => {\r\n                  sendMessage('notification', true, {'type': 'failure', message: 'Unknown error. Please try again or at a later time', duration: 3000});\r\n              })\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n\r\n  updateUserDetails = () => {\r\n    if (isEmptyOrSpaces(this.state.name)) {\r\n      sendMessage('notification', true, {message: 'Name not provided', type: 'failure', duration: 5000});\r\n      return;\r\n    }\r\n\r\n    if (isEmptyOrSpaces(this.state.email)) {\r\n      sendMessage('notification', true, {message: 'Email not provided', type: 'failure', duration: 5000});\r\n      return;\r\n    }\r\n\r\n    if (!(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(this.state.email))) {\r\n      sendMessage('notification', true, {type: 'failure', message: 'Email ID is invalid', duration: 3000});\r\n      return;\r\n    }\r\n\r\n    this.updateUserDetailsImpl('user');\r\n\r\n  }\r\n\r\n  updateUserDetailsImpl = (type) => {\r\n    updateUserDetails({\r\n      name: this.state.name,\r\n      email: this.state.email,\r\n      password: this.state.newPassword\r\n    }, this.props.authorization, type)\r\n    .then((response: any) => {\r\n      if (response.status === 201) {\r\n        if (type === 'password') {\r\n          sendMessage('notification', true, {message: 'Password updated successfully', type: 'success', duration: 3000});\r\n        } else{\r\n          // this.props.cookies.set('name', this.state.name);\r\n          // this.props.cookies.set('email', this.state.email);\r\n          sendMessage('notification', true, {message: 'User account updated successfully', type: 'success', duration: 3000});\r\n        }\r\n      } else {\r\n        sendMessage('notification', true, {'type': 'failure', message: 'Unknown error. Please try again or at a later time', duration: 3000});\r\n      }\r\n    })\r\n    .catch((error) => {\r\n        sendMessage('notification', true, {'type': 'failure', message: 'Unknown error. Please try again or at a later time', duration: 3000});\r\n    })\r\n  }\r\n\r\n  fileChoosen = (event) => {\r\n    event.preventDefault();\r\n    const that = this;\r\n    var reader = new FileReader();\r\n    sendMessage('spinner');\r\n    reader.onload = function(event: any) {\r\n      importBookmarks({\r\n        content: event.target.result\r\n      }, that.props.authorization.token)\r\n      .then(function(response) {\r\n        sendMessage('notification', true, {message: 'Imported (' + response.data.length + ') bookmarks successfully', type: 'success', duration: 6000});\r\n      });\r\n    }\r\n    reader.readAsText(event.target.files[0]);\r\n    event.target.value = '';\r\n  }\r\n\r\n  exportBookmark = () => {\r\n    const that = this;\r\n    httpGet(constants.API_URL_BOOKMARK,\r\n        {\r\n          headers: {\r\n            Authorization: 'Bearer ' + that.props.authorization.token\r\n          }\r\n        }, that.props.authorization.password)\r\n        .then(function(response) {\r\n          let staticContent = '<META HTTP-EQUIV=\"Content-Type\" CONTENT=\"text/html;' +\r\n              ' charset=UTF-8\"><TITLE>Bookmarks</TITLE><H1>Bookmarks</H1>';\r\n\r\n          that.setState({data: response.data});\r\n\r\n          that.state.data.map(function(bookmark, i){\r\n            let htmlContent = '<DL><p>' + '<DT>' + '<A ' + 'HREF=\"' + bookmark.href + '\">' + bookmark.title + '</A>' + '</DL><p>';\r\n            staticContent = staticContent+htmlContent;\r\n          })\r\n\r\n          console.log(staticContent);\r\n          that.sendExportEmail(staticContent);\r\n        }\r\n        );\r\n\r\n  }\r\n  sendExportEmail = (staticContent) => {\r\n\r\n    sendBookmarkExportEmail({\r\n          email: this.state.email,\r\n          content: staticContent\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: 'Bearer ' + this.props.authorization.token\r\n          }\r\n        })\r\n        .then((response: any) => {\r\n          if (response === 200) {\r\n            sendMessage('notification', true, {message: 'Check your mail for bookmark attachment', type: 'success', duration: 3000});\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          sendMessage('notification', true, {'type': 'failure', message: 'Bad request', duration: 3000});\r\n        })\r\n  }\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"settings\">\r\n        <ViewResolver sideLabel='More options'>\r\n          <View main>\r\n          <div className=\"typography-3\">Import Bookmarks</div>\r\n          <div className=\"space-top-2\">\r\n            <label className=\"file-upload\">\r\n              <input type=\"file\" name=\"file\" onChange={this.fileChoosen} />\r\n              Import\r\n            </label>\r\n          </div>\r\n\r\n\r\n          <div className=\"typography-3 space-top-4\">Export Bookmarks</div>\r\n          <div className=\"space-top-2 space-left-2\"><OakButton theme=\"secondary\" variant=\"animate in\" action={this.exportBookmark}>Export</OakButton></div>\r\n\r\n\r\n          <div className=\"typography-3 space-top-4\">Appearance</div>\r\n          <div className=\"appearance\">\r\n            <div className=\"typography-5\">Dark mode</div>\r\n            <div>\r\n                <Switch\r\n                checked={this.props.profile.theme === 'theme_dark'}\r\n                onChange={this.toggleDarkMode}\r\n                inputProps={{ 'aria-label': 'primary checkbox' }}/>\r\n            </div>\r\n\r\n            <div className=\"typography-5 space-bottom-2\">Text Size</div>\r\n            <div className=\" space-bottom-2\">\r\n              <div className={\"text-size size-1 space-right-1 \" + (this.props.profile.textSize === 'textsize_tiny' ? 'active' : '')}  onClick={() => this.changeTextSize('textsize_tiny')}>Az</div>\r\n              <div className={\"text-size size-2 space-right-1 \" + (this.props.profile.textSize === 'textsize_small' ? 'active' : '')}  onClick={() => this.changeTextSize('textsize_small')}>Az</div>\r\n              <div className={\"text-size size-3 space-right-1 \" + (this.props.profile.textSize === 'textsize_medium' ? 'active' : '')} onClick={() => this.changeTextSize('textsize_medium')}>Az</div>\r\n              <div className={\"text-size size-4 \" + (this.props.profile.textSize === 'textsize_large' ? 'active' : '')} onClick={() => this.changeTextSize('textsize_large')}>Az</div>\r\n            </div>\r\n\r\n            <div className=\"typography-5\">Color Scheme</div>\r\n            <div>\r\n              <div className=\"theme-color color-1\" onClick={() => this.changeThemeColor('themecolor_1')}><i className=\"material-icons\">{this.props.profile.themeColor === 'themecolor_1' && 'check'}</i></div>\r\n              <div className=\"theme-color color-2\" onClick={() => this.changeThemeColor('themecolor_2')}><i className=\"material-icons\">{this.props.profile.themeColor === 'themecolor_2' && 'check'}</i></div>\r\n              <div className=\"theme-color color-3\" onClick={() => this.changeThemeColor('themecolor_3')}><i className=\"material-icons\">{this.props.profile.themeColor === 'themecolor_3' && 'check'}</i></div>\r\n              <div className=\"theme-color color-4\" onClick={() => this.changeThemeColor('themecolor_4')}><i className=\"material-icons\">{this.props.profile.themeColor === 'themecolor_4' && 'check'}</i></div>\r\n              <div className=\"theme-color color-5\" onClick={() => this.changeThemeColor('themecolor_5')}><i className=\"material-icons\">{this.props.profile.themeColor === 'themecolor_5' && 'check'}</i></div>\r\n              <div className=\"theme-color color-6\" onClick={() => this.changeThemeColor('themecolor_6')}><i className=\"material-icons\">{this.props.profile.themeColor === 'themecolor_6' && 'check'}</i></div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"typography-3 space-top-4\">User Account</div>\r\n          <div><OakText label=\"Name\" data={this.state} id=\"name\" handleChange={e => this.handleChange(e)} /></div>\r\n          <div><OakText label=\"Email\" data={this.state} id=\"email\" handleChange={e => this.handleChange(e)} /></div>\r\n          <div className=\"space-top-1\"><OakButton theme=\"secondary\" variant=\"animate in\" action={this.updateUserDetails}>Update details</OakButton></div>\r\n\r\n          <div className=\"typography-3 space-top-4\">Password</div>\r\n          <div><OakText type=\"password\" label=\"Old Password\" data={this.state} id=\"oldPassword\" handleChange={e => this.handleChange(e)} /></div>\r\n          <div><OakText type=\"password\" label=\"New Password\" data={this.state} id=\"newPassword\" handleChange={e => this.handleChange(e)} /></div>\r\n          <div><OakText type=\"password\" label=\"Repeat New Password\" data={this.state} id=\"repeatPassword\" handleChange={e => this.handleChange(e)} /></div>\r\n          <div className=\"space-top-1\"><OakButton theme=\"secondary\" variant=\"animate in\" action={this.changePassword}>Change Password</OakButton></div>\r\n          </View>\r\n        </ViewResolver>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  profile: state.profile\r\n})\r\n\r\nexport default connect(mapStateToProps, { getProfile, setProfile, persistProfile })(Settings);","import { httpPost } from \"../Lib/RestTemplate\";\r\nimport { constants } from '../Constants';\r\n\r\nexport function importBookmarks(data, token) {\r\n    console.log(data);\r\n    return httpPost(constants.API_URL_BOOKMARK_IMPORT, data,\r\n        {\r\n            headers: {\r\n                Authorization: 'Bearer ' + token\r\n            }\r\n        })\r\n        .then(function(response) {\r\n            return Promise.resolve(response);\r\n        })\r\n}\r\n\r\n","import { httpPost } from \"../Lib/RestTemplate\";\r\nimport { constants } from '../Constants';\r\n\r\nexport function sendBookmarkExportEmail(data, token) {\r\n\r\n    return httpPost(constants.API_URL_MAIL, data,\r\n        {\r\n            headers: {\r\n                Authorization: 'Bearer ' + token\r\n            }\r\n        })\r\n        .then(function(response) {\r\n            return Promise.resolve(response.status);\r\n        })\r\n}\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getAuth, addAuth, removeAuth } from '../../actions/AuthActions';\r\nimport './Login.scss';\r\nimport { resetPassword } from './AuthService';\r\nimport { sendMessage } from '../../events/MessageService';\r\nimport {isEmptyOrSpaces} from \"../Utils\";\r\nimport OakText from \"../Ux/OakText\";\r\nimport OakButton from \"../Ux/OakButton\";\r\n\r\nconst queryString = require('query-string');\r\n\r\ninterface Props {\r\n    history: any,\r\n    location: any\r\n}\r\n\r\ninterface State {\r\n    password: string;\r\n    repeatPassword: string;\r\n    resetCode: string;\r\n}\r\n\r\nclass ResetPassword extends Component<Props, State> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            password: '',\r\n            repeatPassword: '',\r\n            resetCode:''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.location.search) {\r\n            const query = queryString.parse(this.props.location.search);\r\n            if (query.code) {\r\n                this.setState({\r\n                    resetCode: query.code\r\n                })\r\n            }else {\r\n                this.props.history.push(\"/home\");\r\n            }\r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState(\r\n            {\r\n                ...this.state,\r\n                [event.currentTarget.name]: event.currentTarget.value\r\n            }\r\n        )\r\n    }\r\n\r\n    changePassword = () => {\r\n        if (isEmptyOrSpaces(this.state.password)) {\r\n            sendMessage('notification', true, {message: 'password not provided', type: 'failure', duration: 5000});\r\n            return;\r\n        }\r\n\r\n        if (isEmptyOrSpaces(this.state.repeatPassword) || isEmptyOrSpaces(this.state.repeatPassword)) {\r\n            sendMessage('notification', true, {message: 'Repeat password not provided', type: 'failure', duration: 5000});\r\n            return;\r\n        }\r\n\r\n        if (this.state.password !== this.state.repeatPassword) {\r\n            sendMessage('notification', true, {message: 'Password is not matching', type: 'failure', duration: 5000});\r\n            return;\r\n        }\r\n\r\n        this.resetPassword('password');\r\n\r\n    }\r\n\r\n    resetPassword = (type) => {\r\n        resetPassword({\r\n            password: this.state.password,\r\n            resetCode: this.state.resetCode\r\n        }, type)\r\n            .then((response: any) => {\r\n                if (response === 200) {\r\n                    if (type === 'password') {\r\n                        sendMessage('notification', true, {message: 'Password Changed successfully', type: 'success', duration: 3000});\r\n                    }\r\n                } else {\r\n                    sendMessage('notification', true, {'type': 'failure', message: 'Invalid request', duration: 3000});\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                sendMessage('notification', true, {'type': 'failure', message: 'Bad request', duration: 3000});\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"login\">\r\n                <div className=\"container\">\r\n                    <form method=\"GET\" onSubmit={this.changePassword} noValidate>\r\n                        <h1>Reset password</h1>\r\n                        <div className=\"form\">\r\n                        <OakText label=\"Password\" id=\"password\" type=\"password\" data={this.state} handleChange={e => this.handleChange(e)} />\r\n                            <OakText label=\"Repeat Password\" id=\"repeatPassword\" type=\"password\" data={this.state} handleChange={e => this.handleChange(e)} />\r\n                        </div>\r\n                        <br />\r\n                        <OakButton theme=\"primary\" variant=\"block\" action={this.changePassword}>Submit</OakButton>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    authorization: state.authorization\r\n})\r\n\r\nexport default connect(mapStateToProps, { getAuth, addAuth, removeAuth })(ResetPassword);\r\n","import React, { Component } from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport './style.scss';\r\nimport Home from '../Home';\r\nimport Bookmarks from '../Bookmarks';\r\nimport Notes from '../Notes';\r\nimport { HashRouter } from 'react-router-dom/cjs/react-router-dom.min';\r\nimport Login from '../Auth/Login';\r\nimport PrivateRoute from '../Auth/PrivateRoute';\r\nimport AuthInit from '../Auth/AuthInit';\r\nimport { connect } from 'react-redux';\r\nimport { getAuth, addAuth, removeAuth } from '../../actions/AuthActions';\r\nimport { getProfile } from '../../actions/ProfileActions';\r\n\r\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\nimport Backdrop from './Backdrop';\r\nimport Notification from '../Notification';\r\nimport Navigation from '../Navigation';\r\nimport Settings from '../Settings';\r\nimport { Authorization } from '../Types/GeneralTypes';\r\nimport { sendMessage } from '../../events/MessageService';\r\nimport ResetPassword from '../Auth/ResetPassword';\r\n\r\nconst themes = {\r\n    'themecolor_1': getTheme('#C4005B'),\r\n    'themecolor_2': getTheme('#803BC2'),\r\n    'themecolor_3': getTheme('#E74443'),\r\n    'themecolor_4': getTheme('#29BE3B'),\r\n    'themecolor_5': getTheme('#ffe20f'),\r\n    'themecolor_6': getTheme('#4d4dff')\r\n}\r\n\r\nfunction getTheme(color) {\r\n    return createMuiTheme({\r\n        palette: {\r\n          primary: {\r\n              main: color         \r\n          },\r\n          secondary: {\r\n              main: color\r\n          }\r\n        }\r\n      });\r\n}\r\n\r\ninterface Props {\r\n    getProfile: Function,\r\n    setProfile: Function,\r\n    getAuth: Function,\r\n    addAuth: Function,\r\n    removeAuth: Function,\r\n    history: any,\r\n\r\n    // event: PropTypes.object,\r\n    profile: any,\r\n    authorization: Authorization\r\n}\r\n\r\ninterface State {\r\n    authorization: Authorization,\r\n    profile: any,\r\n    event: any\r\n}\r\n\r\nclass Content extends Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.props.getProfile();\r\n        this.props.getAuth();\r\n    }\r\n    \r\n    logout = (event, type = 'success', message = 'You have been logged out') => {\r\n        this.props.removeAuth();\r\n        sendMessage('notification', true, {type: type, message: message, duration: 3000});\r\n        sendMessage('loggedout', true);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={\"App \" + this.props.profile.theme + \" \" + this.props.profile.textSize + \" \" + this.props.profile.themeColor}>\r\n                \r\n                <HashRouter>\r\n                    <AuthInit {...this.props} />\r\n                    <Backdrop />\r\n                    <div className=\"body\">\r\n                        <div className=\"body-content\">\r\n                            <Notification />\r\n                            <MuiThemeProvider theme={themes[this.props.profile.themeColor]}>\r\n                                <Navigation {...this.props} logout={() => this.logout}/>\r\n                                <Route exact path=\"/\" render={(props) => <Home {...props} {...this.props} logout={() => this.logout}/>} />\r\n                                <Route path=\"/home\" render={(props) => <Home {...props} {...this.props} logout={() => this.logout}/>} />\r\n                                <Route path=\"/login\" render={(props) => <Login {...props} {...this.props} logout={() => this.logout}/>} />\r\n                                <Route path=\"/reset\" render={(props) => <ResetPassword {...props} {...this.props} logout={() => this.logout}/>} />\r\n                                <PrivateRoute path=\"/bookmarks\" render={(props) => <Bookmarks {...props} {...this.props} logout={this.logout} />} />\r\n                                <PrivateRoute path=\"/notes\" render={(props) => <Notes {...props} {...this.props} logout={() => this.logout} />} />\r\n                                <PrivateRoute path=\"/settings\" render={(props) => <Settings {...props} {...this.props} logout={() => this.logout}/>} />\r\n                            </MuiThemeProvider>\r\n                        </div>\r\n                    </div>\r\n                </HashRouter>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  authorization: state.authorization,\r\n  profile: state.profile\r\n})\r\n\r\nexport default connect(mapStateToProps, { getAuth, addAuth, removeAuth, getProfile })(Content);\r\n","import React, { Component } from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport store from '../../store';\r\nimport './style.scss';\r\nimport './button-notched.scss';\r\nimport './metric.scss';\r\nimport Content from './Content';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Provider store={store}>\r\n        <Content {...this.props} />\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/protekt_white.0157e466.svg\";","module.exports = __webpack_public_path__ + \"static/media/protekt_black.f386b1d6.svg\";"],"sourceRoot":""}